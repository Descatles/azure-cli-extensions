# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

import os
import unittest

from azure_devtools.scenario_tests import AllowLargeResponse
from azure.cli.testsdk import ScenarioTest
from .. import try_manual
from azure.cli.testsdk import ResourceGroupPreparer


TEST_DIR = os.path.abspath(os.path.join(os.path.abspath(__file__), '..'))


@try_manual
def setup(test, rg, rg_2, rg_3):
    pass


# EXAMPLE: Create or update automation account
@try_manual
def step_create_or_update_automation_account(test, rg, rg_2, rg_3):
    test.cmd('az automation automation-account create '
             '--automation-account-name "{myAutomationAccount9}" '
             '--name "myAutomationAccount9" '
             '--location "East US 2" '
             '--sku name="Free" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Create job
@try_manual
def step_create_job(test, rg, rg_2, rg_3):
    test.cmd('az automation job create '
             '--automation-account-name "{AutomationAccount_2}" '
             '--job-name "{foo}" '
             '--parameters properties={{"parameters":{{"key01":"value01","key02":"value02"}},"runOn":"","runbook":{{"na'
             'me":"TestRunbook"}}}} '
             '--resource-group "{rg_2}"',
             checks=[])


# EXAMPLE: Create or update a module
@try_manual
def step_create_or_update_a_module(test, rg, rg_2, rg_3):
    test.cmd('az automation module create '
             '--automation-account-name "{AutomationAccount_3}" '
             '--module-name "{OmsCompositeResources}" '
             '--content-link "{{\\"contentHash\\":{{\\"algorithm\\":\\"sha265\\",\\"value\\":\\"07E108A962B81DD9C9BAA89'
             'BB47C0F6EE52B29E83758B07795E408D258B2B87A\\"}},\\"uri\\":\\"https://teststorage.blob.core.windows.net/dsc'
             'composite/OmsCompositeResources.zip\\",\\"version\\":\\"1.0.0.0\\"}}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Create or update webhook
@try_manual
def step_create_or_update_webhook(test, rg, rg_2, rg_3):
    test.cmd('az automation webhook create '
             '--automation-account-name "{AutomationAccount_3}" '
             '--parameters name="TestWebhook" properties={{"expiryTime":"2018-03-29T22:18:13.7002872Z","isEnabled":true'
             ',"runbook":{{"name":"TestRunbook"}},"uri":"https://s1events.azure-automation.net/webhooks?token '
             '--resource-group "{rg}" '
             '--webhook-name "{TestWebhook}"',
             checks=[])


# EXAMPLE: Create runbook as draft
@try_manual
def step_create_runbook_as_draft(test, rg, rg_2, rg_3):
    test.cmd('az automation runbook create '
             '--automation-account-name "{AutomationAccount_2}" '
             '--name "Get-AzureVMTutorial" '
             '--location "East US 2" '
             '--description "Description of the Runbook" '
             '--draft "{{}}" '
             '--log-progress false '
             '--log-verbose false '
             '--runbook-type "PowerShellWorkflow" '
             '--tags tag01="value01" tag02="value02" '
             '--resource-group "{rg}" '
             '--runbook-name "{Get-AzureVMTutorial}"',
             checks=[])


# EXAMPLE: Create or update runbook and publish it
@try_manual
def step_create_or_update_runbook_and_publish_it(test, rg, rg_2, rg_3):
    test.cmd('az automation runbook create '
             '--automation-account-name "{AutomationAccount_2}" '
             '--name "Get-AzureVMTutorial" '
             '--location "East US 2" '
             '--description "Description of the Runbook" '
             '--log-activity-trace 1 '
             '--log-progress true '
             '--log-verbose false '
             '--publish-content-link "{{\\"contentHash\\":{{\\"algorithm\\":\\"SHA256\\",\\"value\\":\\"115775B8FF2BE67'
             '2D8A946BD0B489918C724DDE15A440373CA54461D53010A80\\"}},\\"uri\\":\\"https://raw.githubusercontent.com/Azu'
             're/azure-quickstart-templates/master/101-automation-runbook-getvms/Runbooks/Get-AzureVMTutorial.ps1\\"}}"'
             ' '
             '--runbook-type "PowerShellWorkflow" '
             '--tags tag01="value01" tag02="value02" '
             '--resource-group "{rg}" '
             '--runbook-name "{Get-AzureVMTutorial}"',
             checks=[])


# EXAMPLE: Create or update watcher
@try_manual
def step_create_or_update_watcher(test, rg, rg_2, rg_3):
    test.cmd('az automation watcher create '
             '--automation-account-name "{AutomationAccount_4}" '
             '--description "This is a test watcher." '
             '--execution-frequency-in-seconds 60 '
             '--script-name "MyTestWatcherRunbook" '
             '--script-run-on "MyTestHybridWorkerGroup" '
             '--resource-group "{rg}" '
             '--watcher-name "{MyTestWatcher}"',
             checks=[])


# EXAMPLE: Create or update a schedule
@try_manual
def step_create_or_update_a_schedule(test, rg, rg_2, rg_3):
    test.cmd('az automation schedule create '
             '--automation-account-name "{AutomationAccount_3}" '
             '--name "mySchedule" '
             '--description "my description of schedule goes here" '
             '--expiry-time "2017-04-01T17:28:57.2494819Z" '
             '--frequency "Hour" '
             '--interval "1" '
             '--start-time "2017-03-27T17:28:57.2494819Z" '
             '--resource-group "{rg}" '
             '--schedule-name "{mySchedule}"',
             checks=[])


# EXAMPLE: Create or update a variable
@try_manual
def step_create_or_update_a_variable(test, rg, rg_2, rg_3):
    test.cmd('az automation variable create '
             '--automation-account-name "{AutomationAccount_5}" '
             '--name "sampleVariable" '
             '--description "my description" '
             '--is-encrypted false '
             '--value "\\"ComputerName.domain.com\\"" '
             '--resource-group "{rg}" '
             '--variable-name "{sampleVariable}"',
             checks=[])


# EXAMPLE: Create a credential
@try_manual
def step_create_a_credential(test, rg, rg_2, rg_3):
    test.cmd('az automation credential create '
             '--automation-account-name "{AutomationAccount_6}" '
             '--credential-name "{myCredential}" '
             '--name "myCredential" '
             '--description "my description goes here" '
             '--password "myPassw0rd" '
             '--user-name "mylingaiah" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Create or update connection
@try_manual
def step_create_or_update_connection(test, rg, rg_2, rg_3):
    test.cmd('az automation connection create '
             '--automation-account-name "{AutomationAccount_7}" '
             '--connection-name "{mysConnection}" '
             '--name "mysConnection" '
             '--description "my description goes here" '
             '--connection-type name="Azure" '
             '--field-definition-values AutomationCertificateName="mysCertificateName" SubscriptionID="subid" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Create or update a certificate
@try_manual
def step_create_or_update_a_certificate(test, rg, rg_2, rg_3):
    test.cmd('az automation certificate create '
             '--automation-account-name "{AutomationAccount_6}" '
             '--certificate-name "{testCert}" '
             '--name "testCert" '
             '--description "Sample Cert" '
             '--base64value "base 64 value of cert" '
             '--is-exportable false '
             '--thumbprint "thumbprint of cert" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Create a job schedule
@try_manual
def step_create_a_job_schedule(test, rg, rg_2, rg_3):
    test.cmd('az automation job-schedule create '
             '--automation-account-name "{AutomationAccount_2}" '
             '--job-schedule-id "0fa462ba-3aa2-4138-83ca-9ebc3bc55cdc" '
             '--parameters properties={{"parameters":{{"jobscheduletag01":"jobschedulevalue01","jobscheduletag02":"jobs'
             'chedulevalue02"}},"runbook":{{"name":"TestRunbook"}},"schedule":{{"name":"ScheduleNameGoesHere332204b5-de'
             'be-4348-a5c7-6357457189f2"}}}} '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Create or Update Configuration
@try_manual
def step_create_or_update_configuration(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-configuration create '
             '--automation-account-name "{AutomationAccount_6}" '
             '--configuration-name "SetupServer" '
             '--parameters "{{\\"name\\":\\"SetupServer\\",\\"location\\":\\"East US 2\\",\\"properties\\":{{\\"descrip'
             'tion\\":\\"sample configuration\\",\\"source\\":{{\\"type\\":\\"embeddedContent\\",\\"hash\\":{{\\"algori'
             'thm\\":\\"sha256\\",\\"value\\":\\"A9E5DB56BA21513F61E0B3868816FDC6D4DF5131F5617D7FF0D769674BD5072F\\"}},'
             '\\"value\\":\\"Configuration SetupServer {{\\\\r\\\\n    Node localhost {{\\\\r\\\\n                     '
             '          WindowsFeature IIS {{\\\\r\\\\n                               Name = \\\\\\"Web-Server\\\\\\";'
             '\\\\r\\\\n            Ensure = \\\\\\"Present\\\\\\"\\\\r\\\\n        }}\\\\r\\\\n    }}\\\\r\\\\n}}\\"}}'
             '}}}}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Create or update a source control
@try_manual
def step_create_or_update_a_source_control(test, rg, rg_2, rg_3):
    test.cmd('az automation source-control create '
             '--automation-account-name "{AutomationAccount_5}" '
             '--description "my description" '
             '--auto-sync true '
             '--branch "master" '
             '--folder-path "/folderOne/folderTwo" '
             '--publish-runbook true '
             '--repo-url "https://sampleUser.visualstudio.com/myProject/_git/myRepository" '
             '--security-token access-token="3a326f7a0dcd343ea58fee21f2fd5fb4c1234567" token-type="PersonalAccessToken"'
             ' '
             '--source-type "VsoGit" '
             '--resource-group "{rg}" '
             '--source-control-name "{sampleSourceControl}"',
             checks=[])


# EXAMPLE: Create or update a python 2 package
@try_manual
def step_create_or_update_a_python_2_package(test, rg, rg_2, rg_3):
    test.cmd('az automation python2-package create '
             '--automation-account-name "{AutomationAccount_3}" '
             '--package-name "OmsCompositeResources" '
             '--content-link "{{\\"contentHash\\":{{\\"algorithm\\":\\"sha265\\",\\"value\\":\\"07E108A962B81DD9C9BAA89'
             'BB47C0F6EE52B29E83758B07795E408D258B2B87A\\"}},\\"uri\\":\\"https://teststorage.blob.core.windows.net/dsc'
             'composite/OmsCompositeResources.zip\\",\\"version\\":\\"1.0.0.0\\"}}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Create or update a DSC Compilation job
@try_manual
def step_create_or_update_a_dsc_compilation_job(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-compilation-job create '
             '--automation-account-name "{AutomationAccount_3}" '
             '--compilation-job-name "TestCompilationJob" '
             '--parameters properties={{"configuration":{{"name":"SetupServer"}}}} '
             '--resource-group "{rg}"',
             checks=[])
    test.cmd('az automation dsc-compilation-job wait --created '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Create or update connection type
@try_manual
def step_create_or_update_connection_type(test, rg, rg_2, rg_3):
    test.cmd('az automation connection-type create '
             '--automation-account-name "{AutomationAccount_8}" '
             '--connection-type-name "{myCT}" '
             '--name "myCT" '
             '--field-definitions "{{\\"myBoolField\\":{{\\"type\\":\\"bool\\",\\"isEncrypted\\":false,\\"isOptional\\"'
             ':false}},\\"myStringField\\":{{\\"type\\":\\"string\\",\\"isEncrypted\\":false,\\"isOptional\\":false}},'
             '\\"myStringFieldEncrypted\\":{{\\"type\\":\\"string\\",\\"isEncrypted\\":true,\\"isOptional\\":false}}}}"'
             ' '
             '--is-global false '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Create node configuration
@try_manual
def step_create_node_configuration(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-node-configuration create '
             '--automation-account-name "{AutomationAccount_9}" '
             '--node-configuration-name "configName.nodeConfigName" '
             '--name "configName.nodeConfigName" '
             '--configuration name="configName" '
             '--increment-node-configuration-build true '
             '--source "{{\\"type\\":\\"embeddedContent\\",\\"hash\\":{{\\"algorithm\\":\\"sha256\\",\\"value\\":\\"6DE'
             '256A57F01BFA29B88696D5E77A383D6E61484C7686E8DB955FA10ACE9FFE5\\"}},\\"value\\":\\"\\\\r\\\\ninstance of M'
             'SFT_RoleResource as $MSFT_RoleResource1ref\\\\r\\\\n{{\\\\r\\\\nResourceID = \\\\\\"[WindowsFeature]IIS\\'
             '\\\\";\\\\r\\\\n Ensure = \\\\\\"Present\\\\\\";\\\\r\\\\n SourceInfo = \\\\\\"::3::32::WindowsFeature\\'
             '\\\\";\\\\r\\\\n Name = \\\\\\"Web-Server\\\\\\";\\\\r\\\\n ModuleName = \\\\\\"PsDesiredStateConfigurati'
             'on\\\\\\";\\\\r\\\\n\\\\r\\\\nModuleVersion = \\\\\\"1.0\\\\\\";\\\\r\\\\r\\\\n ConfigurationName = \\\\'
             '\\"configName\\\\\\";\\\\r\\\\r\\\\n}};\\\\r\\\\ninstance of OMI_ConfigurationDocument\\\\r\\\\n\\\\r\\\\'
             'r\\\\n                    {{\\\\r\\\\n Version=\\\\\\"2.0.0\\\\\\";\\\\r\\\\n \\\\r\\\\r\\\\n            '
             '            MinimumCompatibleVersion = \\\\\\"1.0.0\\\\\\";\\\\r\\\\n \\\\r\\\\r\\\\n                    '
             '    CompatibleVersionAdditionalProperties= {{\\\\\\"Omi_BaseResource:ConfigurationName\\\\\\"}};\\\\r\\\\'
             'n \\\\r\\\\r\\\\n                        Author=\\\\\\"weijiel\\\\\\";\\\\r\\\\n \\\\r\\\\r\\\\n         '
             '               GenerationDate=\\\\\\"03/30/2017 13:40:25\\\\\\";\\\\r\\\\n \\\\r\\\\r\\\\n               '
             '         GenerationHost=\\\\\\"TEST-BACKEND\\\\\\";\\\\r\\\\n \\\\r\\\\r\\\\n                        Name'
             '=\\\\\\"configName\\\\\\";\\\\r\\\\n\\\\r\\\\r\\\\n                    }};\\\\r\\\\n\\",\\"version\\":\\"'
             '1.0\\"}}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Create or update runbook draft
@try_manual
def step_create_or_update_runbook_draft(test, rg, rg_2, rg_3):
    test.cmd('az automation runbook-draft replace-content '
             '--automation-account-name "{AutomationAccount_2}" '
             '--resource-group "{rg}" '
             '--runbook-content "<#\\r\\n        .DESCRIPTION\\r\\n            An example runbook which prints out the '
             'first10 Azure VMs in your subscription (ordered alphabetically).\\r\\n            For more information ab'
             'out how this runbook authenticates to your Azure subscription, see our documentation here: http: //aka.ms'
             '/fxu3mn\\r\\n\\r\\n        .NOTES\\r\\n            AUTHOR: Azure Automation Team\\r\\n            LASTEDI'
             'T: Mar27,\\r\\n            2015\\r\\n    #>\\r\\n    workflow Get-AzureVMTutorial{\\r\\n        #The name'
             ' of the Automation Credential Asset this runbook will use to authenticate to Azure.\\r\\n        $Credent'
             'ialAssetName = \'DefaultAzureCredential\'\\r\\n\\r\\n        #Get the credential with the above name from'
             ' the Automation Asset store\\r\\n        $Cred = Get-AutomationPSCredential -Name $CredentialAssetName\\r'
             '\\n        if(!$Cred){\\r\\n            Throw\\"Could not find an Automation Credential Asset named \'${C'
             'redentialAssetName}\'. Make sure you have created one in this Automation Account.\\"\\r\\n               '
             ' }\\r\\n\\r\\n        #Connect to your Azure Account\\r\\n        $Account = Add-AzureAccount -Credential'
             ' $Cred\\r\\n        if(!$Account){\\r\\n            Throw\\"Could not authenticate to Azure using the cre'
             'dential asset \'${CredentialAssetName}\'. Make sure the user name and password are correct.\\"\\r\\n     '
             '           }\\r\\n\\r\\n        #TODO (optional): pick the right subscription to use. Without this line, '
             'the default subscription for your Azure Account will be used.\\r\\n        #Select-AzureSubscription -Sub'
             'scriptionName\\"TODO: your Azure subscription name here\\"\\r\\n        \\r\\n        #Get all the VMs yo'
             'u have in your Azure subscription\\r\\n        $VMs = Get-AzureVM\\r\\n\\r\\n        #Print out up to10 o'
             'f those VMs\\r\\n        if(!$VMs){\\r\\n            Write-Output\\"No VMs were found in your subscriptio'
             'n.\\"\\r\\n                } else{\\r\\n            Write-Output $VMs[0..9\\r\\n                    ]\\r'
             '\\n                }\\r\\n            }" '
             '--runbook-name "{Get-AzureVMTutorial}"',
             checks=[])


# EXAMPLE: Create test job
@try_manual
def step_create_test_job(test, rg, rg_2, rg_3):
    test.cmd('az automation test-job create '
             '--automation-account-name "{AutomationAccount_2}" '
             '--parameters parameters={{"key01":"value01","key02":"value02"}} runOn="" '
             '--resource-group "{rg_2}" '
             '--runbook-name "{Get-AzureVMTutorial}"',
             checks=[])


# EXAMPLE: Create software update configuration
@try_manual
def step_create_software_update_configuration(test, rg, rg_2, rg_3):
    test.cmd('az automation software-update-configuration create '
             '--automation-account-name "{AutomationAccount_10}" '
             '--tasks-pre-task-parameters properties={{"scheduleInfo":{{"advancedSchedule":{{"weekDays":["Monday","Thur'
             'sday"]}},"expiryTime":"2018-11-09T11:22:57+00:00","frequency":"Hour","interval":1,"startTime":"2017-10-19'
             'T12:22:57+00:00","timeZone":"America/Los_Angeles"}},"tasks":{{"postTask":{{"parameters":null,"source":"Ge'
             'tCache"}},"preTask":{{"parameters":{{"COMPUTERNAME":"Computer1"}},"source":"HelloWorld"}}}},"updateConfig'
             'uration":{{"azureVirtualMachines":["/subscriptions/5ae68d89-69a4-454f-b5ce-e443cc4e0067/resourceGroups/my'
             'resources/providers/Microsoft.Compute/virtualMachines/vm-01","/subscriptions/5ae68d89-69a4-454f-b5ce-e443'
             'cc4e0067/resourceGroups/myresources/providers/Microsoft.Compute/virtualMachines/vm-02","/subscriptions/5a'
             'e68d89-69a4-454f-b5ce-e443cc4e0067/resourceGroups/myresources/providers/Microsoft.Compute/virtualMachines'
             '/vm-03"],"duration":"PT2H0M","nonAzureComputerNames":["box1.contoso.com","box2.contoso.com"],"operatingSy'
             'stem":"Windows","targets":{{"azureQueries":[{{"locations":["Japan East","UK South"],"scope":["/subscripti'
             'ons/5ae68d89-69a4-454f-b5ce-e443cc4e0067/resourceGroups/myresources","/subscriptions/5ae68d89-69a4-454f-b'
             '5ce-e443cc4e0067"],"tagSettings":{{"filterOperator":"All","tags":[{{"tag1":["tag1Value1","tag1Value2","ta'
             'g1Value3"]}},{{"tag2":["tag2Value1","tag2Value2","tag2Value3"]}}]}}}}],"nonAzureQueries":[{{"functionAlia'
             's":"SavedSearch1","workspaceId":"WorkspaceId1"}},{{"functionAlias":"SavedSearch2","workspaceId":"Workspac'
             'eId2"}}]}},"windows":{{"excludedKbNumbers":["168934","168973"],"includedUpdateClassifications":"Critical"'
             ',"rebootSetting":"IfRequired"}}}}}} '
             '--resource-group "{rg_2}" '
             '--software-update-configuration-name "{testpatch}"',
             checks=[])


# EXAMPLE: Create or update a source control sync job
@try_manual
def step_create_or_update_a_source_control_sync_job(test, rg, rg_2, rg_3):
    test.cmd('az automation source-control-sync-job create '
             '--automation-account-name "{AutomationAccount_3}" '
             '--commit-id "9de0980bfb45026a3d97a1b0522d98a9f604226e" '
             '--resource-group "{rg}" '
             '--source-control-name "{SourceControl_2}" '
             '--source-control-sync-job-id "ce6fe3e3-9db3-4096-a6b4-82bfb4c10a9a"',
             checks=[])


# EXAMPLE: Get a sync job stream identified by sync job stream id.
@try_manual
def step_get_a_sync_job_stream_identified_by_sync_job_stream_id_(test, rg, rg_2, rg_3):
    test.cmd('az automation source-control-sync-job-stream show '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}" '
             '--source-control-name "{SourceControl_2}" '
             '--source-control-sync-job-id "ce6fe3e3-9db3-4096-a6b4-82bfb4c10a2b" '
             '--stream-id "b86c5c31-e9fd-4734-8764-ddd6c101e706_00636596855139029522_00000000000000000007"',
             checks=[])


# EXAMPLE: Get a list of sync job streams identified by sync job id
@try_manual
def step_get_a_list_of_sync_job_streams_identified_by_sync_job_id(test, rg, rg_2, rg_3):
    test.cmd('az automation source-control-sync-job-stream list '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}" '
             '--source-control-name "{SourceControl_2}" '
             '--source-control-sync-job-id "ce6fe3e3-9db3-4096-a6b4-82bfb4c10a2b"',
             checks=[])


# EXAMPLE: Get a source control sync job by job id
@try_manual
def step_get_a_source_control_sync_job_by_job_id(test, rg, rg_2, rg_3):
    test.cmd('az automation source-control-sync-job show '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}" '
             '--source-control-name "{SourceControl_2}" '
             '--source-control-sync-job-id "ce6fe3e3-9db3-4096-a6b4-82bfb4c10a9a"',
             checks=[])


# EXAMPLE: Get software update configuration machine run
@try_manual
def step_get_software_update_configuration_machine_run(test, rg, rg_2, rg_3):
    test.cmd('az automation software-update-configuration-machine-run show '
             '--automation-account-name "{AutomationAccount_10}" '
             '--resource-group "{rg_2}" '
             '--software-update-configuration-machine-run-id "ca440719-34a4-4234-a1a9-3f84faf7788f"',
             checks=[])


# EXAMPLE: Get test job stream
@try_manual
def step_get_test_job_stream(test, rg, rg_2, rg_3):
    test.cmd('az automation test-job-stream show '
             '--automation-account-name "{AutomationAccount_2}" '
             '--job-stream-id "851b2101-686f-40e2-8a4b-5b8df08afbd1_00636535684910693884_00000000000000000001" '
             '--resource-group "{rg_2}" '
             '--runbook-name "{Get-AzureVMTutorial}"',
             checks=[])


# EXAMPLE: Get software update configuration runs by Id
@try_manual
def step_get_software_update_configuration_runs_by_id(test, rg, rg_2, rg_3):
    test.cmd('az automation software-update-configuration-run show '
             '--automation-account-name "{AutomationAccount_10}" '
             '--resource-group "{rg_2}" '
             '--software-update-configuration-run-id "2bd77cfa-2e9c-41b4-a45b-684a77cfeca9"',
             checks=[])


# EXAMPLE: Get a list of fields of a given type
@try_manual
def step_get_a_list_of_fields_of_a_given_type(test, rg, rg_2, rg_3):
    test.cmd('az automation object-data-type list-field '
             '--automation-account-name "{AutomationAccount_11}" '
             '--module-name "{Module_2}" '
             '--resource-group "{rg}" '
             '--type-name "MyCustomType"',
             checks=[])


# EXAMPLE: Get software update configuration by name
@try_manual
def step_get_software_update_configuration_by_name(test, rg, rg_2, rg_3):
    test.cmd('az automation software-update-configuration show '
             '--automation-account-name "{AutomationAccount_10}" '
             '--resource-group "{rg_2}" '
             '--software-update-configuration-name "{SoftwareUpdateConfigurations_2}"',
             checks=[])


# EXAMPLE: Get a DSC Compilation job stream by job stream id
@try_manual
def step_get_a_dsc_compilation_job_stream_by_job_stream_id(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-compilation-job show '
             '--automation-account-name "{AutomationAccount_3}" '
             '--job-id "836d4e06-2d88-46b4-8500-7febd4906838" '
             '--job-stream-id "836d4e06-2d88-46b4-8500-7febd4906838_00636481062421684835_00000000000000000008" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get a hybrid worker group
@try_manual
def step_get_a_hybrid_worker_group(test, rg, rg_2, rg_3):
    test.cmd('az automation hybrid-runbook-worker-group show '
             '--automation-account-name "{AutomationAccount_12}" '
             '--hybrid-runbook-worker-group-name "{TestHybridGroup}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get a list of source control sync jobs
@try_manual
def step_get_a_list_of_source_control_sync_jobs(test, rg, rg_2, rg_3):
    test.cmd('az automation source-control-sync-job list '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}" '
             '--source-control-name "{SourceControl_2}"',
             checks=[])


# EXAMPLE: List job streams by job name
@try_manual
def step_list_job_streams_by_job_name(test, rg, rg_2, rg_3):
    test.cmd('az automation job-stream list '
             '--automation-account-name "{AutomationAccount_2}" '
             '--job-name "{foo}" '
             '--resource-group "{rg_2}"',
             checks=[])


# EXAMPLE: Get Activity in a module
@try_manual
def step_get_activity_in_a_module(test, rg, rg_2, rg_3):
    test.cmd('az automation activity show '
             '--activity-name "{Add-AzureRmAccount}" '
             '--automation-account-name "{AutomationAccount_3}" '
             '--module-name "{OmsCompositeResources}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get content of node
@try_manual
def step_get_content_of_node(test, rg, rg_2, rg_3):
    test.cmd('az automation node-report show '
             '--automation-account-name "{AutomationAccount_3}" '
             '--node-id "nodeId" '
             '--report-id "reportId" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get a list of fields of a given type
@try_manual
def step_get_a_list_of_fields_of_a_given_type(test, rg, rg_2, rg_3):
    test.cmd('az automation object-data-type list-field '
             '--automation-account-name "{AutomationAccount_11}" '
             '--module-name "{Module_2}" '
             '--resource-group "{rg}" '
             '--type-name "MyCustomType"',
             checks=[])


# EXAMPLE: Get a list of fields of a given type across all accessible modules
@try_manual
def step_get_a_list_of_fields_of_a_given_type_across_all_accessible_modules(test, rg, rg_2, rg_3):
    test.cmd('az automation object-data-type list-field '
             '--automation-account-name "{AutomationAccount_11}" '
             '--resource-group "{rg}" '
             '--type-name "MyCustomType"',
             checks=[])


# EXAMPLE: Get runbook draft content
@try_manual
def step_get_runbook_draft_content(test, rg, rg_2, rg_3):
    test.cmd('az automation runbook-draft show '
             '--automation-account-name "{AutomationAccount_2}" '
             '--resource-group "{rg}" '
             '--runbook-name "{Get-AzureVMTutorial}"',
             checks=[])


# EXAMPLE: Get test job
@try_manual
def step_get_test_job(test, rg, rg_2, rg_3):
    test.cmd('az automation test-job show '
             '--automation-account-name "{AutomationAccount_2}" '
             '--resource-group "{rg_2}" '
             '--runbook-name "{Get-AzureVMTutorial}"',
             checks=[])


# EXAMPLE: List DSC Compilation job streams
@try_manual
def step_list_dsc_compilation_job_streams(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-compilation-job-stream list '
             '--automation-account-name "{AutomationAccount_3}" '
             '--job-id "836d4e06-2d88-46b4-8500-7febd4906838" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get a DSC node configuration
@try_manual
def step_get_a_dsc_node_configuration(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-node-configuration show '
             '--automation-account-name "{AutomationAccount_3}" '
             '--node-configuration-name "SetupServer.localhost" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get DSC Configuration content
@try_manual
def step_get_dsc_configuration_content(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-configuration show '
             '--automation-account-name "{AutomationAccount_3}" '
             '--configuration-name "ConfigName" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get Dsc node report data by node id and report id.
@try_manual
def step_get_dsc_node_report_data_by_node_id_and_report_id_(test, rg, rg_2, rg_3):
    # EXAMPLE NOT FOUND!
    pass


# EXAMPLE: Get job stream
@try_manual
def step_get_job_stream(test, rg, rg_2, rg_3):
    test.cmd('az automation job-stream show '
             '--automation-account-name "{AutomationAccount_2}" '
             '--job-name "{foo}" '
             '--job-stream-id "851b2101-686f-40e2-8a4b-5b8df08afbd1_00636535684910693884_00000000000000000001" '
             '--resource-group "{rg_2}"',
             checks=[])


# EXAMPLE: Get connection type
@try_manual
def step_get_connection_type(test, rg, rg_2, rg_3):
    test.cmd('az automation connection-type show '
             '--automation-account-name "{AutomationAccount_8}" '
             '--connection-type-name "{myCT}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get a DSC Compilation job
@try_manual
def step_get_a_dsc_compilation_job(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-compilation-job show '
             '--automation-account-name "{AutomationAccount_3}" '
             '--compilation-job-name "TestCompilationJob" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get a python 2 package
@try_manual
def step_get_a_python_2_package(test, rg, rg_2, rg_3):
    test.cmd('az automation python2-package show '
             '--automation-account-name "{AutomationAccount_3}" '
             '--package-name "OmsCompositeResources" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get a source control
@try_manual
def step_get_a_source_control(test, rg, rg_2, rg_3):
    test.cmd('az automation source-control show '
             '--automation-account-name "{AutomationAccount_5}" '
             '--resource-group "{rg}" '
             '--source-control-name "{sampleSourceControl}"',
             checks=[])


# EXAMPLE: Get a DSC Configuration
@try_manual
def step_get_a_dsc_configuration(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-configuration show '
             '--automation-account-name "{AutomationAccount_3}" '
             '--configuration-name "TemplateBasic" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List software update configuration machine runs for a specific software update configuration run
@try_manual
def step_list_software_update_configuration_machine_runs_for_a_specific_software_update_configuration_run(test, rg,
                                                                                                          rg_2, rg_3):
    test.cmd('az automation software-update-configuration-machine-run list '
             '--filter "$filter=properties/correlationId%20eq%200b943e57-44d3-4f05-898c-6e92aa617e59" '
             '--automation-account-name "{AutomationAccount_10}" '
             '--resource-group "{rg_2}"',
             checks=[])


# EXAMPLE: List software update configuration machine runs
@try_manual
def step_list_software_update_configuration_machine_runs(test, rg, rg_2, rg_3):
    test.cmd('az automation software-update-configuration-run list '
             '--automation-account-name "{AutomationAccount_10}" '
             '--resource-group "{rg_2}"',
             checks=[])


# EXAMPLE: List activities by a module
@try_manual
def step_list_activities_by_a_module(test, rg, rg_2, rg_3):
    test.cmd('az automation activity list '
             '--automation-account-name "{AutomationAccount_3}" '
             '--module-name "{OmsCompositeResources}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get a job schedule
@try_manual
def step_get_a_job_schedule(test, rg, rg_2, rg_3):
    test.cmd('az automation job-schedule show '
             '--automation-account-name "{AutomationAccount_2}" '
             '--job-schedule-id "0fa462ba-3aa2-4138-83ca-9ebc3bc55cdc" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get runbook content
@try_manual
def step_get_runbook_content(test, rg, rg_2, rg_3):
    test.cmd('az automation runbook show '
             '--automation-account-name "{AutomationAccount_2}" '
             '--resource-group "{rg}" '
             '--runbook-name "{Get-AzureVMTutorial}"',
             checks=[])


# EXAMPLE: Get a certificate
@try_manual
def step_get_a_certificate(test, rg, rg_2, rg_3):
    test.cmd('az automation certificate show '
             '--automation-account-name "{AutomationAccount_3}" '
             '--certificate-name "{testCert}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get Job Runbook Content
@try_manual
def step_get_job_runbook_content(test, rg, rg_2, rg_3):
    test.cmd('az automation job show '
             '--automation-account-name "{AutomationAccount_2}" '
             '--job-name "{foo}" '
             '--resource-group "{rg_2}"',
             checks=[])


# EXAMPLE: Get runbook draft
@try_manual
def step_get_runbook_draft(test, rg, rg_2, rg_3):
    test.cmd('az automation runbook-draft show '
             '--automation-account-name "{AutomationAccount_2}" '
             '--resource-group "{rg}" '
             '--runbook-name "{Get-AzureVMTutorial}"',
             checks=[])


# EXAMPLE: Get a connection
@try_manual
def step_get_a_connection(test, rg, rg_2, rg_3):
    test.cmd('az automation connection show '
             '--automation-account-name "{AutomationAccount_7}" '
             '--connection-name "{Connection_2}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get a credential
@try_manual
def step_get_a_credential(test, rg, rg_2, rg_3):
    test.cmd('az automation credential show '
             '--automation-account-name "{AutomationAccount_6}" '
             '--credential-name "{myCredential}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get node's status counts
@try_manual
def step_get_node_s_status_counts(test, rg, rg_2, rg_3):
    test.cmd('az automation node-count-information show '
             '--automation-account-name "{AutomationAccount_3}" '
             '--count-type "status" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get node's node configuration counts
@try_manual
def step_get_node_s_node_configuration_counts(test, rg, rg_2, rg_3):
    test.cmd('az automation node-count-information show '
             '--automation-account-name "{AutomationAccount_3}" '
             '--count-type "nodeconfiguration" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List software update configuration machine run with status equal to 'Failed'
@try_manual
def step_list_software_update_configuration_machine_run_with_status_equal_to__failed_(test, rg, rg_2, rg_3):
    test.cmd('az automation software-update-configuration-run list '
             '--filter "properties/status%20eq%20\'Failed\'" '
             '--automation-account-name "{AutomationAccount_10}" '
             '--resource-group "{rg_2}"',
             checks=[])


# EXAMPLE: List software update configuration machine runs
@try_manual
def step_list_software_update_configuration_machine_runs(test, rg, rg_2, rg_3):
    test.cmd('az automation software-update-configuration-run list '
             '--automation-account-name "{AutomationAccount_10}" '
             '--resource-group "{rg_2}"',
             checks=[])


# EXAMPLE: List DSC reports by node id.
@try_manual
def step_list_dsc_reports_by_node_id_(test, rg, rg_2, rg_3):
    test.cmd('az automation node-report list '
             '--automation-account-name "{AutomationAccount_3}" '
             '--node-id "nodeId" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get a variable
@try_manual
def step_get_a_variable(test, rg, rg_2, rg_3):
    test.cmd('az automation variable show '
             '--automation-account-name "{AutomationAccount_5}" '
             '--resource-group "{rg}" '
             '--variable-name "{sampleVariable}"',
             checks=[])


# EXAMPLE: Get a schedule
@try_manual
def step_get_a_schedule(test, rg, rg_2, rg_3):
    test.cmd('az automation schedule show '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}" '
             '--schedule-name "{mySchedule}"',
             checks=[])


# EXAMPLE: Get the agent registration information
@try_manual
def step_get_the_agent_registration_information(test, rg, rg_2, rg_3):
    test.cmd('az automation agent-registration-information show '
             '--automation-account-name "{AutomationAccount_6}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List software update configurations Targeting a specific azure virtual machine
@try_manual
def step_list_software_update_configurations_targeting_a_specific_azure_virtual_machine(test, rg, rg_2, rg_3):
    test.cmd('az automation software-update-configuration list '
             '--filter "properties/updateConfiguration/azureVirtualMachines/any(m: m eq \'/subscriptions/1a7d4044-286c-'
             '4acb-969a-96639265bf2e/resourceGroups/myresources/providers/Microsoft.Compute/virtualMachines/vm-01\')" '
             '--automation-account-name "{AutomationAccount_10}" '
             '--resource-group "{rg_2}"',
             checks=[])


# EXAMPLE: List software update configurations
@try_manual
def step_list_software_update_configurations(test, rg, rg_2, rg_3):
    test.cmd('az automation software-update-configuration list '
             '--automation-account-name "{AutomationAccount_10}" '
             '--resource-group "{rg_2}"',
             checks=[])


# EXAMPLE: Get runbook
@try_manual
def step_get_runbook(test, rg, rg_2, rg_3):
    test.cmd('az automation runbook show '
             '--automation-account-name "{AutomationAccount_2}" '
             '--resource-group "{rg}" '
             '--runbook-name "{Get-AzureVMTutorial}"',
             checks=[])


# EXAMPLE: List job streams by job name
@try_manual
def step_list_job_streams_by_job_name(test, rg, rg_2, rg_3):
    test.cmd('az automation job-stream list '
             '--automation-account-name "{AutomationAccount_2}" '
             '--job-name "{foo}" '
             '--resource-group "{rg_2}"',
             checks=[])


# EXAMPLE: Get watcher
@try_manual
def step_get_watcher(test, rg, rg_2, rg_3):
    test.cmd('az automation watcher show '
             '--automation-account-name "{AutomationAccount_4}" '
             '--resource-group "{rg}" '
             '--watcher-name "{MyTestWatcher}"',
             checks=[])


# EXAMPLE: Get webhook
@try_manual
def step_get_webhook(test, rg, rg_2, rg_3):
    test.cmd('az automation webhook show '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}" '
             '--webhook-name "{TestWebhook}"',
             checks=[])


# EXAMPLE: Get Job Output
@try_manual
def step_get_job_output(test, rg, rg_2, rg_3):
    test.cmd('az automation job show '
             '--automation-account-name "{AutomationAccount_2}" '
             '--job-name "{foo}" '
             '--resource-group "{rg_2}"',
             checks=[])


# EXAMPLE: List hybrid worker groups by Automation Account
@try_manual
def step_list_hybrid_worker_groups_by_automation_account(test, rg, rg_2, rg_3):
    test.cmd('az automation hybrid-runbook-worker-group list '
             '--automation-account-name "{AutomationAccount_12}" '
             '--resource-group "{rg_3}"',
             checks=[])


# EXAMPLE: Get a module
@try_manual
def step_get_a_module(test, rg, rg_2, rg_3):
    test.cmd('az automation module show '
             '--automation-account-name "{AutomationAccount_3}" '
             '--module-name "{OmsCompositeResources}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get a node
@try_manual
def step_get_a_node(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-node show '
             '--automation-account-name "{AutomationAccount_3}" '
             '--node-id "nodeId" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get job
@try_manual
def step_get_job(test, rg, rg_2, rg_3):
    test.cmd('az automation job show '
             '--automation-account-name "{AutomationAccount_2}" '
             '--job-name "{foo}" '
             '--resource-group "{rg_2}"',
             checks=[])


# EXAMPLE: List Paged DSC node configurations by Automation Account with name filter
@try_manual
def step_list_paged_dsc_node_configurations_by_automation_account_with_name_filter(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-node-configuration list '
             '--filter "contains(\'.localhost\',name)" '
             '--inlinecount "allpages" '
             '--skip 0 '
             '--top 2 '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List DSC node configurations by Automation Account
@try_manual
def step_list_dsc_node_configurations_by_automation_account(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-node-configuration list '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List Paged DSC node configurations by Automation Account with no filter
@try_manual
def step_list_paged_dsc_node_configurations_by_automation_account_with_no_filter(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-node-configuration list '
             '--inlinecount "allpages" '
             '--skip 0 '
             '--top 4 '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List python 2 packages by automation account
@try_manual
def step_list_python_2_packages_by_automation_account(test, rg, rg_2, rg_3):
    test.cmd('az automation python2-package list '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get connection types, first 100
@try_manual
def step_get_connection_types__first_100(test, rg, rg_2, rg_3):
    test.cmd('az automation connection-type list '
             '--automation-account-name "{AutomationAccount_13}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List DSC Compilation job in Automation Account
@try_manual
def step_list_dsc_compilation_job_in_automation_account(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-compilation-job list '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get connection types, next 100
@try_manual
def step_get_connection_types__next_100(test, rg, rg_2, rg_3):
    test.cmd('az automation connection-type list '
             '--automation-account-name "{AutomationAccount_13}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get the linked workspace of an automation account
@try_manual
def step_get_the_linked_workspace_of_an_automation_account(test, rg, rg_2, rg_3):
    test.cmd('az automation linked-workspace show '
             '--automation-account-name "{AutomationAccount_14}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get DSC Configuration
@try_manual
def step_get_dsc_configuration(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-configuration list '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List Paged DSC Configurations with name filter
@try_manual
def step_list_paged_dsc_configurations_with_name_filter(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-configuration list '
             '--filter "contains(name,\'server\')" '
             '--inlinecount "allpages" '
             '--skip 0 '
             '--top 2 '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List sourceControls
@try_manual
def step_list_sourcecontrols(test, rg, rg_2, rg_3):
    test.cmd('az automation source-control list '
             '--automation-account-name "{AutomationAccount_5}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List Paged DSC Configurations with no filter
@try_manual
def step_list_paged_dsc_configurations_with_no_filter(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-configuration list '
             '--inlinecount "allpages" '
             '--skip 0 '
             '--top 3 '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List certificates
@try_manual
def step_list_certificates(test, rg, rg_2, rg_3):
    test.cmd('az automation certificate list '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List all job schedules by automation account
@try_manual
def step_list_all_job_schedules_by_automation_account(test, rg, rg_2, rg_3):
    test.cmd('az automation job-schedule list '
             '--automation-account-name "{AutomationAccount_2}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List credentials by automation account, next 100
@try_manual
def step_list_credentials_by_automation_account__next_100(test, rg, rg_2, rg_3):
    test.cmd('az automation credential list '
             '--automation-account-name "{AutomationAccount_9}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List credentials by automation account, first 100
@try_manual
def step_list_credentials_by_automation_account__first_100(test, rg, rg_2, rg_3):
    test.cmd('az automation credential list '
             '--automation-account-name "{AutomationAccount_9}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List connections by automation account, next 100
@try_manual
def step_list_connections_by_automation_account__next_100(test, rg, rg_2, rg_3):
    test.cmd('az automation connection list '
             '--automation-account-name "{AutomationAccount_7}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List connections by automation account, first 100
@try_manual
def step_list_connections_by_automation_account__first_100(test, rg, rg_2, rg_3):
    test.cmd('az automation connection list '
             '--automation-account-name "{AutomationAccount_7}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get statistics of an automation account
@try_manual
def step_get_statistics_of_an_automation_account(test, rg, rg_2, rg_3):
    test.cmd('az automation statistics list '
             '--automation-account-name "{AutomationAccount_15}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List variables, First 100
@try_manual
def step_list_variables__first_100(test, rg, rg_2, rg_3):
    test.cmd('az automation variable list '
             '--automation-account-name "{AutomationAccount_5}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List variables, Next 100
@try_manual
def step_list_variables__next_100(test, rg, rg_2, rg_3):
    test.cmd('az automation variable list '
             '--automation-account-name "{AutomationAccount_5}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List schedules by automation account, first 100
@try_manual
def step_list_schedules_by_automation_account__first_100(test, rg, rg_2, rg_3):
    test.cmd('az automation schedule list '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List schedules by automation account, next 100
@try_manual
def step_list_schedules_by_automation_account__next_100(test, rg, rg_2, rg_3):
    test.cmd('az automation schedule list '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List watchers by Automation Account
@try_manual
def step_list_watchers_by_automation_account(test, rg, rg_2, rg_3):
    test.cmd('az automation watcher list '
             '--automation-account-name "{AutomationAccount_4}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List runbooks by automation account
@try_manual
def step_list_runbooks_by_automation_account(test, rg, rg_2, rg_3):
    test.cmd('az automation runbook list '
             '--automation-account-name "{AutomationAccount_2}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List webhooks by Automation Account
@try_manual
def step_list_webhooks_by_automation_account(test, rg, rg_2, rg_3):
    test.cmd('az automation webhook list '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List modules by automation account
@try_manual
def step_list_modules_by_automation_account(test, rg, rg_2, rg_3):
    test.cmd('az automation module list '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get usages of an automation account
@try_manual
def step_get_usages_of_an_automation_account(test, rg, rg_2, rg_3):
    test.cmd('az automation usage list '
             '--automation-account-name "{AutomationAccount_15}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List Paged DSC nodes by Automation Account with version filter
@try_manual
def step_list_paged_dsc_nodes_by_automation_account_with_version_filter(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-node list '
             '--filter "properties/extensionHandler/any(eh: eh/version le \'2.70\')" '
             '--inlinecount "allpages" '
             '--skip 0 '
             '--top 4 '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List Paged DSC nodes by Automation Account with name filter
@try_manual
def step_list_paged_dsc_nodes_by_automation_account_with_name_filter(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-node list '
             '--filter "contains(\'DSCCOMP\',name)" '
             '--inlinecount "allpages" '
             '--skip 0 '
             '--top 6 '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List Paged DSC nodes by Automation Account with no filters
@try_manual
def step_list_paged_dsc_nodes_by_automation_account_with_no_filters(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-node list '
             '--inlinecount "allpages" '
             '--skip 0 '
             '--top 2 '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List DSC nodes by Automation Account
@try_manual
def step_list_dsc_nodes_by_automation_account(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-node list '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List Paged DSC nodes by Automation Account with node status filter
@try_manual
def step_list_paged_dsc_nodes_by_automation_account_with_node_status_filter(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-node list '
             '--filter "contains(properties/status,\'Compliant,NotCompliant\')" '
             '--inlinecount "allpages" '
             '--skip 0 '
             '--top 4 '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List Paged DSC nodes by Automation Account with Node Configuration Custom filter
@try_manual
def step_list_paged_dsc_nodes_by_automation_account_with_node_configuration_custom_filter(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-node list '
             '--filter "contains(properties/nodeConfiguration/name,\'SetupServer.localhost,SetupClient.localhost,$$Not$'
             '$Configured$$\')" '
             '--inlinecount "allpages" '
             '--skip 0 '
             '--top 4 '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List Paged DSC nodes by Automation Account where Node Configurations are not assigned filter
@try_manual
def step_list_paged_dsc_nodes_by_automation_account_where_node_configurations_are_not_assigned_filter(test, rg, rg_2,
                                                                                                      rg_3):
    test.cmd('az automation dsc-node list '
             '--filter "properties/nodeConfiguration/name eq \'\'" '
             '--inlinecount "allpages" '
             '--skip 0 '
             '--top 20 '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List Paged DSC nodes with filters separated by 'and'
@try_manual
def step_list_paged_dsc_nodes_with_filters_separated_by__and_(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-node list '
             '--filter "properties/extensionHandler/any(eh: eh/version gt \'2.70\') and contains(name,\'sql\') and cont'
             'ains(properties/nodeConfiguration/name,\'$$Not$$Configured$$\')" '
             '--inlinecount "allpages" '
             '--skip 0 '
             '--top 10 '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List jobs by automation account
@try_manual
def step_list_jobs_by_automation_account(test, rg, rg_2, rg_3):
    test.cmd('az automation job list '
             '--automation-account-name "{AutomationAccount_2}" '
             '--resource-group "{rg_2}"',
             checks=[])


# EXAMPLE: Get automation account
@try_manual
def step_get_automation_account(test, rg, rg_2, rg_3):
    test.cmd('az automation automation-account show '
             '--automation-account-name "{myAutomationAccount9}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List automation accounts by resource group
@try_manual
def step_list_automation_accounts_by_resource_group(test, rg, rg_2, rg_3):
    test.cmd('az automation automation-account list '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: List automation accounts by resource group
@try_manual
def step_list_automation_accounts_by_resource_group(test, rg, rg_2, rg_3):
    test.cmd('az automation automation-account list '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Regenerate registration key
@try_manual
def step_regenerate_registration_key(test, rg, rg_2, rg_3):
    test.cmd('az automation agent-registration-information regenerate-key '
             '--automation-account-name "{AutomationAccount_6}" '
             '--key-name "{primary}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Update hybrid worker group
@try_manual
def step_update_hybrid_worker_group(test, rg, rg_2, rg_3):
    test.cmd('az automation hybrid-runbook-worker-group update '
             '--automation-account-name "{AutomationAccount_12}" '
             '--hybrid-runbook-worker-group-name "{TestHybridGroup}" '
             '--credential name="myRunAsCredentialName" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Suspend test job
@try_manual
def step_suspend_test_job(test, rg, rg_2, rg_3):
    test.cmd('az automation test-job suspend '
             '--automation-account-name "{AutomationAccount_2}" '
             '--resource-group "{rg_2}" '
             '--runbook-name "{Get-AzureVMTutorial}"',
             checks=[])


# EXAMPLE: Resume test job
@try_manual
def step_resume_test_job(test, rg, rg_2, rg_3):
    test.cmd('az automation test-job resume '
             '--automation-account-name "{AutomationAccount_2}" '
             '--resource-group "{rg_2}" '
             '--runbook-name "{Get-AzureVMTutorial}"',
             checks=[])


# EXAMPLE: Stop test job
@try_manual
def step_stop_test_job(test, rg, rg_2, rg_3):
    test.cmd('az automation test-job stop '
             '--automation-account-name "{AutomationAccount_2}" '
             '--resource-group "{rg_2}" '
             '--runbook-name "{Get-AzureVMTutorial}"',
             checks=[])


# EXAMPLE: Undo draft edit to last known published state
@try_manual
def step_undo_draft_edit_to_last_known_published_state(test, rg, rg_2, rg_3):
    test.cmd('az automation runbook-draft undo-edit '
             '--automation-account-name "{AutomationAccount_2}" '
             '--resource-group "{rg}" '
             '--runbook-name "{Get-AzureVMTutorial}"',
             checks=[])


# EXAMPLE: Update a module
@try_manual
def step_update_a_module(test, rg, rg_2, rg_3):
    test.cmd('az automation module update '
             '--automation-account-name "{AutomationAccount_11}" '
             '--module-name "{Module_2}" '
             '--content-link "{{\\"contentHash\\":{{\\"algorithm\\":\\"sha265\\",\\"value\\":\\"07E108A962B81DD9C9BAA89'
             'BB47C0F6EE52B29E83758B07795E408D258B2B87A\\"}},\\"uri\\":\\"https://teststorage.blob.core.windows.net/myc'
             'ontainer/MyModule.zip\\",\\"version\\":\\"1.0.0.0\\"}}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Update a source control
@try_manual
def step_update_a_source_control(test, rg, rg_2, rg_3):
    test.cmd('az automation source-control update '
             '--automation-account-name "{AutomationAccount_5}" '
             '--description "my description" '
             '--auto-sync true '
             '--branch "master" '
             '--folder-path "/folderOne/folderTwo" '
             '--publish-runbook true '
             '--security-token access-token="3a326f7a0dcd343ea58fee21f2fd5fb4c1234567" token-type="PersonalAccessToken"'
             ' '
             '--resource-group "{rg}" '
             '--source-control-name "{sampleSourceControl}"',
             checks=[])


# EXAMPLE: Create or Update Configuration
@try_manual
def step_create_or_update_configuration(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-configuration create '
             '--automation-account-name "{AutomationAccount_6}" '
             '--configuration-name "SetupServer" '
             '--parameters "{{\\"name\\":\\"SetupServer\\",\\"location\\":\\"East US 2\\",\\"properties\\":{{\\"descrip'
             'tion\\":\\"sample configuration\\",\\"source\\":{{\\"type\\":\\"embeddedContent\\",\\"hash\\":{{\\"algori'
             'thm\\":\\"sha256\\",\\"value\\":\\"A9E5DB56BA21513F61E0B3868816FDC6D4DF5131F5617D7FF0D769674BD5072F\\"}},'
             '\\"value\\":\\"Configuration SetupServer {{\\\\r\\\\n    Node localhost {{\\\\r\\\\n                     '
             '          WindowsFeature IIS {{\\\\r\\\\n                               Name = \\\\\\"Web-Server\\\\\\";'
             '\\\\r\\\\n            Ensure = \\\\\\"Present\\\\\\"\\\\r\\\\n        }}\\\\r\\\\n    }}\\\\r\\\\n}}\\"}}'
             '}}}}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Update a certificate
@try_manual
def step_update_a_certificate(test, rg, rg_2, rg_3):
    test.cmd('az automation certificate update '
             '--automation-account-name "{AutomationAccount_3}" '
             '--certificate-name "{testCert}" '
             '--name "testCert" '
             '--description "sample certificate. Description updated" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Publish runbook draft
@try_manual
def step_publish_runbook_draft(test, rg, rg_2, rg_3):
    test.cmd('az automation runbook publish '
             '--automation-account-name "{AutomationAccount_2}" '
             '--resource-group "{rg}" '
             '--runbook-name "{Get-AzureVMTutorial}"',
             checks=[])


# EXAMPLE: Update a credential
@try_manual
def step_update_a_credential(test, rg, rg_2, rg_3):
    test.cmd('az automation credential update '
             '--automation-account-name "{AutomationAccount_6}" '
             '--credential-name "{myCredential}" '
             '--name "myCredential" '
             '--description "my description goes here" '
             '--password "myPassw0rd3" '
             '--user-name "mylingaiah" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Update a connection
@try_manual
def step_update_a_connection(test, rg, rg_2, rg_3):
    test.cmd('az automation connection update '
             '--automation-account-name "{AutomationAccount_7}" '
             '--connection-name "{Connection_2}" '
             '--name "myConnection" '
             '--description "my description goes here" '
             '--field-definition-values AutomationCertificateName="myCertificateName" SubscriptionID="b5e4748c-f69a-467'
             'c-8749-e2f9c8cd3009" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Start Watcher
@try_manual
def step_start_watcher(test, rg, rg_2, rg_3):
    test.cmd('az automation watcher start '
             '--automation-account-name "{AutomationAccount_4}" '
             '--resource-group "{rg}" '
             '--watcher-name "{MyTestWatcher}"',
             checks=[])


# EXAMPLE: Start Watcher
@try_manual
def step_start_watcher(test, rg, rg_2, rg_3):
    test.cmd('az automation watcher start '
             '--automation-account-name "{AutomationAccount_4}" '
             '--resource-group "{rg}" '
             '--watcher-name "{MyTestWatcher}"',
             checks=[])


# EXAMPLE: Update a variable
@try_manual
def step_update_a_variable(test, rg, rg_2, rg_3):
    test.cmd('az automation variable update '
             '--automation-account-name "{AutomationAccount_5}" '
             '--name "sampleVariable" '
             '--value "\\"ComputerName3.domain.com\\"" '
             '--resource-group "{rg}" '
             '--variable-name "{sampleVariable}"',
             checks=[])


# EXAMPLE: Update a schedule
@try_manual
def step_update_a_schedule(test, rg, rg_2, rg_3):
    test.cmd('az automation schedule update '
             '--automation-account-name "{AutomationAccount_3}" '
             '--name "mySchedule" '
             '--description "my updated description of schedule goes here" '
             '--is-enabled false '
             '--resource-group "{rg}" '
             '--schedule-name "{mySchedule}"',
             checks=[])


# EXAMPLE: Update runbook
@try_manual
def step_update_runbook(test, rg, rg_2, rg_3):
    test.cmd('az automation runbook update '
             '--automation-account-name "{AutomationAccount_2}" '
             '--description "Updated Description of the Runbook" '
             '--log-activity-trace 1 '
             '--log-progress true '
             '--log-verbose false '
             '--resource-group "{rg}" '
             '--runbook-name "{Get-AzureVMTutorial}"',
             checks=[])


# EXAMPLE: Update watcher
@try_manual
def step_update_watcher(test, rg, rg_2, rg_3):
    test.cmd('az automation watcher update '
             '--automation-account-name "{AutomationAccount_4}" '
             '--name "MyTestWatcher" '
             '--execution-frequency-in-seconds 600 '
             '--resource-group "{rg}" '
             '--watcher-name "{MyTestWatcher}"',
             checks=[])


# EXAMPLE: Suspend job
@try_manual
def step_suspend_job(test, rg, rg_2, rg_3):
    test.cmd('az automation job suspend '
             '--automation-account-name "{AutomationAccount_2}" '
             '--job-name "{foo}" '
             '--resource-group "{rg_2}"',
             checks=[])


# EXAMPLE: Update webhook
@try_manual
def step_update_webhook(test, rg, rg_2, rg_3):
    test.cmd('az automation webhook update '
             '--automation-account-name "{AutomationAccount_3}" '
             '--parameters name="TestWebhook" properties={{"description":"updated webhook","isEnabled":false}} '
             '--resource-group "{rg}" '
             '--webhook-name "{TestWebhook}"',
             checks=[])


# EXAMPLE: Generate webhook uri
@try_manual
def step_generate_webhook_uri(test, rg, rg_2, rg_3):
    test.cmd('az automation webhook generate-uri '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Resume job
@try_manual
def step_resume_job(test, rg, rg_2, rg_3):
    test.cmd('az automation job resume '
             '--automation-account-name "{AutomationAccount_2}" '
             '--job-name "{foo}" '
             '--resource-group "{rg_2}"',
             checks=[])


# EXAMPLE: Update a module
@try_manual
def step_update_a_module(test, rg, rg_2, rg_3):
    test.cmd('az automation module update '
             '--automation-account-name "{AutomationAccount_11}" '
             '--module-name "{Module_2}" '
             '--content-link "{{\\"contentHash\\":{{\\"algorithm\\":\\"sha265\\",\\"value\\":\\"07E108A962B81DD9C9BAA89'
             'BB47C0F6EE52B29E83758B07795E408D258B2B87A\\"}},\\"uri\\":\\"https://teststorage.blob.core.windows.net/myc'
             'ontainer/MyModule.zip\\",\\"version\\":\\"1.0.0.0\\"}}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Stop job
@try_manual
def step_stop_job(test, rg, rg_2, rg_3):
    test.cmd('az automation job stop '
             '--automation-account-name "{AutomationAccount_2}" '
             '--job-name "{foo}" '
             '--resource-group "{rg_2}"',
             checks=[])


# EXAMPLE: Update a node
@try_manual
def step_update_a_node(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-node update '
             '--automation-account-name "{AutomationAccount_3}" '
             '--node-id "nodeId" '
             '--node-configuration-name "SetupServer.localhost" '
             '--node-id "nodeId" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Get lists of an automation account
@try_manual
def step_get_lists_of_an_automation_account(test, rg, rg_2, rg_3):
    test.cmd('az automation key list-by-automation-account '
             '--automation-account-name "{AutomationAccount_11}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Update an automation account
@try_manual
def step_update_an_automation_account(test, rg, rg_2, rg_3):
    test.cmd('az automation automation-account update '
             '--automation-account-name "{myAutomationAccount9}" '
             '--name "myAutomationAccount9" '
             '--location "East US 2" '
             '--sku name="Free" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Delete software update configuration
@try_manual
def step_delete_software_update_configuration(test, rg, rg_2, rg_3):
    test.cmd('az automation software-update-configuration delete '
             '--automation-account-name "{AutomationAccount_10}" '
             '--resource-group "{rg_2}" '
             '--software-update-configuration-name "{SoftwareUpdateConfigurations_2}"',
             checks=[])


# EXAMPLE: Delete a hybrid worker group
@try_manual
def step_delete_a_hybrid_worker_group(test, rg, rg_2, rg_3):
    test.cmd('az automation hybrid-runbook-worker-group delete '
             '--automation-account-name "{AutomationAccount_9}" '
             '--hybrid-runbook-worker-group-name "{HybridRunbookWorkerGroup_2}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Delete a DSC node configuration
@try_manual
def step_delete_a_dsc_node_configuration(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-node-configuration delete '
             '--automation-account-name "{AutomationAccount_9}" '
             '--node-configuration-name "configName.nodeConfigName" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Delete an existing connection type
@try_manual
def step_delete_an_existing_connection_type(test, rg, rg_2, rg_3):
    test.cmd('az automation connection-type delete '
             '--automation-account-name "{AutomationAccount_8}" '
             '--connection-type-name "{myCT}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Delete a python 2 package
@try_manual
def step_delete_a_python_2_package(test, rg, rg_2, rg_3):
    test.cmd('az automation python2-package delete '
             '--automation-account-name "{AutomationAccount_3}" '
             '--package-name "OmsCompositeResources" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Delete a source control
@try_manual
def step_delete_a_source_control(test, rg, rg_2, rg_3):
    test.cmd('az automation source-control delete '
             '--automation-account-name "{AutomationAccount_5}" '
             '--resource-group "{rg}" '
             '--source-control-name "{sampleSourceControl}"',
             checks=[])


# EXAMPLE: Delete DSC Configuration
@try_manual
def step_delete_dsc_configuration(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-configuration delete '
             '--automation-account-name "{AutomationAccount_3}" '
             '--configuration-name "TemplateBasic" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Delete a job schedule
@try_manual
def step_delete_a_job_schedule(test, rg, rg_2, rg_3):
    test.cmd('az automation job-schedule delete '
             '--automation-account-name "{AutomationAccount_2}" '
             '--job-schedule-id "0fa462ba-3aa2-4138-83ca-9ebc3bc55cdc" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Delete a certificate
@try_manual
def step_delete_a_certificate(test, rg, rg_2, rg_3):
    test.cmd('az automation certificate delete '
             '--automation-account-name "{AutomationAccount_3}" '
             '--certificate-name "{testCert}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Delete a credential
@try_manual
def step_delete_a_credential(test, rg, rg_2, rg_3):
    test.cmd('az automation credential delete '
             '--automation-account-name "{AutomationAccount_9}" '
             '--credential-name "{myCredential}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Delete an existing connection
@try_manual
def step_delete_an_existing_connection(test, rg, rg_2, rg_3):
    test.cmd('az automation connection delete '
             '--automation-account-name "{AutomationAccount_7}" '
             '--connection-name "{Connection_2}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Delete schedule
@try_manual
def step_delete_schedule(test, rg, rg_2, rg_3):
    test.cmd('az automation schedule delete '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}" '
             '--schedule-name "{mySchedule}"',
             checks=[])


# EXAMPLE: Delete a variable
@try_manual
def step_delete_a_variable(test, rg, rg_2, rg_3):
    test.cmd('az automation variable delete '
             '--automation-account-name "{AutomationAccount_5}" '
             '--resource-group "{rg}" '
             '--variable-name "{sampleVariable}"',
             checks=[])


# EXAMPLE: Delete webhook
@try_manual
def step_delete_webhook(test, rg, rg_2, rg_3):
    test.cmd('az automation webhook delete '
             '--automation-account-name "{AutomationAccount_3}" '
             '--resource-group "{rg}" '
             '--webhook-name "{TestWebhook}"',
             checks=[])


# EXAMPLE: Delete a runbook
@try_manual
def step_delete_a_runbook(test, rg, rg_2, rg_3):
    test.cmd('az automation runbook delete '
             '--automation-account-name "{AutomationAccount_2}" '
             '--resource-group "{rg}" '
             '--runbook-name "{Get-AzureVMTutorial}"',
             checks=[])


# EXAMPLE: Delete watcher
@try_manual
def step_delete_watcher(test, rg, rg_2, rg_3):
    test.cmd('az automation watcher delete '
             '--automation-account-name "{AutomationAccount_4}" '
             '--resource-group "{rg}" '
             '--watcher-name "{MyTestWatcher}"',
             checks=[])


# EXAMPLE: Delete a module
@try_manual
def step_delete_a_module(test, rg, rg_2, rg_3):
    test.cmd('az automation module delete '
             '--automation-account-name "{AutomationAccount_3}" '
             '--module-name "{OmsCompositeResources}" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Delete a DSC Node
@try_manual
def step_delete_a_dsc_node(test, rg, rg_2, rg_3):
    test.cmd('az automation dsc-node delete '
             '--automation-account-name "{myAutomationAccount9}" '
             '--node-id "e1243a76-a9bd-432f-bde3-ad8f317ee786" '
             '--resource-group "{rg}"',
             checks=[])


# EXAMPLE: Delete automation account
@try_manual
def step_delete_automation_account(test, rg, rg_2, rg_3):
    test.cmd('az automation automation-account delete '
             '--automation-account-name "{myAutomationAccount9}" '
             '--resource-group "{rg}"',
             checks=[])


@try_manual
def cleanup(test, rg, rg_2, rg_3):
    pass


@try_manual
def call_scenario(test, rg, rg_2, rg_3):
    setup(test, rg, rg_2, rg_3)
    step_create_or_update_automation_account(test, rg, rg_2, rg_3)
    step_create_job(test, rg, rg_2, rg_3)
    step_create_or_update_a_module(test, rg, rg_2, rg_3)
    step_create_or_update_webhook(test, rg, rg_2, rg_3)
    step_create_runbook_as_draft(test, rg, rg_2, rg_3)
    step_create_or_update_runbook_and_publish_it(test, rg, rg_2, rg_3)
    step_create_or_update_watcher(test, rg, rg_2, rg_3)
    step_create_or_update_a_schedule(test, rg, rg_2, rg_3)
    step_create_or_update_a_variable(test, rg, rg_2, rg_3)
    step_create_a_credential(test, rg, rg_2, rg_3)
    step_create_or_update_connection(test, rg, rg_2, rg_3)
    step_create_or_update_a_certificate(test, rg, rg_2, rg_3)
    step_create_a_job_schedule(test, rg, rg_2, rg_3)
    step_create_or_update_configuration(test, rg, rg_2, rg_3)
    step_create_or_update_a_source_control(test, rg, rg_2, rg_3)
    step_create_or_update_a_python_2_package(test, rg, rg_2, rg_3)
    step_create_or_update_a_dsc_compilation_job(test, rg, rg_2, rg_3)
    step_create_or_update_connection_type(test, rg, rg_2, rg_3)
    step_create_node_configuration(test, rg, rg_2, rg_3)
    step_create_or_update_runbook_draft(test, rg, rg_2, rg_3)
    step_create_test_job(test, rg, rg_2, rg_3)
    step_create_software_update_configuration(test, rg, rg_2, rg_3)
    step_create_or_update_a_source_control_sync_job(test, rg, rg_2, rg_3)
    step_get_a_sync_job_stream_identified_by_sync_job_stream_id_(test, rg, rg_2, rg_3)
    step_get_a_list_of_sync_job_streams_identified_by_sync_job_id(test, rg, rg_2, rg_3)
    step_get_a_source_control_sync_job_by_job_id(test, rg, rg_2, rg_3)
    step_get_software_update_configuration_machine_run(test, rg, rg_2, rg_3)
    step_get_test_job_stream(test, rg, rg_2, rg_3)
    step_get_software_update_configuration_runs_by_id(test, rg, rg_2, rg_3)
    step_get_a_list_of_fields_of_a_given_type(test, rg, rg_2, rg_3)
    step_get_software_update_configuration_by_name(test, rg, rg_2, rg_3)
    step_get_a_dsc_compilation_job_stream_by_job_stream_id(test, rg, rg_2, rg_3)
    step_get_a_hybrid_worker_group(test, rg, rg_2, rg_3)
    step_get_a_list_of_source_control_sync_jobs(test, rg, rg_2, rg_3)
    step_list_job_streams_by_job_name(test, rg, rg_2, rg_3)
    step_get_activity_in_a_module(test, rg, rg_2, rg_3)
    step_get_content_of_node(test, rg, rg_2, rg_3)
    step_get_a_list_of_fields_of_a_given_type(test, rg, rg_2, rg_3)
    step_get_a_list_of_fields_of_a_given_type_across_all_accessible_modules(test, rg, rg_2, rg_3)
    step_get_runbook_draft_content(test, rg, rg_2, rg_3)
    step_get_test_job(test, rg, rg_2, rg_3)
    step_list_dsc_compilation_job_streams(test, rg, rg_2, rg_3)
    step_get_a_dsc_node_configuration(test, rg, rg_2, rg_3)
    step_get_dsc_configuration_content(test, rg, rg_2, rg_3)
    step_get_dsc_node_report_data_by_node_id_and_report_id_(test, rg, rg_2, rg_3)
    step_get_job_stream(test, rg, rg_2, rg_3)
    step_get_connection_type(test, rg, rg_2, rg_3)
    step_get_a_dsc_compilation_job(test, rg, rg_2, rg_3)
    step_get_a_python_2_package(test, rg, rg_2, rg_3)
    step_get_a_source_control(test, rg, rg_2, rg_3)
    step_get_a_dsc_configuration(test, rg, rg_2, rg_3)
    step_list_software_update_configuration_machine_runs_for_a_specific_software_update_configuration_run(test, rg,
                                                                                                          rg_2, rg_3)
    step_list_software_update_configuration_machine_runs(test, rg, rg_2, rg_3)
    step_list_activities_by_a_module(test, rg, rg_2, rg_3)
    step_get_a_job_schedule(test, rg, rg_2, rg_3)
    step_get_runbook_content(test, rg, rg_2, rg_3)
    step_get_a_certificate(test, rg, rg_2, rg_3)
    step_get_job_runbook_content(test, rg, rg_2, rg_3)
    step_get_runbook_draft(test, rg, rg_2, rg_3)
    step_get_a_connection(test, rg, rg_2, rg_3)
    step_get_a_credential(test, rg, rg_2, rg_3)
    step_get_node_s_status_counts(test, rg, rg_2, rg_3)
    step_get_node_s_node_configuration_counts(test, rg, rg_2, rg_3)
    step_list_software_update_configuration_machine_run_with_status_equal_to__failed_(test, rg, rg_2, rg_3)
    step_list_software_update_configuration_machine_runs(test, rg, rg_2, rg_3)
    step_list_dsc_reports_by_node_id_(test, rg, rg_2, rg_3)
    step_get_a_variable(test, rg, rg_2, rg_3)
    step_get_a_schedule(test, rg, rg_2, rg_3)
    step_get_the_agent_registration_information(test, rg, rg_2, rg_3)
    step_list_software_update_configurations_targeting_a_specific_azure_virtual_machine(test, rg, rg_2, rg_3)
    step_list_software_update_configurations(test, rg, rg_2, rg_3)
    step_get_runbook(test, rg, rg_2, rg_3)
    step_list_job_streams_by_job_name(test, rg, rg_2, rg_3)
    step_get_watcher(test, rg, rg_2, rg_3)
    step_get_webhook(test, rg, rg_2, rg_3)
    step_get_job_output(test, rg, rg_2, rg_3)
    step_list_hybrid_worker_groups_by_automation_account(test, rg, rg_2, rg_3)
    step_get_a_module(test, rg, rg_2, rg_3)
    step_get_a_node(test, rg, rg_2, rg_3)
    step_get_job(test, rg, rg_2, rg_3)
    step_list_paged_dsc_node_configurations_by_automation_account_with_name_filter(test, rg, rg_2, rg_3)
    step_list_dsc_node_configurations_by_automation_account(test, rg, rg_2, rg_3)
    step_list_paged_dsc_node_configurations_by_automation_account_with_no_filter(test, rg, rg_2, rg_3)
    step_list_python_2_packages_by_automation_account(test, rg, rg_2, rg_3)
    step_get_connection_types__first_100(test, rg, rg_2, rg_3)
    step_list_dsc_compilation_job_in_automation_account(test, rg, rg_2, rg_3)
    step_get_connection_types__next_100(test, rg, rg_2, rg_3)
    step_get_the_linked_workspace_of_an_automation_account(test, rg, rg_2, rg_3)
    step_get_dsc_configuration(test, rg, rg_2, rg_3)
    step_list_paged_dsc_configurations_with_name_filter(test, rg, rg_2, rg_3)
    step_list_sourcecontrols(test, rg, rg_2, rg_3)
    step_list_paged_dsc_configurations_with_no_filter(test, rg, rg_2, rg_3)
    step_list_certificates(test, rg, rg_2, rg_3)
    step_list_all_job_schedules_by_automation_account(test, rg, rg_2, rg_3)
    step_list_credentials_by_automation_account__next_100(test, rg, rg_2, rg_3)
    step_list_credentials_by_automation_account__first_100(test, rg, rg_2, rg_3)
    step_list_connections_by_automation_account__next_100(test, rg, rg_2, rg_3)
    step_list_connections_by_automation_account__first_100(test, rg, rg_2, rg_3)
    step_get_statistics_of_an_automation_account(test, rg, rg_2, rg_3)
    step_list_variables__first_100(test, rg, rg_2, rg_3)
    step_list_variables__next_100(test, rg, rg_2, rg_3)
    step_list_schedules_by_automation_account__first_100(test, rg, rg_2, rg_3)
    step_list_schedules_by_automation_account__next_100(test, rg, rg_2, rg_3)
    step_list_watchers_by_automation_account(test, rg, rg_2, rg_3)
    step_list_runbooks_by_automation_account(test, rg, rg_2, rg_3)
    step_list_webhooks_by_automation_account(test, rg, rg_2, rg_3)
    step_list_modules_by_automation_account(test, rg, rg_2, rg_3)
    step_get_usages_of_an_automation_account(test, rg, rg_2, rg_3)
    step_list_paged_dsc_nodes_by_automation_account_with_version_filter(test, rg, rg_2, rg_3)
    step_list_paged_dsc_nodes_by_automation_account_with_name_filter(test, rg, rg_2, rg_3)
    step_list_paged_dsc_nodes_by_automation_account_with_no_filters(test, rg, rg_2, rg_3)
    step_list_dsc_nodes_by_automation_account(test, rg, rg_2, rg_3)
    step_list_paged_dsc_nodes_by_automation_account_with_node_status_filter(test, rg, rg_2, rg_3)
    step_list_paged_dsc_nodes_by_automation_account_with_node_configuration_custom_filter(test, rg, rg_2, rg_3)
    step_list_paged_dsc_nodes_by_automation_account_where_node_configurations_are_not_assigned_filter(test, rg, rg_2,
                                                                                                      rg_3)
    step_list_paged_dsc_nodes_with_filters_separated_by__and_(test, rg, rg_2, rg_3)
    step_list_jobs_by_automation_account(test, rg, rg_2, rg_3)
    step_get_automation_account(test, rg, rg_2, rg_3)
    step_list_automation_accounts_by_resource_group(test, rg, rg_2, rg_3)
    step_list_automation_accounts_by_resource_group(test, rg, rg_2, rg_3)
    step_regenerate_registration_key(test, rg, rg_2, rg_3)
    step_update_hybrid_worker_group(test, rg, rg_2, rg_3)
    step_suspend_test_job(test, rg, rg_2, rg_3)
    step_resume_test_job(test, rg, rg_2, rg_3)
    step_stop_test_job(test, rg, rg_2, rg_3)
    step_undo_draft_edit_to_last_known_published_state(test, rg, rg_2, rg_3)
    step_update_a_module(test, rg, rg_2, rg_3)
    step_update_a_source_control(test, rg, rg_2, rg_3)
    step_create_or_update_configuration(test, rg, rg_2, rg_3)
    step_update_a_certificate(test, rg, rg_2, rg_3)
    step_publish_runbook_draft(test, rg, rg_2, rg_3)
    step_update_a_credential(test, rg, rg_2, rg_3)
    step_update_a_connection(test, rg, rg_2, rg_3)
    step_start_watcher(test, rg, rg_2, rg_3)
    step_start_watcher(test, rg, rg_2, rg_3)
    step_update_a_variable(test, rg, rg_2, rg_3)
    step_update_a_schedule(test, rg, rg_2, rg_3)
    step_update_runbook(test, rg, rg_2, rg_3)
    step_update_watcher(test, rg, rg_2, rg_3)
    step_suspend_job(test, rg, rg_2, rg_3)
    step_update_webhook(test, rg, rg_2, rg_3)
    step_generate_webhook_uri(test, rg, rg_2, rg_3)
    step_resume_job(test, rg, rg_2, rg_3)
    step_update_a_module(test, rg, rg_2, rg_3)
    step_stop_job(test, rg, rg_2, rg_3)
    step_update_a_node(test, rg, rg_2, rg_3)
    step_get_lists_of_an_automation_account(test, rg, rg_2, rg_3)
    step_update_an_automation_account(test, rg, rg_2, rg_3)
    step_delete_software_update_configuration(test, rg, rg_2, rg_3)
    step_delete_a_hybrid_worker_group(test, rg, rg_2, rg_3)
    step_delete_a_dsc_node_configuration(test, rg, rg_2, rg_3)
    step_delete_an_existing_connection_type(test, rg, rg_2, rg_3)
    step_delete_a_python_2_package(test, rg, rg_2, rg_3)
    step_delete_a_source_control(test, rg, rg_2, rg_3)
    step_delete_dsc_configuration(test, rg, rg_2, rg_3)
    step_delete_a_job_schedule(test, rg, rg_2, rg_3)
    step_delete_a_certificate(test, rg, rg_2, rg_3)
    step_delete_a_credential(test, rg, rg_2, rg_3)
    step_delete_an_existing_connection(test, rg, rg_2, rg_3)
    step_delete_schedule(test, rg, rg_2, rg_3)
    step_delete_a_variable(test, rg, rg_2, rg_3)
    step_delete_webhook(test, rg, rg_2, rg_3)
    step_delete_a_runbook(test, rg, rg_2, rg_3)
    step_delete_watcher(test, rg, rg_2, rg_3)
    step_delete_a_module(test, rg, rg_2, rg_3)
    step_delete_a_dsc_node(test, rg, rg_2, rg_3)
    step_delete_automation_account(test, rg, rg_2, rg_3)
    cleanup(test, rg, rg_2, rg_3)


@try_manual
class AutomationClientScenarioTest(ScenarioTest):

    @ResourceGroupPreparer(name_prefix='clitestautomation_rg'[:7], key='rg', parameter_name='rg')
    @ResourceGroupPreparer(name_prefix='clitestautomation_mygroup'[:7], key='rg_2', parameter_name='rg_2')
    @ResourceGroupPreparer(name_prefix='clitestautomation_udtest'[:7], key='rg_3', parameter_name='rg_3')
    def test_automation(self, rg, rg_2, rg_3):

        self.kwargs.update({
            'myAutomationAccount9': 'myAutomationAccount9',
            'AutomationAccount_2': 'AutomationAccount_2',
            'AutomationAccount_3': 'AutomationAccount_3',
            'AutomationAccount_4': 'AutomationAccount_4',
            'AutomationAccount_5': 'AutomationAccount_5',
            'AutomationAccount_6': 'AutomationAccount_6',
            'AutomationAccount_7': 'AutomationAccount_7',
            'AutomationAccount_8': 'AutomationAccount_8',
            'AutomationAccount_9': 'AutomationAccount_9',
            'AutomationAccount_10': 'AutomationAccount_10',
            'AutomationAccount_11': 'AutomationAccount_11',
            'AutomationAccount_12': 'AutomationAccount_12',
            'AutomationAccount_13': 'AutomationAccount_13',
            'AutomationAccount_14': 'AutomationAccount_14',
            'AutomationAccount_15': 'AutomationAccount_15',
            'primary': 'primary',
            'testCert': 'testCert',
            'myCT': 'myCT',
            'myCredential': 'myCredential',
            'TestHybridGroup': 'TestHybridGroup',
            'HybridRunbookWorkerGroup_2': 'HybridRunbookWorkerGroup_2',
            'OmsCompositeResources': 'OmsCompositeResources',
            'Module_2': 'Module_2',
            'mySchedule': 'mySchedule',
            'sampleVariable': 'sampleVariable',
            'TestWebhook': 'TestWebhook',
            'MyTestWatcher': 'MyTestWatcher',
            'testpatch': 'testpatch',
            'SoftwareUpdateConfigurations_2': 'SoftwareUpdateConfigurations_2',
            'sampleSourceControl': 'sampleSourceControl',
            'SourceControl_2': 'SourceControl_2',
            'foo': 'foo',
            'Get-AzureVMTutorial': 'Get-AzureVMTutorial',
            'mysConnection': 'mysConnection',
            'Connection_2': 'Connection_2',
            'Add-AzureRmAccount': 'Add-AzureRmAccount',
        })

        call_scenario(self, rg, rg_2, rg_3)
