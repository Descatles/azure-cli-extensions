# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines

from knack.help_files import helps


helps['automation automation-account'] = """
    type: group
    short-summary: automation automation-account
"""

helps['automation automation-account list'] = """
    type: command
    short-summary: Retrieve a list of accounts within a given subscription.
    examples:
      - name: List automation accounts by resource group
        text: |-
               az automation automation-account list --resource-group "rg"
"""

helps['automation automation-account show'] = """
    type: command
    short-summary: Get information about an Automation Account.
    examples:
      - name: Get automation account
        text: |-
               az automation automation-account show --automation-account-name "myAutomationAccount9" --resource-group \
"rg"
"""

helps['automation automation-account create'] = """
    type: command
    short-summary: Create or update automation account.
    examples:
      - name: Create or update automation account
        text: |-
               az automation automation-account create --automation-account-name "myAutomationAccount9" --name "myAutom\
ationAccount9" --location "East US 2" --sku name="Free" --resource-group "rg"
"""

helps['automation automation-account update'] = """
    type: command
    short-summary: Update an automation account.
    examples:
      - name: Update an automation account
        text: |-
               az automation automation-account update --automation-account-name "myAutomationAccount9" --name "myAutom\
ationAccount9" --location "East US 2" --sku name="Free" --resource-group "rg"
"""

helps['automation automation-account delete'] = """
    type: command
    short-summary: Delete an automation account.
    examples:
      - name: Delete automation account
        text: |-
               az automation automation-account delete --automation-account-name "myAutomationAccount9" --resource-grou\
p "rg"
"""

helps['automation statistics'] = """
    type: group
    short-summary: automation statistics
"""

helps['automation statistics list'] = """
    type: command
    short-summary: Retrieve the statistics for the account.
    examples:
      - name: Get statistics of an automation account
        text: |-
               az automation statistics list --automation-account-name "myAutomationAccount11" --resource-group "rg"
"""

helps['automation usage'] = """
    type: group
    short-summary: automation usage
"""

helps['automation usage list'] = """
    type: command
    short-summary: Retrieve the usage for the account id.
    examples:
      - name: Get usages of an automation account
        text: |-
               az automation usage list --automation-account-name "myAutomationAccount11" --resource-group "rg"
"""

helps['automation key'] = """
    type: group
    short-summary: automation key
"""

helps['automation key list-by-automation-account'] = """
    type: command
    short-summary: Retrieve the automation keys for an account.
    examples:
      - name: Get lists of an automation account
        text: |-
               az automation key list-by-automation-account --automation-account-name "MyAutomationAccount" --resource-\
group "rg"
"""

helps['automation certificate'] = """
    type: group
    short-summary: automation certificate
"""

helps['automation certificate list'] = """
    type: command
    short-summary: Retrieve a list of certificates.
    examples:
      - name: List certificates
        text: |-
               az automation certificate list --automation-account-name "myAutomationAccount33" --resource-group "rg"
"""

helps['automation certificate show'] = """
    type: command
    short-summary: Retrieve the certificate identified by certificate name.
    examples:
      - name: Get a certificate
        text: |-
               az automation certificate show --automation-account-name "myAutomationAccount33" --certificate-name "tes\
tCert" --resource-group "rg"
"""

helps['automation certificate create'] = """
    type: command
    short-summary: Create a certificate.
    examples:
      - name: Create or update a certificate
        text: |-
               az automation certificate create --automation-account-name "myAutomationAccount18" --certificate-name "t\
estCert" --name "testCert" --description "Sample Cert" --base64value "base 64 value of cert" --is-exportable false --th\
umbprint "thumbprint of cert" --resource-group "rg"
"""

helps['automation certificate update'] = """
    type: command
    short-summary: Update a certificate.
    examples:
      - name: Update a certificate
        text: |-
               az automation certificate update --automation-account-name "myAutomationAccount33" --certificate-name "t\
estCert" --name "testCert" --description "sample certificate. Description updated" --resource-group "rg"
"""

helps['automation certificate delete'] = """
    type: command
    short-summary: Delete the certificate.
    examples:
      - name: Delete a certificate
        text: |-
               az automation certificate delete --automation-account-name "myAutomationAccount33" --certificate-name "t\
estCert" --resource-group "rg"
"""

helps['automation connection'] = """
    type: group
    short-summary: automation connection
"""

helps['automation connection list'] = """
    type: command
    short-summary: Retrieve a list of connections.
    examples:
      - name: List connections by automation account, first 100
        text: |-
               az automation connection list --automation-account-name "myAutomationAccount28" --resource-group "rg"
      - name: List connections by automation account, next 100
        text: |-
               az automation connection list --automation-account-name "myAutomationAccount28" --resource-group "rg"
"""

helps['automation connection show'] = """
    type: command
    short-summary: Retrieve the connection identified by connection name.
    examples:
      - name: Get a connection
        text: |-
               az automation connection show --automation-account-name "myAutomationAccount28" --connection-name "myCon\
nection" --resource-group "rg"
"""

helps['automation connection create'] = """
    type: command
    short-summary: Create or update a connection.
    examples:
      - name: Create or update connection
        text: |-
               az automation connection create --automation-account-name "myAutomationAccount28" --connection-name "mys\
Connection" --name "mysConnection" --description "my description goes here" --connection-type name="Azure" --field-defi\
nition-values AutomationCertificateName="mysCertificateName" SubscriptionID="subid" --resource-group "rg"
"""

helps['automation connection update'] = """
    type: command
    short-summary: Update a connection.
    examples:
      - name: Update a connection
        text: |-
               az automation connection update --automation-account-name "myAutomationAccount28" --connection-name "myC\
onnection" --name "myConnection" --description "my description goes here" --field-definition-values AutomationCertifica\
teName="myCertificateName" SubscriptionID="b5e4748c-f69a-467c-8749-e2f9c8cd3009" --resource-group "rg"
"""

helps['automation connection delete'] = """
    type: command
    short-summary: Delete the connection.
    examples:
      - name: Delete an existing connection
        text: |-
               az automation connection delete --automation-account-name "myAutomationAccount28" --connection-name "myC\
onnection" --resource-group "rg"
"""

helps['automation connection-type'] = """
    type: group
    short-summary: automation connection-type
"""

helps['automation connection-type list'] = """
    type: command
    short-summary: Retrieve a list of connection types.
    examples:
      - name: Get connection types, first 100
        text: |-
               az automation connection-type list --automation-account-name "myAutomationAccount25" --resource-group "r\
g"
      - name: Get connection types, next 100
        text: |-
               az automation connection-type list --automation-account-name "myAutomationAccount25" --resource-group "r\
g"
"""

helps['automation connection-type show'] = """
    type: command
    short-summary: Retrieve the connection type identified by connection type name.
    examples:
      - name: Get connection type
        text: |-
               az automation connection-type show --automation-account-name "myAutomationAccount22" --connection-type-n\
ame "myCT" --resource-group "rg"
"""

helps['automation connection-type create'] = """
    type: command
    short-summary: Create a connection type.
    examples:
      - name: Create or update connection type
        text: |-
               az automation connection-type create --automation-account-name "myAutomationAccount22" --connection-type\
-name "myCT" --name "myCT" --field-definitions "{\\"myBoolField\\":{\\"type\\":\\"bool\\",\\"isEncrypted\\":false,\\"is\
Optional\\":false},\\"myStringField\\":{\\"type\\":\\"string\\",\\"isEncrypted\\":false,\\"isOptional\\":false},\\"mySt\
ringFieldEncrypted\\":{\\"type\\":\\"string\\",\\"isEncrypted\\":true,\\"isOptional\\":false}}" --is-global false --res\
ource-group "rg"
"""

helps['automation connection-type update'] = """
    type: command
    short-summary: Create a connection type.
    examples:
      - name: Create or update connection type
        text: |-
               az automation connection-type update --automation-account-name "myAutomationAccount22" --connection-type\
-name "myCT" --name "myCT" --field-definitions "{\\"myBoolField\\":{\\"type\\":\\"bool\\",\\"isEncrypted\\":false,\\"is\
Optional\\":false},\\"myStringField\\":{\\"type\\":\\"string\\",\\"isEncrypted\\":false,\\"isOptional\\":false},\\"mySt\
ringFieldEncrypted\\":{\\"type\\":\\"string\\",\\"isEncrypted\\":true,\\"isOptional\\":false}}" --is-global false --res\
ource-group "rg"
"""

helps['automation connection-type delete'] = """
    type: command
    short-summary: Delete the connection type.
    examples:
      - name: Delete an existing connection type
        text: |-
               az automation connection-type delete --automation-account-name "myAutomationAccount22" --connection-type\
-name "myCT" --resource-group "rg"
"""

helps['automation credential'] = """
    type: group
    short-summary: automation credential
"""

helps['automation credential list'] = """
    type: command
    short-summary: Retrieve a list of credentials.
    examples:
      - name: List credentials by automation account, first 100
        text: |-
               az automation credential list --automation-account-name "myAutomationAccount20" --resource-group "rg"
      - name: List credentials by automation account, next 100
        text: |-
               az automation credential list --automation-account-name "myAutomationAccount20" --resource-group "rg"
"""

helps['automation credential show'] = """
    type: command
    short-summary: Retrieve the credential identified by credential name.
    examples:
      - name: Get a credential
        text: |-
               az automation credential show --automation-account-name "myAutomationAccount18" --credential-name "myCre\
dential" --resource-group "rg"
"""

helps['automation credential create'] = """
    type: command
    short-summary: Create a credential.
    examples:
      - name: Create a credential
        text: |-
               az automation credential create --automation-account-name "myAutomationAccount18" --credential-name "myC\
redential" --name "myCredential" --description "my description goes here" --password "myPassw0rd" --user-name "mylingai\
ah" --resource-group "rg"
"""

helps['automation credential update'] = """
    type: command
    short-summary: Update a credential.
    examples:
      - name: Update a credential
        text: |-
               az automation credential update --automation-account-name "myAutomationAccount18" --credential-name "myC\
redential" --name "myCredential" --description "my description goes here" --password "myPassw0rd3" --user-name "mylinga\
iah" --resource-group "rg"
"""

helps['automation credential delete'] = """
    type: command
    short-summary: Delete the credential.
    examples:
      - name: Delete a credential
        text: |-
               az automation credential delete --automation-account-name "myAutomationAccount20" --credential-name "myC\
redential" --resource-group "rg"
"""

helps['automation dsc-configuration'] = """
    type: group
    short-summary: automation dsc-configuration
"""

helps['automation dsc-configuration list'] = """
    type: command
    short-summary: Retrieve a list of configurations.
    examples:
      - name: Get DSC Configuration
        text: |-
               az automation dsc-configuration list --automation-account-name "myAutomationAccount33" --resource-group \
"rg"
      - name: List Paged DSC Configurations with name filter
        text: |-
               az automation dsc-configuration list --filter "contains(name,\'server\')" --inlinecount "allpages" --ski\
p 0 --top 2 --automation-account-name "myAutomationAccount33" --resource-group "rg"
      - name: List Paged DSC Configurations with no filter
        text: |-
               az automation dsc-configuration list --inlinecount "allpages" --skip 0 --top 3 --automation-account-name\
 "myAutomationAccount33" --resource-group "rg"
"""

helps['automation dsc-configuration show'] = """
    type: command
    short-summary: Retrieve the configuration script identified by configuration name.
    examples:
      - name: Get a DSC Configuration
        text: |-
               az automation dsc-configuration show --automation-account-name "myAutomationAccount33" --configuration-n\
ame "TemplateBasic" --resource-group "rg"
"""

helps['automation dsc-configuration create'] = """
    type: command
    short-summary: Create the configuration identified by configuration name.
    examples:
      - name: Create or Update Configuration
        text: |-
               az automation dsc-configuration create --automation-account-name "myAutomationAccount18" --configuration\
-name "SetupServer" --parameters "{\\"name\\":\\"SetupServer\\",\\"location\\":\\"East US 2\\",\\"properties\\":{\\"des\
cription\\":\\"sample configuration\\",\\"source\\":{\\"type\\":\\"embeddedContent\\",\\"hash\\":{\\"algorithm\\":\\"sh\
a256\\",\\"value\\":\\"A9E5DB56BA21513F61E0B3868816FDC6D4DF5131F5617D7FF0D769674BD5072F\\"},\\"value\\":\\"Configuratio\
n SetupServer {\\\\r\\\\n    Node localhost {\\\\r\\\\n                               WindowsFeature IIS {\\\\r\\\\n   \
                            Name = \\\\\\"Web-Server\\\\\\";\\\\r\\\\n            Ensure = \\\\\\"Present\\\\\\"\\\\r\\\
\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\"}}}" --resource-group "rg"
"""

helps['automation dsc-configuration update'] = """
    type: command
    short-summary: Create the configuration identified by configuration name.
    examples:
      - name: Create or Update Configuration
        text: |-
               az automation dsc-configuration update --automation-account-name "myAutomationAccount18" --configuration\
-name "SetupServer" --parameters "{\\"name\\":\\"SetupServer\\",\\"tags\\":{\\"Hello\\":\\"World\\"}}" --resource-group\
 "rg"
"""

helps['automation dsc-configuration delete'] = """
    type: command
    short-summary: Delete the dsc configuration identified by configuration name.
    examples:
      - name: Delete DSC Configuration
        text: |-
               az automation dsc-configuration delete --automation-account-name "myAutomationAccount33" --configuration\
-name "TemplateBasic" --resource-group "rg"
"""

helps['automation hybrid-runbook-worker-group'] = """
    type: group
    short-summary: automation hybrid-runbook-worker-group
"""

helps['automation hybrid-runbook-worker-group list'] = """
    type: command
    short-summary: Retrieve a list of hybrid runbook worker groups.
    examples:
      - name: List hybrid worker groups by Automation Account
        text: |-
               az automation hybrid-runbook-worker-group list --automation-account-name "testaccount" --resource-group \
"udtest"
"""

helps['automation hybrid-runbook-worker-group show'] = """
    type: command
    short-summary: Retrieve a hybrid runbook worker group.
    examples:
      - name: Get a hybrid worker group
        text: |-
               az automation hybrid-runbook-worker-group show --automation-account-name "testaccount" --hybrid-runbook-\
worker-group-name "TestHybridGroup" --resource-group "rg"
"""

helps['automation hybrid-runbook-worker-group update'] = """
    type: command
    short-summary: Update a hybrid runbook worker group.
    examples:
      - name: Update hybrid worker group
        text: |-
               az automation hybrid-runbook-worker-group update --automation-account-name "testaccount" --hybrid-runboo\
k-worker-group-name "TestHybridGroup" --credential name="myRunAsCredentialName" --resource-group "rg"
"""

helps['automation hybrid-runbook-worker-group delete'] = """
    type: command
    short-summary: Delete a hybrid runbook worker group.
    examples:
      - name: Delete a hybrid worker group
        text: |-
               az automation hybrid-runbook-worker-group delete --automation-account-name "myAutomationAccount20" --hyb\
rid-runbook-worker-group-name "myGroup" --resource-group "rg"
"""

helps['automation job-schedule'] = """
    type: group
    short-summary: automation job-schedule
"""

helps['automation job-schedule list'] = """
    type: command
    short-summary: Retrieve a list of job schedules.
    examples:
      - name: List all job schedules by automation account
        text: |-
               az automation job-schedule list --automation-account-name "ContoseAutomationAccount" --resource-group "r\
g"
"""

helps['automation job-schedule show'] = """
    type: command
    short-summary: Retrieve the job schedule identified by job schedule name.
    examples:
      - name: Get a job schedule
        text: |-
               az automation job-schedule show --automation-account-name "ContoseAutomationAccount" --job-schedule-id "\
0fa462ba-3aa2-4138-83ca-9ebc3bc55cdc" --resource-group "rg"
"""

helps['automation job-schedule create'] = """
    type: command
    short-summary: Create a job schedule.
    examples:
      - name: Create a job schedule
        text: |-
               az automation job-schedule create --automation-account-name "ContoseAutomationAccount" --job-schedule-id\
 "0fa462ba-3aa2-4138-83ca-9ebc3bc55cdc" --parameters properties={"parameters":{"jobscheduletag01":"jobschedulevalue01",\
"jobscheduletag02":"jobschedulevalue02"},"runbook":{"name":"TestRunbook"},"schedule":{"name":"ScheduleNameGoesHere33220\
4b5-debe-4348-a5c7-6357457189f2"}} --resource-group "rg"
"""

helps['automation job-schedule delete'] = """
    type: command
    short-summary: Delete the job schedule identified by job schedule name.
    examples:
      - name: Delete a job schedule
        text: |-
               az automation job-schedule delete --automation-account-name "ContoseAutomationAccount" --job-schedule-id\
 "0fa462ba-3aa2-4138-83ca-9ebc3bc55cdc" --resource-group "rg"
"""

helps['automation linked-workspace'] = """
    type: group
    short-summary: automation linked-workspace
"""

helps['automation linked-workspace show'] = """
    type: command
    short-summary: Retrieve the linked workspace for the account id.
    examples:
      - name: Get the linked workspace of an automation account
        text: |-
               az automation linked-workspace show --automation-account-name "ContosoAutomationAccount" --resource-grou\
p "rg"
"""

helps['automation activity'] = """
    type: group
    short-summary: automation activity
"""

helps['automation activity list'] = """
    type: command
    short-summary: Retrieve a list of activities in the module identified by module name.
    examples:
      - name: List activities by a module
        text: |-
               az automation activity list --automation-account-name "myAutomationAccount33" --module-name "OmsComposit\
eResources" --resource-group "rg"
"""

helps['automation activity show'] = """
    type: command
    short-summary: Retrieve the activity in the module identified by module name and activity name.
    examples:
      - name: Get Activity in a module
        text: |-
               az automation activity show --activity-name "Add-AzureRmAccount" --automation-account-name "myAutomation\
Account33" --module-name "OmsCompositeResources" --resource-group "rg"
"""

helps['automation module'] = """
    type: group
    short-summary: automation module
"""

helps['automation module list'] = """
    type: command
    short-summary: Retrieve a list of modules.
    examples:
      - name: List modules by automation account
        text: |-
               az automation module list --automation-account-name "myAutomationAccount33" --resource-group "rg"
"""

helps['automation module show'] = """
    type: command
    short-summary: Retrieve the module identified by module name.
    examples:
      - name: Get a module
        text: |-
               az automation module show --automation-account-name "myAutomationAccount33" --module-name "OmsCompositeR\
esources" --resource-group "rg"
"""

helps['automation module create'] = """
    type: command
    short-summary: Create or Update the module identified by module name.
    examples:
      - name: Create or update a module
        text: |-
               az automation module create --automation-account-name "myAutomationAccount33" --module-name "OmsComposit\
eResources" --content-link "{\\"contentHash\\":{\\"algorithm\\":\\"sha265\\",\\"value\\":\\"07E108A962B81DD9C9BAA89BB47\
C0F6EE52B29E83758B07795E408D258B2B87A\\"},\\"uri\\":\\"https://teststorage.blob.core.windows.net/dsccomposite/OmsCompos\
iteResources.zip\\",\\"version\\":\\"1.0.0.0\\"}" --resource-group "rg"
"""

helps['automation module update'] = """
    type: command
    short-summary: Update the module identified by module name.
    examples:
      - name: Update a module
        text: |-
               az automation module update --automation-account-name "MyAutomationAccount" --module-name "MyModule" --c\
ontent-link "{\\"contentHash\\":{\\"algorithm\\":\\"sha265\\",\\"value\\":\\"07E108A962B81DD9C9BAA89BB47C0F6EE52B29E837\
58B07795E408D258B2B87A\\"},\\"uri\\":\\"https://teststorage.blob.core.windows.net/mycontainer/MyModule.zip\\",\\"versio\
n\\":\\"1.0.0.0\\"}" --resource-group "rg"
"""

helps['automation module delete'] = """
    type: command
    short-summary: Delete the module by name.
    examples:
      - name: Delete a module
        text: |-
               az automation module delete --automation-account-name "myAutomationAccount33" --module-name "OmsComposit\
eResources" --resource-group "rg"
"""

helps['automation object-data-type'] = """
    type: group
    short-summary: automation object-data-type
"""

helps['automation object-data-type list-field'] = """
    type: command
    short-summary: Retrieve a list of fields of a given type across all accessible modules.
    examples:
      - name: Get a list of fields of a given type
        text: |-
               az automation object-data-type list-field --automation-account-name "MyAutomationAccount" --module-name \
"MyModule" --resource-group "rg" --type-name "MyCustomType"
"""

helps['automation field'] = """
    type: group
    short-summary: automation field
"""

helps['automation field list'] = """
    type: command
    short-summary: Retrieve a list of fields of a given type identified by module name.
    examples:
      - name: Get a list of fields of a given type
        text: |-
               az automation field list --automation-account-name "MyAutomationAccount" --module-name "MyModule" --reso\
urce-group "rg" --type-name "MyCustomType"
"""

helps['automation schedule'] = """
    type: group
    short-summary: automation schedule
"""

helps['automation schedule list'] = """
    type: command
    short-summary: Retrieve a list of schedules.
    examples:
      - name: List schedules by automation account, first 100
        text: |-
               az automation schedule list --automation-account-name "myAutomationAccount33" --resource-group "rg"
      - name: List schedules by automation account, next 100
        text: |-
               az automation schedule list --automation-account-name "myAutomationAccount33" --resource-group "rg"
"""

helps['automation schedule show'] = """
    type: command
    short-summary: Retrieve the schedule identified by schedule name.
    examples:
      - name: Get a schedule
        text: |-
               az automation schedule show --automation-account-name "myAutomationAccount33" --resource-group "rg" --sc\
hedule-name "mySchedule"
"""

helps['automation schedule create'] = """
    type: command
    short-summary: Create a schedule.
    examples:
      - name: Create or update a schedule
        text: |-
               az automation schedule create --automation-account-name "myAutomationAccount33" --name "mySchedule" --de\
scription "my description of schedule goes here" --expiry-time "2017-04-01T17:28:57.2494819Z" --frequency "Hour" --inte\
rval "1" --start-time "2017-03-27T17:28:57.2494819Z" --resource-group "rg" --schedule-name "mySchedule"
"""

helps['automation schedule update'] = """
    type: command
    short-summary: Update the schedule identified by schedule name.
    examples:
      - name: Update a schedule
        text: |-
               az automation schedule update --automation-account-name "myAutomationAccount33" --name "mySchedule" --de\
scription "my updated description of schedule goes here" --is-enabled false --resource-group "rg" --schedule-name "mySc\
hedule"
"""

helps['automation schedule delete'] = """
    type: command
    short-summary: Delete the schedule identified by schedule name.
    examples:
      - name: Delete schedule
        text: |-
               az automation schedule delete --automation-account-name "myAutomationAccount33" --resource-group "rg" --\
schedule-name "mySchedule"
"""

helps['automation variable'] = """
    type: group
    short-summary: automation variable
"""

helps['automation variable list'] = """
    type: command
    short-summary: Retrieve a list of variables.
    examples:
      - name: List variables, First 100
        text: |-
               az automation variable list --automation-account-name "sampleAccount9" --resource-group "rg"
      - name: List variables, Next 100
        text: |-
               az automation variable list --automation-account-name "sampleAccount9" --resource-group "rg"
"""

helps['automation variable show'] = """
    type: command
    short-summary: Retrieve the variable identified by variable name.
    examples:
      - name: Get a variable
        text: |-
               az automation variable show --automation-account-name "sampleAccount9" --resource-group "rg" --variable-\
name "sampleVariable"
"""

helps['automation variable create'] = """
    type: command
    short-summary: Create a variable.
    examples:
      - name: Create or update a variable
        text: |-
               az automation variable create --automation-account-name "sampleAccount9" --name "sampleVariable" --descr\
iption "my description" --is-encrypted false --value "\\"ComputerName.domain.com\\"" --resource-group "rg" --variable-n\
ame "sampleVariable"
"""

helps['automation variable update'] = """
    type: command
    short-summary: Update a variable.
    examples:
      - name: Update a variable
        text: |-
               az automation variable update --automation-account-name "sampleAccount9" --name "sampleVariable" --value\
 "\\"ComputerName3.domain.com\\"" --resource-group "rg" --variable-name "sampleVariable"
"""

helps['automation variable delete'] = """
    type: command
    short-summary: Delete the variable.
    examples:
      - name: Delete a variable
        text: |-
               az automation variable delete --automation-account-name "sampleAccount9" --resource-group "rg" --variabl\
e-name "sampleVariable"
"""

helps['automation webhook'] = """
    type: group
    short-summary: automation webhook
"""

helps['automation webhook list'] = """
    type: command
    short-summary: Retrieve a list of webhooks.
    examples:
      - name: List webhooks by Automation Account
        text: |-
               az automation webhook list --automation-account-name "myAutomationAccount33" --resource-group "rg"
"""

helps['automation webhook show'] = """
    type: command
    short-summary: Retrieve the webhook identified by webhook name.
    examples:
      - name: Get webhook
        text: |-
               az automation webhook show --automation-account-name "myAutomationAccount33" --resource-group "rg" --web\
hook-name "TestWebhook"
"""

helps['automation webhook create'] = """
    type: command
    short-summary: Create the webhook identified by webhook name.
    examples:
      - name: Create or update webhook
        text: |-
               az automation webhook create --automation-account-name "myAutomationAccount33" --parameters name="TestWe\
bhook" properties={"expiryTime":"2018-03-29T22:18:13.7002872Z","isEnabled":true,"runbook":{"name":"TestRunbook"},"uri":\
"https://s1events.azure-automation.net/webhooks?token=7u3KfQvM1vUPWaDMFRv2%2fAA4Jqx8QwS8aBuyO6Xsdcw%3d"} --resource-gro\
up "rg" --webhook-name "TestWebhook"
"""

helps['automation webhook update'] = """
    type: command
    short-summary: Update the webhook identified by webhook name.
    examples:
      - name: Update webhook
        text: |-
               az automation webhook update --automation-account-name "myAutomationAccount33" --parameters name="TestWe\
bhook" properties={"description":"updated webhook","isEnabled":false} --resource-group "rg" --webhook-name "TestWebhook\
"
"""

helps['automation webhook delete'] = """
    type: command
    short-summary: Delete the webhook by name.
    examples:
      - name: Delete webhook
        text: |-
               az automation webhook delete --automation-account-name "myAutomationAccount33" --resource-group "rg" --w\
ebhook-name "TestWebhook"
"""

helps['automation webhook generate-uri'] = """
    type: command
    short-summary: Generates a Uri for use in creating a webhook.
    examples:
      - name: Generate webhook uri
        text: |-
               az automation webhook generate-uri --automation-account-name "myAutomationAccount33" --resource-group "r\
g"
"""

helps['automation watcher'] = """
    type: group
    short-summary: automation watcher
"""

helps['automation watcher list'] = """
    type: command
    short-summary: Retrieve a list of watchers.
    examples:
      - name: List watchers by Automation Account
        text: |-
               az automation watcher list --automation-account-name "MyTestAutomationAccount" --resource-group "rg"
"""

helps['automation watcher show'] = """
    type: command
    short-summary: Retrieve the watcher identified by watcher name.
    examples:
      - name: Get watcher
        text: |-
               az automation watcher show --automation-account-name "MyTestAutomationAccount" --resource-group "rg" --w\
atcher-name "MyTestWatcher"
"""

helps['automation watcher create'] = """
    type: command
    short-summary: Create the watcher identified by watcher name.
    examples:
      - name: Create or update watcher
        text: |-
               az automation watcher create --automation-account-name "MyTestAutomationAccount" --description "This is \
a test watcher." --execution-frequency-in-seconds 60 --script-name "MyTestWatcherRunbook" --script-run-on "MyTestHybrid\
WorkerGroup" --resource-group "rg" --watcher-name "MyTestWatcher"
"""

helps['automation watcher update'] = """
    type: command
    short-summary: Update the watcher identified by watcher name.
    examples:
      - name: Update watcher
        text: |-
               az automation watcher update --automation-account-name "MyTestAutomationAccount" --name "MyTestWatcher" \
--execution-frequency-in-seconds 600 --resource-group "rg" --watcher-name "MyTestWatcher"
"""

helps['automation watcher delete'] = """
    type: command
    short-summary: Delete the watcher by name.
    examples:
      - name: Delete watcher
        text: |-
               az automation watcher delete --automation-account-name "MyTestAutomationAccount" --resource-group "rg" -\
-watcher-name "MyTestWatcher"
"""

helps['automation watcher start'] = """
    type: command
    short-summary: Resume the watcher identified by watcher name.
    examples:
      - name: Start Watcher
        text: |-
               az automation watcher start --automation-account-name "MyTestAutomationAccount" --resource-group "rg" --\
watcher-name "MyTestWatcher"
"""

helps['automation watcher stop'] = """
    type: command
    short-summary: Resume the watcher identified by watcher name.
    examples:
      - name: Start Watcher
        text: |-
               az automation watcher stop --automation-account-name "MyTestAutomationAccount" --resource-group "rg" --w\
atcher-name "MyTestWatcher"
"""

helps['automation software-update-configuration'] = """
    type: group
    short-summary: automation software-update-configuration
"""

helps['automation software-update-configuration list'] = """
    type: command
    short-summary: Get all software update configurations for the account.
    examples:
      - name: List software update configurations
        text: |-
               az automation software-update-configuration list --automation-account-name "myaccount" --resource-group \
"mygroup"
      - name: List software update configurations Targeting a specific azure virtual machine
        text: |-
               az automation software-update-configuration list --filter "properties/updateConfiguration/azureVirtualMa\
chines/any(m: m eq \'/subscriptions/1a7d4044-286c-4acb-969a-96639265bf2e/resourceGroups/myresources/providers/Microsoft\
.Compute/virtualMachines/vm-01\')" --automation-account-name "myaccount" --resource-group "mygroup"
"""

helps['automation software-update-configuration show'] = """
    type: command
    short-summary: Get a single software update configuration by name.
    examples:
      - name: Get software update configuration by name
        text: |-
               az automation software-update-configuration show --automation-account-name "myaccount" --resource-group \
"mygroup" --software-update-configuration-name "mypatch"
"""

helps['automation software-update-configuration create'] = """
    type: command
    short-summary: Create a new software update configuration with the name given in the URI.
    examples:
      - name: Create software update configuration
        text: |-
               az automation software-update-configuration create --automation-account-name "myaccount" --tasks-pre-tas\
k-parameters properties={"scheduleInfo":{"advancedSchedule":{"weekDays":["Monday","Thursday"]},"expiryTime":"2018-11-09\
T11:22:57+00:00","frequency":"Hour","interval":1,"startTime":"2017-10-19T12:22:57+00:00","timeZone":"America/Los_Angele\
s"},"tasks":{"postTask":{"parameters":null,"source":"GetCache"},"preTask":{"parameters":{"COMPUTERNAME":"Computer1"},"s\
ource":"HelloWorld"}},"updateConfiguration":{"azureVirtualMachines":["/subscriptions/5ae68d89-69a4-454f-b5ce-e443cc4e00\
67/resourceGroups/myresources/providers/Microsoft.Compute/virtualMachines/vm-01","/subscriptions/5ae68d89-69a4-454f-b5c\
e-e443cc4e0067/resourceGroups/myresources/providers/Microsoft.Compute/virtualMachines/vm-02","/subscriptions/5ae68d89-6\
9a4-454f-b5ce-e443cc4e0067/resourceGroups/myresources/providers/Microsoft.Compute/virtualMachines/vm-03"],"duration":"P\
T2H0M","nonAzureComputerNames":["box1.contoso.com","box2.contoso.com"],"operatingSystem":"Windows","targets":{"azureQue\
ries":[{"locations":["Japan East","UK South"],"scope":["/subscriptions/5ae68d89-69a4-454f-b5ce-e443cc4e0067/resourceGro\
ups/myresources","/subscriptions/5ae68d89-69a4-454f-b5ce-e443cc4e0067"],"tagSettings":{"filterOperator":"All","tags":[{\
"tag1":["tag1Value1","tag1Value2","tag1Value3"]},{"tag2":["tag2Value1","tag2Value2","tag2Value3"]}]}}],"nonAzureQueries\
":[{"functionAlias":"SavedSearch1","workspaceId":"WorkspaceId1"},{"functionAlias":"SavedSearch2","workspaceId":"Workspa\
ceId2"}]},"windows":{"excludedKbNumbers":["168934","168973"],"includedUpdateClassifications":"Critical","rebootSetting"\
:"IfRequired"}}} --resource-group "mygroup" --software-update-configuration-name "testpatch"
"""

helps['automation software-update-configuration delete'] = """
    type: command
    short-summary: delete a specific software update configuration.
    examples:
      - name: Delete software update configuration
        text: |-
               az automation software-update-configuration delete --automation-account-name "myaccount" --resource-grou\
p "mygroup" --software-update-configuration-name "mypatch"
"""

helps['automation software-update-configuration-run'] = """
    type: group
    short-summary: automation software-update-configuration-run
"""

helps['automation software-update-configuration-run list'] = """
    type: command
    short-summary: Return list of software update configuration runs
    examples:
      - name: List software update configuration machine run with status equal to 'Failed'
        text: |-
               az automation software-update-configuration-run list --filter "properties/status%20eq%20\'Failed\'" --au\
tomation-account-name "myaccount" --resource-group "mygroup"
      - name: List software update configuration machine runs
        text: |-
               az automation software-update-configuration-run list --automation-account-name "myaccount" --resource-gr\
oup "mygroup"
"""

helps['automation software-update-configuration-run show'] = """
    type: command
    short-summary: Get a single software update configuration Run by Id.
    examples:
      - name: Get software update configuration runs by Id
        text: |-
               az automation software-update-configuration-run show --automation-account-name "myaccount" --resource-gr\
oup "mygroup" --software-update-configuration-run-id "2bd77cfa-2e9c-41b4-a45b-684a77cfeca9"
"""

helps['automation software-update-configuration-machine-run'] = """
    type: group
    short-summary: automation software-update-configuration-machine-run
"""

helps['automation software-update-configuration-machine-run list'] = """
    type: command
    short-summary: Return list of software update configuration machine runs
    examples:
      - name: List software update configuration machine runs
        text: |-
               az automation software-update-configuration-machine-run list --automation-account-name "myaccount" --res\
ource-group "mygroup"
      - name: List software update configuration machine runs for a specific software update configuration run
        text: |-
               az automation software-update-configuration-machine-run list --filter "$filter=properties/correlationId%\
20eq%200b943e57-44d3-4f05-898c-6e92aa617e59" --automation-account-name "myaccount" --resource-group "mygroup"
"""

helps['automation software-update-configuration-machine-run show'] = """
    type: command
    short-summary: Get a single software update configuration machine run by Id.
    examples:
      - name: Get software update configuration machine run
        text: |-
               az automation software-update-configuration-machine-run show --automation-account-name "myaccount" --res\
ource-group "mygroup" --software-update-configuration-machine-run-id "ca440719-34a4-4234-a1a9-3f84faf7788f"
"""

helps['automation source-control'] = """
    type: group
    short-summary: automation source-control
"""

helps['automation source-control list'] = """
    type: command
    short-summary: Retrieve a list of source controls.
    examples:
      - name: List sourceControls
        text: |-
               az automation source-control list --automation-account-name "sampleAccount9" --resource-group "rg"
"""

helps['automation source-control show'] = """
    type: command
    short-summary: Retrieve the source control identified by source control name.
    examples:
      - name: Get a source control
        text: |-
               az automation source-control show --automation-account-name "sampleAccount9" --resource-group "rg" --sou\
rce-control-name "sampleSourceControl"
"""

helps['automation source-control create'] = """
    type: command
    short-summary: Create a source control.
    examples:
      - name: Create or update a source control
        text: |-
               az automation source-control create --automation-account-name "sampleAccount9" --description "my descrip\
tion" --auto-sync true --branch "master" --folder-path "/folderOne/folderTwo" --publish-runbook true --repo-url "https:\
//sampleUser.visualstudio.com/myProject/_git/myRepository" --security-token access-token="3a326f7a0dcd343ea58fee21f2fd5\
fb4c1234567" token-type="PersonalAccessToken" --source-type "VsoGit" --resource-group "rg" --source-control-name "sampl\
eSourceControl"
"""

helps['automation source-control update'] = """
    type: command
    short-summary: Update a source control.
    examples:
      - name: Update a source control
        text: |-
               az automation source-control update --automation-account-name "sampleAccount9" --description "my descrip\
tion" --auto-sync true --branch "master" --folder-path "/folderOne/folderTwo" --publish-runbook true --security-token a\
ccess-token="3a326f7a0dcd343ea58fee21f2fd5fb4c1234567" token-type="PersonalAccessToken" --resource-group "rg" --source-\
control-name "sampleSourceControl"
"""

helps['automation source-control delete'] = """
    type: command
    short-summary: Delete the source control.
    examples:
      - name: Delete a source control
        text: |-
               az automation source-control delete --automation-account-name "sampleAccount9" --resource-group "rg" --s\
ource-control-name "sampleSourceControl"
"""

helps['automation source-control-sync-job'] = """
    type: group
    short-summary: automation source-control-sync-job
"""

helps['automation source-control-sync-job list'] = """
    type: command
    short-summary: Retrieve a list of source control sync jobs.
    examples:
      - name: Get a list of source control sync jobs
        text: |-
               az automation source-control-sync-job list --automation-account-name "myAutomationAccount33" --resource-\
group "rg" --source-control-name "MySourceControl"
"""

helps['automation source-control-sync-job show'] = """
    type: command
    short-summary: Retrieve the source control sync job identified by job id.
    examples:
      - name: Get a source control sync job by job id
        text: |-
               az automation source-control-sync-job show --automation-account-name "myAutomationAccount33" --resource-\
group "rg" --source-control-name "MySourceControl" --source-control-sync-job-id "ce6fe3e3-9db3-4096-a6b4-82bfb4c10a9a"
"""

helps['automation source-control-sync-job create'] = """
    type: command
    short-summary: Creates the sync job for a source control.
    examples:
      - name: Create or update a source control sync job
        text: |-
               az automation source-control-sync-job create --automation-account-name "myAutomationAccount33" --commit-\
id "9de0980bfb45026a3d97a1b0522d98a9f604226e" --resource-group "rg" --source-control-name "MySourceControl" --source-co\
ntrol-sync-job-id "ce6fe3e3-9db3-4096-a6b4-82bfb4c10a9a"
"""

helps['automation source-control-sync-job-stream'] = """
    type: group
    short-summary: automation source-control-sync-job-stream
"""

helps['automation source-control-sync-job-stream list'] = """
    type: command
    short-summary: Retrieve a list of sync job streams identified by sync job id.
    examples:
      - name: Get a list of sync job streams identified by sync job id
        text: |-
               az automation source-control-sync-job-stream list --automation-account-name "myAutomationAccount33" --re\
source-group "rg" --source-control-name "MySourceControl" --source-control-sync-job-id "ce6fe3e3-9db3-4096-a6b4-82bfb4c\
10a2b"
"""

helps['automation source-control-sync-job-stream show'] = """
    type: command
    short-summary: Retrieve a sync job stream identified by stream id.
    examples:
      - name: Get a sync job stream identified by sync job stream id.
        text: |-
               az automation source-control-sync-job-stream show --automation-account-name "myAutomationAccount33" --re\
source-group "rg" --source-control-name "MySourceControl" --source-control-sync-job-id "ce6fe3e3-9db3-4096-a6b4-82bfb4c\
10a2b" --stream-id "b86c5c31-e9fd-4734-8764-ddd6c101e706_00636596855139029522_00000000000000000007"
"""

helps['automation job'] = """
    type: group
    short-summary: automation job
"""

helps['automation job list'] = """
    type: command
    short-summary: Retrieve a list of jobs.
    examples:
      - name: List jobs by automation account
        text: |-
               az automation job list --automation-account-name "ContoseAutomationAccount" --resource-group "mygroup"
"""

helps['automation job show'] = """
    type: command
    short-summary: Retrieve the job identified by job name.
    examples:
      - name: Get Job Output
        text: |-
               az automation job show --automation-account-name "ContoseAutomationAccount" --job-name "foo" --resource-\
group "mygroup"
"""

helps['automation job create'] = """
    type: command
    short-summary: Create a job of the runbook.
    examples:
      - name: Create job
        text: |-
               az automation job create --automation-account-name "ContoseAutomationAccount" --job-name "foo" --paramet\
ers properties={"parameters":{"key01":"value01","key02":"value02"},"runOn":"","runbook":{"name":"TestRunbook"}} --resou\
rce-group "mygroup"
"""

helps['automation job resume'] = """
    type: command
    short-summary: Resume the job identified by jobName.
    examples:
      - name: Resume job
        text: |-
               az automation job resume --automation-account-name "ContoseAutomationAccount" --job-name "foo" --resourc\
e-group "mygroup"
"""

helps['automation job stop'] = """
    type: command
    short-summary: Stop the job identified by jobName.
    examples:
      - name: Stop job
        text: |-
               az automation job stop --automation-account-name "ContoseAutomationAccount" --job-name "foo" --resource-\
group "mygroup"
"""

helps['automation job suspend'] = """
    type: command
    short-summary: Suspend the job identified by job name.
    examples:
      - name: Suspend job
        text: |-
               az automation job suspend --automation-account-name "ContoseAutomationAccount" --job-name "foo" --resour\
ce-group "mygroup"
"""

helps['automation job-stream'] = """
    type: group
    short-summary: automation job-stream
"""

helps['automation job-stream list'] = """
    type: command
    short-summary: Retrieve a list of jobs streams identified by job name.
    examples:
      - name: List job streams by job name
        text: |-
               az automation job-stream list --automation-account-name "ContoseAutomationAccount" --job-name "foo" --re\
source-group "mygroup"
"""

helps['automation job-stream show'] = """
    type: command
    short-summary: Retrieve the job stream identified by job stream id.
    examples:
      - name: Get job stream
        text: |-
               az automation job-stream show --automation-account-name "ContoseAutomationAccount" --job-name "foo" --jo\
b-stream-id "851b2101-686f-40e2-8a4b-5b8df08afbd1_00636535684910693884_00000000000000000001" --resource-group "mygroup"
"""

helps['automation agent-registration-information'] = """
    type: group
    short-summary: automation agent-registration-information
"""

helps['automation agent-registration-information show'] = """
    type: command
    short-summary: Retrieve the automation agent registration information.
    examples:
      - name: Get the agent registration information
        text: |-
               az automation agent-registration-information show --automation-account-name "myAutomationAccount18" --re\
source-group "rg"
"""

helps['automation agent-registration-information regenerate-key'] = """
    type: command
    short-summary: Regenerate a primary or secondary agent registration key
    examples:
      - name: Regenerate registration key
        text: |-
               az automation agent-registration-information regenerate-key --automation-account-name "myAutomationAccou\
nt18" --key-name "primary" --resource-group "rg"
"""

helps['automation dsc-node'] = """
    type: group
    short-summary: automation dsc-node
"""

helps['automation dsc-node list'] = """
    type: command
    short-summary: Retrieve a list of dsc nodes.
    examples:
      - name: List DSC nodes by Automation Account
        text: |-
               az automation dsc-node list --automation-account-name "myAutomationAccount33" --resource-group "rg"
      - name: List Paged DSC nodes by Automation Account where Node Configurations are not assigned filter
        text: |-
               az automation dsc-node list --filter "properties/nodeConfiguration/name eq \'\'" --inlinecount "allpages\
" --skip 0 --top 20 --automation-account-name "myAutomationAccount33" --resource-group "rg"
      - name: List Paged DSC nodes by Automation Account with Node Configuration Custom filter
        text: |-
               az automation dsc-node list --filter "contains(properties/nodeConfiguration/name,\'SetupServer.localhost\
,SetupClient.localhost,$$Not$$Configured$$\')" --inlinecount "allpages" --skip 0 --top 4 --automation-account-name "myA\
utomationAccount33" --resource-group "rg"
      - name: List Paged DSC nodes by Automation Account with name filter
        text: |-
               az automation dsc-node list --filter "contains(\'DSCCOMP\',name)" --inlinecount "allpages" --skip 0 --to\
p 6 --automation-account-name "myAutomationAccount33" --resource-group "rg"
      - name: List Paged DSC nodes by Automation Account with no filters
        text: |-
               az automation dsc-node list --inlinecount "allpages" --skip 0 --top 2 --automation-account-name "myAutom\
ationAccount33" --resource-group "rg"
      - name: List Paged DSC nodes by Automation Account with node status filter
        text: |-
               az automation dsc-node list --filter "contains(properties/status,\'Compliant,NotCompliant\')" --inlineco\
unt "allpages" --skip 0 --top 4 --automation-account-name "myAutomationAccount33" --resource-group "rg"
      - name: List Paged DSC nodes by Automation Account with version filter
        text: |-
               az automation dsc-node list --filter "properties/extensionHandler/any(eh: eh/version le \'2.70\')" --inl\
inecount "allpages" --skip 0 --top 4 --automation-account-name "myAutomationAccount33" --resource-group "rg"
      - name: List Paged DSC nodes with filters separated by 'and'
        text: |-
               az automation dsc-node list --filter "properties/extensionHandler/any(eh: eh/version gt \'2.70\') and co\
ntains(name,\'sql\') and contains(properties/nodeConfiguration/name,\'$$Not$$Configured$$\')" --inlinecount "allpages" \
--skip 0 --top 10 --automation-account-name "myAutomationAccount33" --resource-group "rg"
"""

helps['automation dsc-node show'] = """
    type: command
    short-summary: Retrieve the dsc node identified by node id.
    examples:
      - name: Get a node
        text: |-
               az automation dsc-node show --automation-account-name "myAutomationAccount33" --node-id "nodeId" --resou\
rce-group "rg"
"""

helps['automation dsc-node update'] = """
    type: command
    short-summary: Update the dsc node.
    examples:
      - name: Update a node
        text: |-
               az automation dsc-node update --automation-account-name "myAutomationAccount33" --node-id "nodeId" --nod\
e-configuration-name "SetupServer.localhost" --node-id "nodeId" --resource-group "rg"
"""

helps['automation dsc-node delete'] = """
    type: command
    short-summary: Delete the dsc node identified by node id.
    examples:
      - name: Delete a DSC Node
        text: |-
               az automation dsc-node delete --automation-account-name "myAutomationAccount9" --node-id "e1243a76-a9bd-\
432f-bde3-ad8f317ee786" --resource-group "rg"
"""

helps['automation node-report'] = """
    type: group
    short-summary: automation node-report
"""

helps['automation node-report list'] = """
    type: command
    short-summary: Retrieve the Dsc node report list by node id.
    examples:
      - name: List DSC reports by node id.
        text: |-
               az automation node-report list --automation-account-name "myAutomationAccount33" --node-id "nodeId" --re\
source-group "rg"
"""

helps['automation node-report show'] = """
    type: command
    short-summary: Retrieve the Dsc node reports by node id and report id.
    examples:
      - name: Get Dsc node report data by node id and report id. 
        text: |-
               az automation node-report show --automation-account-name "myAutomationAccount33" --node-id "nodeId" --re\
port-id "903a5ead-140c-11e7-a943-000d3a6140c9" --resource-group "rg"
"""

helps['automation dsc-compilation-job'] = """
    type: group
    short-summary: automation dsc-compilation-job
"""

helps['automation dsc-compilation-job list'] = """
    type: command
    short-summary: Retrieve a list of dsc compilation jobs.
    examples:
      - name: List DSC Compilation job in Automation Account
        text: |-
               az automation dsc-compilation-job list --automation-account-name "myAutomationAccount33" --resource-grou\
p "rg"
"""

helps['automation dsc-compilation-job show'] = """
    type: command
    short-summary: Retrieve the Dsc configuration compilation job identified by job id.
    examples:
      - name: Get a DSC Compilation job stream by job stream id
        text: |-
               az automation dsc-compilation-job show --automation-account-name "myAutomationAccount33" --job-id "836d4\
e06-2d88-46b4-8500-7febd4906838" --job-stream-id "836d4e06-2d88-46b4-8500-7febd4906838_00636481062421684835_00000000000\
000000008" --resource-group "rg"
"""

helps['automation dsc-compilation-job create'] = """
    type: command
    short-summary: Creates the Dsc compilation job of the configuration.
    examples:
      - name: Create or update a DSC Compilation job
        text: |-
               az automation dsc-compilation-job create --automation-account-name "myAutomationAccount33" --compilation\
-job-name "TestCompilationJob" --parameters properties={"configuration":{"name":"SetupServer"}} --resource-group "rg"
"""

helps['automation dsc-compilation-job-stream'] = """
    type: group
    short-summary: automation dsc-compilation-job-stream
"""

helps['automation dsc-compilation-job-stream list'] = """
    type: command
    short-summary: Retrieve all the job streams for the compilation Job.
    examples:
      - name: List DSC Compilation job streams
        text: |-
               az automation dsc-compilation-job-stream list --automation-account-name "myAutomationAccount33" --job-id\
 "836d4e06-2d88-46b4-8500-7febd4906838" --resource-group "rg"
"""

helps['automation dsc-node-configuration'] = """
    type: group
    short-summary: automation dsc-node-configuration
"""

helps['automation dsc-node-configuration list'] = """
    type: command
    short-summary: Retrieve a list of dsc node configurations.
    examples:
      - name: List DSC node configurations by Automation Account
        text: |-
               az automation dsc-node-configuration list --automation-account-name "myAutomationAccount33" --resource-g\
roup "rg"
      - name: List Paged DSC node configurations by Automation Account with name filter
        text: |-
               az automation dsc-node-configuration list --filter "contains(\'.localhost\',name)" --inlinecount "allpag\
es" --skip 0 --top 2 --automation-account-name "myAutomationAccount33" --resource-group "rg"
      - name: List Paged DSC node configurations by Automation Account with no filter
        text: |-
               az automation dsc-node-configuration list --inlinecount "allpages" --skip 0 --top 4 --automation-account\
-name "myAutomationAccount33" --resource-group "rg"
"""

helps['automation dsc-node-configuration show'] = """
    type: command
    short-summary: Retrieve the Dsc node configurations by node configuration.
    examples:
      - name: Get a DSC node configuration
        text: |-
               az automation dsc-node-configuration show --automation-account-name "myAutomationAccount33" --node-confi\
guration-name "SetupServer.localhost" --resource-group "rg"
"""

helps['automation dsc-node-configuration create'] = """
    type: command
    short-summary: Create the node configuration identified by node configuration name.
    examples:
      - name: Create node configuration
        text: |-
               az automation dsc-node-configuration create --automation-account-name "myAutomationAccount20" --node-con\
figuration-name "configName.nodeConfigName" --name "configName.nodeConfigName" --configuration name="configName" --incr\
ement-node-configuration-build true --source "{\\"type\\":\\"embeddedContent\\",\\"hash\\":{\\"algorithm\\":\\"sha256\\\
",\\"value\\":\\"6DE256A57F01BFA29B88696D5E77A383D6E61484C7686E8DB955FA10ACE9FFE5\\"},\\"value\\":\\"\\\\r\\\\ninstance\
 of MSFT_RoleResource as $MSFT_RoleResource1ref\\\\r\\\\n{\\\\r\\\\nResourceID = \\\\\\"[WindowsFeature]IIS\\\\\\";\\\\\
r\\\\n Ensure = \\\\\\"Present\\\\\\";\\\\r\\\\n SourceInfo = \\\\\\"::3::32::WindowsFeature\\\\\\";\\\\r\\\\n Name = \
\\\\\\"Web-Server\\\\\\";\\\\r\\\\n ModuleName = \\\\\\"PsDesiredStateConfiguration\\\\\\";\\\\r\\\\n\\\\r\\\\nModuleVe\
rsion = \\\\\\"1.0\\\\\\";\\\\r\\\\r\\\\n ConfigurationName = \\\\\\"configName\\\\\\";\\\\r\\\\r\\\\n};\\\\r\\\\ninsta\
nce of OMI_ConfigurationDocument\\\\r\\\\n\\\\r\\\\r\\\\n                    {\\\\r\\\\n Version=\\\\\\"2.0.0\\\\\\";\\\
\\r\\\\n \\\\r\\\\r\\\\n                        MinimumCompatibleVersion = \\\\\\"1.0.0\\\\\\";\\\\r\\\\n \\\\r\\\\r\\\
\\n                        CompatibleVersionAdditionalProperties= {\\\\\\"Omi_BaseResource:ConfigurationName\\\\\\"};\\\
\\r\\\\n \\\\r\\\\r\\\\n                        Author=\\\\\\"weijiel\\\\\\";\\\\r\\\\n \\\\r\\\\r\\\\n                \
        GenerationDate=\\\\\\"03/30/2017 13:40:25\\\\\\";\\\\r\\\\n \\\\r\\\\r\\\\n                        GenerationHo\
st=\\\\\\"TEST-BACKEND\\\\\\";\\\\r\\\\n \\\\r\\\\r\\\\n                        Name=\\\\\\"configName\\\\\\";\\\\r\\\\\
n\\\\r\\\\r\\\\n                    };\\\\r\\\\n\\",\\"version\\":\\"1.0\\"}" --resource-group "rg"
"""

helps['automation dsc-node-configuration update'] = """
    type: command
    short-summary: Create the node configuration identified by node configuration name.
    examples:
      - name: Create node configuration
        text: |-
               az automation dsc-node-configuration update --automation-account-name "myAutomationAccount20" --node-con\
figuration-name "configName.nodeConfigName" --name "configName.nodeConfigName" --configuration name="configName" --incr\
ement-node-configuration-build true --source "{\\"type\\":\\"embeddedContent\\",\\"hash\\":{\\"algorithm\\":\\"sha256\\\
",\\"value\\":\\"6DE256A57F01BFA29B88696D5E77A383D6E61484C7686E8DB955FA10ACE9FFE5\\"},\\"value\\":\\"\\\\r\\\\ninstance\
 of MSFT_RoleResource as $MSFT_RoleResource1ref\\\\r\\\\n{\\\\r\\\\nResourceID = \\\\\\"[WindowsFeature]IIS\\\\\\";\\\\\
r\\\\n Ensure = \\\\\\"Present\\\\\\";\\\\r\\\\n SourceInfo = \\\\\\"::3::32::WindowsFeature\\\\\\";\\\\r\\\\n Name = \
\\\\\\"Web-Server\\\\\\";\\\\r\\\\n ModuleName = \\\\\\"PsDesiredStateConfiguration\\\\\\";\\\\r\\\\n\\\\r\\\\nModuleVe\
rsion = \\\\\\"1.0\\\\\\";\\\\r\\\\r\\\\n ConfigurationName = \\\\\\"configName\\\\\\";\\\\r\\\\r\\\\n};\\\\r\\\\ninsta\
nce of OMI_ConfigurationDocument\\\\r\\\\n\\\\r\\\\r\\\\n                    {\\\\r\\\\n Version=\\\\\\"2.0.0\\\\\\";\\\
\\r\\\\n \\\\r\\\\r\\\\n                        MinimumCompatibleVersion = \\\\\\"1.0.0\\\\\\";\\\\r\\\\n \\\\r\\\\r\\\
\\n                        CompatibleVersionAdditionalProperties= {\\\\\\"Omi_BaseResource:ConfigurationName\\\\\\"};\\\
\\r\\\\n \\\\r\\\\r\\\\n                        Author=\\\\\\"weijiel\\\\\\";\\\\r\\\\n \\\\r\\\\r\\\\n                \
        GenerationDate=\\\\\\"03/30/2017 13:40:25\\\\\\";\\\\r\\\\n \\\\r\\\\r\\\\n                        GenerationHo\
st=\\\\\\"TEST-BACKEND\\\\\\";\\\\r\\\\n \\\\r\\\\r\\\\n                        Name=\\\\\\"configName\\\\\\";\\\\r\\\\\
n\\\\r\\\\r\\\\n                    };\\\\r\\\\n\\",\\"version\\":\\"1.0\\"}" --resource-group "rg"
"""

helps['automation dsc-node-configuration delete'] = """
    type: command
    short-summary: Delete the Dsc node configurations by node configuration.
    examples:
      - name: Delete a DSC node configuration
        text: |-
               az automation dsc-node-configuration delete --automation-account-name "myAutomationAccount20" --node-con\
figuration-name "configName.nodeConfigName" --resource-group "rg"
"""

helps['automation node-count-information'] = """
    type: group
    short-summary: automation node-count-information
"""

helps['automation node-count-information show'] = """
    type: command
    short-summary: Retrieve counts for Dsc Nodes.
    examples:
      - name: Get node's node configuration counts
        text: |-
               az automation node-count-information show --automation-account-name "myAutomationAccount33" --count-type\
 "nodeconfiguration" --resource-group "rg"
      - name: Get node's status counts
        text: |-
               az automation node-count-information show --automation-account-name "myAutomationAccount33" --count-type\
 "status" --resource-group "rg"
"""

helps['automation runbook-draft'] = """
    type: group
    short-summary: automation runbook-draft
"""

helps['automation runbook-draft show'] = """
    type: command
    short-summary: Retrieve the runbook draft identified by runbook name.
    examples:
      - name: Get runbook draft content
        text: |-
               az automation runbook-draft show --automation-account-name "ContoseAutomationAccount" --resource-group "\
rg" --runbook-name "Get-AzureVMTutorial"
"""

helps['automation runbook-draft replace-content'] = """
    type: command
    short-summary: Replaces the runbook draft content.
    examples:
      - name: Create or update runbook draft
        text: |-
               az automation runbook-draft replace-content --automation-account-name "ContoseAutomationAccount" --resou\
rce-group "rg" --runbook-content "<#\\r\\n        .DESCRIPTION\\r\\n            An example runbook which prints out the\
 first10 Azure VMs in your subscription (ordered alphabetically).\\r\\n            For more information about how this \
runbook authenticates to your Azure subscription, see our documentation here: http: //aka.ms/fxu3mn\\r\\n\\r\\n        \
.NOTES\\r\\n            AUTHOR: Azure Automation Team\\r\\n            LASTEDIT: Mar27,\\r\\n            2015\\r\\n    \
#>\\r\\n    workflow Get-AzureVMTutorial{\\r\\n        #The name of the Automation Credential Asset this runbook will u\
se to authenticate to Azure.\\r\\n        $CredentialAssetName = \'DefaultAzureCredential\'\\r\\n\\r\\n        #Get the\
 credential with the above name from the Automation Asset store\\r\\n        $Cred = Get-AutomationPSCredential -Name $\
CredentialAssetName\\r\\n        if(!$Cred){\\r\\n            Throw\\"Could not find an Automation Credential Asset nam\
ed \'${CredentialAssetName}\'. Make sure you have created one in this Automation Account.\\"\\r\\n                }\\r\
\\n\\r\\n        #Connect to your Azure Account\\r\\n        $Account = Add-AzureAccount -Credential $Cred\\r\\n       \
 if(!$Account){\\r\\n            Throw\\"Could not authenticate to Azure using the credential asset \'${CredentialAsset\
Name}\'. Make sure the user name and password are correct.\\"\\r\\n                }\\r\\n\\r\\n        #TODO (optional\
): pick the right subscription to use. Without this line, the default subscription for your Azure Account will be used.\
\\r\\n        #Select-AzureSubscription -SubscriptionName\\"TODO: your Azure subscription name here\\"\\r\\n        \\r\
\\n        #Get all the VMs you have in your Azure subscription\\r\\n        $VMs = Get-AzureVM\\r\\n\\r\\n        #Pri\
nt out up to10 of those VMs\\r\\n        if(!$VMs){\\r\\n            Write-Output\\"No VMs were found in your subscript\
ion.\\"\\r\\n                } else{\\r\\n            Write-Output $VMs[0..9\\r\\n                    ]\\r\\n          \
      }\\r\\n            }" --runbook-name "Get-AzureVMTutorial"
"""

helps['automation runbook-draft undo-edit'] = """
    type: command
    short-summary: Undo draft edit to last known published state identified by runbook name.
    examples:
      - name: Undo draft edit to last known published state
        text: |-
               az automation runbook-draft undo-edit --automation-account-name "ContoseAutomationAccount" --resource-gr\
oup "rg" --runbook-name "Get-AzureVMTutorial"
"""

helps['automation runbook'] = """
    type: group
    short-summary: automation runbook
"""

helps['automation runbook list'] = """
    type: command
    short-summary: Retrieve a list of runbooks.
    examples:
      - name: List runbooks by automation account
        text: |-
               az automation runbook list --automation-account-name "ContoseAutomationAccount" --resource-group "rg"
"""

helps['automation runbook show'] = """
    type: command
    short-summary: Retrieve the runbook identified by runbook name.
    examples:
      - name: Get runbook content
        text: |-
               az automation runbook show --automation-account-name "ContoseAutomationAccount" --resource-group "rg" --\
runbook-name "Get-AzureVMTutorial"
"""

helps['automation runbook create'] = """
    type: command
    short-summary: Create the runbook identified by runbook name.
    examples:
      - name: Create or update runbook and publish it
        text: |-
               az automation runbook create --automation-account-name "ContoseAutomationAccount" --name "Get-AzureVMTut\
orial" --location "East US 2" --description "Description of the Runbook" --log-activity-trace 1 --log-progress true --l\
og-verbose false --publish-content-link "{\\"contentHash\\":{\\"algorithm\\":\\"SHA256\\",\\"value\\":\\"115775B8FF2BE6\
72D8A946BD0B489918C724DDE15A440373CA54461D53010A80\\"},\\"uri\\":\\"https://raw.githubusercontent.com/Azure/azure-quick\
start-templates/master/101-automation-runbook-getvms/Runbooks/Get-AzureVMTutorial.ps1\\"}" --runbook-type "PowerShellWo\
rkflow" --tags tag01="value01" tag02="value02" --resource-group "rg" --runbook-name "Get-AzureVMTutorial"
      - name: Create runbook as draft
        text: |-
               az automation runbook create --automation-account-name "ContoseAutomationAccount" --name "Get-AzureVMTut\
orial" --location "East US 2" --description "Description of the Runbook" --draft "{}" --log-progress false --log-verbos\
e false --runbook-type "PowerShellWorkflow" --tags tag01="value01" tag02="value02" --resource-group "rg" --runbook-name\
 "Get-AzureVMTutorial"
"""

helps['automation runbook update'] = """
    type: command
    short-summary: Update the runbook identified by runbook name.
    examples:
      - name: Update runbook
        text: |-
               az automation runbook update --automation-account-name "ContoseAutomationAccount" --description "Updated\
 Description of the Runbook" --log-activity-trace 1 --log-progress true --log-verbose false --resource-group "rg" --run\
book-name "Get-AzureVMTutorial"
"""

helps['automation runbook delete'] = """
    type: command
    short-summary: Delete the runbook by name.
    examples:
      - name: Delete a runbook
        text: |-
               az automation runbook delete --automation-account-name "ContoseAutomationAccount" --resource-group "rg" \
--runbook-name "Get-AzureVMTutorial"
"""

helps['automation runbook publish'] = """
    type: command
    short-summary: Publish runbook draft.
    examples:
      - name: Publish runbook draft
        text: |-
               az automation runbook publish --automation-account-name "ContoseAutomationAccount" --resource-group "rg"\
 --runbook-name "Get-AzureVMTutorial"
"""

helps['automation test-job-stream'] = """
    type: group
    short-summary: automation test-job-stream
"""

helps['automation test-job-stream list'] = """
    type: command
    short-summary: Retrieve a list of test job streams identified by runbook name.
    examples:
      - name: List job streams by job name
        text: |-
               az automation test-job-stream list --automation-account-name "ContoseAutomationAccount" --resource-group\
 "mygroup" --runbook-name "Get-AzureVMTutorial"
"""

helps['automation test-job-stream show'] = """
    type: command
    short-summary: Retrieve a test job stream of the test job identified by runbook name and stream id.
    examples:
      - name: Get test job stream
        text: |-
               az automation test-job-stream show --automation-account-name "ContoseAutomationAccount" --job-stream-id \
"851b2101-686f-40e2-8a4b-5b8df08afbd1_00636535684910693884_00000000000000000001" --resource-group "mygroup" --runbook-n\
ame "Get-AzureVMTutorial"
"""

helps['automation test-job'] = """
    type: group
    short-summary: automation test-job
"""

helps['automation test-job show'] = """
    type: command
    short-summary: Retrieve the test job for the specified runbook.
    examples:
      - name: Get test job
        text: |-
               az automation test-job show --automation-account-name "ContoseAutomationAccount" --resource-group "mygro\
up" --runbook-name "Get-AzureVMTutorial"
"""

helps['automation test-job create'] = """
    type: command
    short-summary: Create a test job of the runbook.
    examples:
      - name: Create test job
        text: |-
               az automation test-job create --automation-account-name "ContoseAutomationAccount" --parameters paramete\
rs={"key01":"value01","key02":"value02"} runOn="" --resource-group "mygroup" --runbook-name "Get-AzureVMTutorial"
"""

helps['automation test-job resume'] = """
    type: command
    short-summary: Resume the test job.
    examples:
      - name: Resume test job
        text: |-
               az automation test-job resume --automation-account-name "ContoseAutomationAccount" --resource-group "myg\
roup" --runbook-name "Get-AzureVMTutorial"
"""

helps['automation test-job stop'] = """
    type: command
    short-summary: Stop the test job.
    examples:
      - name: Stop test job
        text: |-
               az automation test-job stop --automation-account-name "ContoseAutomationAccount" --resource-group "mygro\
up" --runbook-name "Get-AzureVMTutorial"
"""

helps['automation test-job suspend'] = """
    type: command
    short-summary: Suspend the test job.
    examples:
      - name: Suspend test job
        text: |-
               az automation test-job suspend --automation-account-name "ContoseAutomationAccount" --resource-group "my\
group" --runbook-name "Get-AzureVMTutorial"
"""

helps['automation python2-package'] = """
    type: group
    short-summary: automation python2-package
"""

helps['automation python2-package list'] = """
    type: command
    short-summary: Retrieve a list of python 2 packages.
    examples:
      - name: List python 2 packages by automation account
        text: |-
               az automation python2-package list --automation-account-name "myAutomationAccount33" --resource-group "r\
g"
"""

helps['automation python2-package show'] = """
    type: command
    short-summary: Retrieve the python 2 package identified by package name.
    examples:
      - name: Get a python 2 package
        text: |-
               az automation python2-package show --automation-account-name "myAutomationAccount33" --package-name "Oms\
CompositeResources" --resource-group "rg"
"""

helps['automation python2-package create'] = """
    type: command
    short-summary: Create or Update the python 2 package identified by package name.
    examples:
      - name: Create or update a python 2 package
        text: |-
               az automation python2-package create --automation-account-name "myAutomationAccount33" --package-name "O\
msCompositeResources" --content-link "{\\"contentHash\\":{\\"algorithm\\":\\"sha265\\",\\"value\\":\\"07E108A962B81DD9C\
9BAA89BB47C0F6EE52B29E83758B07795E408D258B2B87A\\"},\\"uri\\":\\"https://teststorage.blob.core.windows.net/dsccomposite\
/OmsCompositeResources.zip\\",\\"version\\":\\"1.0.0.0\\"}" --resource-group "rg"
"""

helps['automation python2-package update'] = """
    type: command
    short-summary: Update the python 2 package identified by package name.
    examples:
      - name: Update a module
        text: |-
               az automation python2-package update --automation-account-name "MyAutomationAccount" --package-name "MyP\
ython2Package" --resource-group "rg"
"""

helps['automation python2-package delete'] = """
    type: command
    short-summary: Delete the python 2 package by name.
    examples:
      - name: Delete a python 2 package
        text: |-
               az automation python2-package delete --automation-account-name "myAutomationAccount33" --package-name "O\
msCompositeResources" --resource-group "rg"
"""
