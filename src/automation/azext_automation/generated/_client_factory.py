# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


def cf_automation(cli_ctx, *_):
    from azure.cli.core.commands.client_factory import get_mgmt_service_client
    from ..vendored_sdks.automation import AutomationClient
    return get_mgmt_service_client(cli_ctx, AutomationClient)


def cf_automation_account(cli_ctx, *_):
    return cf_automation(cli_ctx).automation_account


def cf_statistics(cli_ctx, *_):
    return cf_automation(cli_ctx).statistics


def cf_usage(cli_ctx, *_):
    return cf_automation(cli_ctx).usage


def cf_key(cli_ctx, *_):
    return cf_automation(cli_ctx).key


def cf_certificate(cli_ctx, *_):
    return cf_automation(cli_ctx).certificate


def cf_connection(cli_ctx, *_):
    return cf_automation(cli_ctx).connection


def cf_connection_type(cli_ctx, *_):
    return cf_automation(cli_ctx).connection_type


def cf_credential(cli_ctx, *_):
    return cf_automation(cli_ctx).credential


def cf_dsc_configuration(cli_ctx, *_):
    return cf_automation(cli_ctx).dsc_configuration


def cf_hybrid_runbook_worker_group(cli_ctx, *_):
    return cf_automation(cli_ctx).hybrid_runbook_worker_group


def cf_job_schedule(cli_ctx, *_):
    return cf_automation(cli_ctx).job_schedule


def cf_linked_workspace(cli_ctx, *_):
    return cf_automation(cli_ctx).linked_workspace


def cf_activity(cli_ctx, *_):
    return cf_automation(cli_ctx).activity


def cf_module(cli_ctx, *_):
    return cf_automation(cli_ctx).module


def cf_object_data_type(cli_ctx, *_):
    return cf_automation(cli_ctx).object_data_type


def cf_field(cli_ctx, *_):
    return cf_automation(cli_ctx).field


def cf_schedule(cli_ctx, *_):
    return cf_automation(cli_ctx).schedule


def cf_variable(cli_ctx, *_):
    return cf_automation(cli_ctx).variable


def cf_webhook(cli_ctx, *_):
    return cf_automation(cli_ctx).webhook


def cf_watcher(cli_ctx, *_):
    return cf_automation(cli_ctx).watcher


def cf_software_update_configuration(cli_ctx, *_):
    return cf_automation(cli_ctx).software_update_configuration


def cf_software_update_configuration_run(cli_ctx, *_):
    return cf_automation(cli_ctx).software_update_configuration_run


def cf_software_update_configuration_machine_run(cli_ctx, *_):
    return cf_automation(cli_ctx).software_update_configuration_machine_run


def cf_source_control(cli_ctx, *_):
    return cf_automation(cli_ctx).source_control


def cf_source_control_sync_job(cli_ctx, *_):
    return cf_automation(cli_ctx).source_control_sync_job


def cf_source_control_sync_job_stream(cli_ctx, *_):
    return cf_automation(cli_ctx).source_control_sync_job_stream


def cf_job(cli_ctx, *_):
    return cf_automation(cli_ctx).job


def cf_job_stream(cli_ctx, *_):
    return cf_automation(cli_ctx).job_stream


def cf_agent_registration_information(cli_ctx, *_):
    return cf_automation(cli_ctx).agent_registration_information


def cf_dsc_node(cli_ctx, *_):
    return cf_automation(cli_ctx).dsc_node


def cf_node_report(cli_ctx, *_):
    return cf_automation(cli_ctx).node_report


def cf_dsc_compilation_job(cli_ctx, *_):
    return cf_automation(cli_ctx).dsc_compilation_job


def cf_dsc_compilation_job_stream(cli_ctx, *_):
    return cf_automation(cli_ctx).dsc_compilation_job_stream


def cf_dsc_node_configuration(cli_ctx, *_):
    return cf_automation(cli_ctx).dsc_node_configuration


def cf_node_count_information(cli_ctx, *_):
    return cf_automation(cli_ctx).node_count_information


def cf_runbook_draft(cli_ctx, *_):
    return cf_automation(cli_ctx).runbook_draft


def cf_runbook(cli_ctx, *_):
    return cf_automation(cli_ctx).runbook


def cf_test_job_stream(cli_ctx, *_):
    return cf_automation(cli_ctx).test_job_stream


def cf_test_job(cli_ctx, *_):
    return cf_automation(cli_ctx).test_job


def cf_python2package(cli_ctx, *_):
    return cf_automation(cli_ctx).python2_package
