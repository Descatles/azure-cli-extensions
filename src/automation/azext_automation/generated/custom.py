# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines

import json


def automation_automation_account_list(cmd, client,
                                       resource_group_name=None):
    if resource_group_name is not None:
        return client.list_by_resource_group(resource_group_name=resource_group_name)
    return client.list()


def automation_automation_account_show(cmd, client,
                                       resource_group_name,
                                       automation_account_name):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name)


def automation_automation_account_create(cmd, client,
                                         resource_group_name,
                                         automation_account_name,
                                         name=None,
                                         location=None,
                                         tags=None,
                                         sku=None):
    return client.create_or_update(resource_group_name=resource_group_name,
                                   automation_account_name=automation_account_name,
                                   name=name,
                                   location=location,
                                   tags=tags,
                                   sku=sku)


def automation_automation_account_update(cmd, client,
                                         resource_group_name,
                                         automation_account_name,
                                         name=None,
                                         location=None,
                                         tags=None,
                                         sku=None):
    return client.update(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         name=name,
                         location=location,
                         tags=tags,
                         sku=sku)


def automation_automation_account_delete(cmd, client,
                                         resource_group_name,
                                         automation_account_name):
    return client.delete(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name)


def automation_statistics_list(cmd, client,
                               resource_group_name,
                               automation_account_name,
                               filter=None):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name,
                                             filter=filter)


def automation_usage_list(cmd, client,
                          resource_group_name,
                          automation_account_name):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name)


def automation_key_list_by_automation_account(cmd, client,
                                              resource_group_name,
                                              automation_account_name):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name)


def automation_certificate_list(cmd, client,
                                resource_group_name,
                                automation_account_name):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name)


def automation_certificate_show(cmd, client,
                                resource_group_name,
                                automation_account_name,
                                certificate_name):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      certificate_name=certificate_name)


def automation_certificate_create(cmd, client,
                                  resource_group_name,
                                  automation_account_name,
                                  certificate_name,
                                  name,
                                  base64value,
                                  description=None,
                                  thumbprint=None,
                                  is_exportable=None):
    return client.create_or_update(resource_group_name=resource_group_name,
                                   automation_account_name=automation_account_name,
                                   certificate_name=certificate_name,
                                   name=name,
                                   base64_value=base64value,
                                   description=description,
                                   thumbprint=thumbprint,
                                   is_exportable=is_exportable)


def automation_certificate_update(cmd, client,
                                  resource_group_name,
                                  automation_account_name,
                                  certificate_name,
                                  name=None,
                                  description=None):
    return client.update(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         certificate_name=certificate_name,
                         name=name,
                         description=description)


def automation_certificate_delete(cmd, client,
                                  resource_group_name,
                                  automation_account_name,
                                  certificate_name):
    return client.delete(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         certificate_name=certificate_name)


def automation_connection_list(cmd, client,
                               resource_group_name,
                               automation_account_name):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name)


def automation_connection_show(cmd, client,
                               resource_group_name,
                               automation_account_name,
                               connection_name):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      connection_name=connection_name)


def automation_connection_create(cmd, client,
                                 resource_group_name,
                                 automation_account_name,
                                 connection_name,
                                 name,
                                 connection_type,
                                 description=None,
                                 field_definition_values=None):
    return client.create_or_update(resource_group_name=resource_group_name,
                                   automation_account_name=automation_account_name,
                                   connection_name=connection_name,
                                   name=name,
                                   description=description,
                                   connection_type=connection_type,
                                   field_definition_values=field_definition_values)


def automation_connection_update(cmd, client,
                                 resource_group_name,
                                 automation_account_name,
                                 connection_name,
                                 name=None,
                                 description=None,
                                 field_definition_values=None):
    return client.update(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         connection_name=connection_name,
                         name=name,
                         description=description,
                         field_definition_values=field_definition_values)


def automation_connection_delete(cmd, client,
                                 resource_group_name,
                                 automation_account_name,
                                 connection_name):
    return client.delete(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         connection_name=connection_name)


def automation_connection_type_list(cmd, client,
                                    resource_group_name,
                                    automation_account_name):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name)


def automation_connection_type_show(cmd, client,
                                    resource_group_name,
                                    automation_account_name,
                                    connection_type_name):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      connection_type_name=connection_type_name)


def automation_connection_type_create(cmd, client,
                                      resource_group_name,
                                      automation_account_name,
                                      connection_type_name,
                                      name,
                                      field_definitions,
                                      is_global=None):
    if isinstance(field_definitions, str):
        field_definitions = json.loads(field_definitions)
    return client.create_or_update(resource_group_name=resource_group_name,
                                   automation_account_name=automation_account_name,
                                   connection_type_name=connection_type_name,
                                   name=name,
                                   is_global=is_global,
                                   field_definitions=field_definitions)


def automation_connection_type_update(instance, cmd,
                                      resource_group_name,
                                      automation_account_name,
                                      connection_type_name,
                                      name,
                                      field_definitions,
                                      is_global=None):
    if isinstance(field_definitions, str):
        field_definitions = json.loads(field_definitions)
    return instance


def automation_connection_type_delete(cmd, client,
                                      resource_group_name,
                                      automation_account_name,
                                      connection_type_name):
    return client.delete(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         connection_type_name=connection_type_name)


def automation_credential_list(cmd, client,
                               resource_group_name,
                               automation_account_name):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name)


def automation_credential_show(cmd, client,
                               resource_group_name,
                               automation_account_name,
                               credential_name):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      credential_name=credential_name)


def automation_credential_create(cmd, client,
                                 resource_group_name,
                                 automation_account_name,
                                 credential_name,
                                 name,
                                 user_name,
                                 password,
                                 description=None):
    return client.create_or_update(resource_group_name=resource_group_name,
                                   automation_account_name=automation_account_name,
                                   credential_name=credential_name,
                                   name=name,
                                   user_name=user_name,
                                   password=password,
                                   description=description)


def automation_credential_update(cmd, client,
                                 resource_group_name,
                                 automation_account_name,
                                 credential_name,
                                 name=None,
                                 user_name=None,
                                 password=None,
                                 description=None):
    return client.update(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         credential_name=credential_name,
                         name=name,
                         user_name=user_name,
                         password=password,
                         description=description)


def automation_credential_delete(cmd, client,
                                 resource_group_name,
                                 automation_account_name,
                                 credential_name):
    return client.delete(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         credential_name=credential_name)


def automation_dsc_configuration_list(cmd, client,
                                      resource_group_name,
                                      automation_account_name,
                                      filter=None,
                                      skip=None,
                                      top=None,
                                      inlinecount=None):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name,
                                             filter=filter,
                                             skip=skip,
                                             top=top,
                                             inlinecount=inlinecount)


def automation_dsc_configuration_show(cmd, client,
                                      resource_group_name,
                                      automation_account_name,
                                      configuration_name):
    if resource_group_name is not None and automation_account_name is not None and configuration_name is not None:
        return client.get(resource_group_name=resource_group_name,
                          automation_account_name=automation_account_name,
                          configuration_name=configuration_name)
    return client.get_content(resource_group_name=resource_group_name,
                              automation_account_name=automation_account_name,
                              configuration_name=configuration_name)


def automation_dsc_configuration_create(cmd, client,
                                        resource_group_name,
                                        automation_account_name,
                                        configuration_name,
                                        source,
                                        name=None,
                                        location=None,
                                        tags=None,
                                        log_verbose=None,
                                        log_progress=None,
                                        parameters=None,
                                        description=None):
    if isinstance(source, str):
        source = json.loads(source)
    if isinstance(parameters, str):
        parameters = json.loads(parameters)
    return client.create_or_update(resource_group_name=resource_group_name,
                                   automation_account_name=automation_account_name,
                                   configuration_name=configuration_name,
                                   name=name,
                                   location=location,
                                   tags=tags,
                                   log_verbose=log_verbose,
                                   log_progress=log_progress,
                                   source=source,
                                   parameters=parameters,
                                   description=description)


def automation_dsc_configuration_update(cmd, client,
                                        resource_group_name,
                                        automation_account_name,
                                        configuration_name,
                                        name=None,
                                        tags=None,
                                        log_verbose=None,
                                        log_progress=None,
                                        source=None,
                                        parameters=None,
                                        description=None):
    if isinstance(source, str):
        source = json.loads(source)
    if isinstance(parameters, str):
        parameters = json.loads(parameters)
    return client.update(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         configuration_name=configuration_name,
                         name=name,
                         tags=tags,
                         log_verbose=log_verbose,
                         log_progress=log_progress,
                         source=source,
                         parameters=parameters,
                         description=description)


def automation_dsc_configuration_delete(cmd, client,
                                        resource_group_name,
                                        automation_account_name,
                                        configuration_name):
    return client.delete(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         configuration_name=configuration_name)


def automation_hybrid_runbook_worker_group_list(cmd, client,
                                                resource_group_name,
                                                automation_account_name,
                                                filter=None):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name,
                                             filter=filter)


def automation_hybrid_runbook_worker_group_show(cmd, client,
                                                resource_group_name,
                                                automation_account_name,
                                                hybrid_runbook_worker_group_name):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      hybrid_runbook_worker_group_name=hybrid_runbook_worker_group_name)


def automation_hybrid_runbook_worker_group_update(cmd, client,
                                                  resource_group_name,
                                                  automation_account_name,
                                                  hybrid_runbook_worker_group_name,
                                                  credential=None):
    return client.update(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         hybrid_runbook_worker_group_name=hybrid_runbook_worker_group_name,
                         credential=credential)


def automation_hybrid_runbook_worker_group_delete(cmd, client,
                                                  resource_group_name,
                                                  automation_account_name,
                                                  hybrid_runbook_worker_group_name):
    return client.delete(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         hybrid_runbook_worker_group_name=hybrid_runbook_worker_group_name)


def automation_job_schedule_list(cmd, client,
                                 resource_group_name,
                                 automation_account_name,
                                 filter=None):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name,
                                             filter=filter)


def automation_job_schedule_show(cmd, client,
                                 resource_group_name,
                                 automation_account_name,
                                 job_schedule_id):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      job_schedule_id=job_schedule_id)


def automation_job_schedule_create(cmd, client,
                                   resource_group_name,
                                   automation_account_name,
                                   job_schedule_id,
                                   schedule,
                                   runbook,
                                   run_on=None,
                                   parameters=None):
    return client.create(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         job_schedule_id=job_schedule_id,
                         schedule=schedule,
                         runbook=runbook,
                         run_on=run_on,
                         parameters=parameters)


def automation_job_schedule_delete(cmd, client,
                                   resource_group_name,
                                   automation_account_name,
                                   job_schedule_id):
    return client.delete(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         job_schedule_id=job_schedule_id)


def automation_linked_workspace_show(cmd, client,
                                     resource_group_name,
                                     automation_account_name):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name)


def automation_activity_list(cmd, client,
                             resource_group_name,
                             automation_account_name,
                             module_name):
    return client.list_by_module(resource_group_name=resource_group_name,
                                 automation_account_name=automation_account_name,
                                 module_name=module_name)


def automation_activity_show(cmd, client,
                             resource_group_name,
                             automation_account_name,
                             module_name,
                             activity_name):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      module_name=module_name,
                      activity_name=activity_name)


def automation_module_list(cmd, client,
                           resource_group_name,
                           automation_account_name):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name)


def automation_module_show(cmd, client,
                           resource_group_name,
                           automation_account_name,
                           module_name):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      module_name=module_name)


def automation_module_create(cmd, client,
                             resource_group_name,
                             automation_account_name,
                             module_name,
                             content_link,
                             name=None,
                             location=None,
                             tags=None):
    if isinstance(content_link, str):
        content_link = json.loads(content_link)
    return client.create_or_update(resource_group_name=resource_group_name,
                                   automation_account_name=automation_account_name,
                                   module_name=module_name,
                                   name=name,
                                   location=location,
                                   tags=tags,
                                   content_link=content_link)


def automation_module_update(cmd, client,
                             resource_group_name,
                             automation_account_name,
                             module_name,
                             name=None,
                             location=None,
                             tags=None,
                             content_link=None):
    if isinstance(content_link, str):
        content_link = json.loads(content_link)
    return client.update(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         module_name=module_name,
                         name=name,
                         location=location,
                         tags=tags,
                         content_link=content_link)


def automation_module_delete(cmd, client,
                             resource_group_name,
                             automation_account_name,
                             module_name):
    return client.delete(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         module_name=module_name)


def automation_object_data_type_list_field(cmd, client,
                                           resource_group_name,
                                           automation_account_name,
                                           type_name,
                                           module_name=None):
    if resource_group_name is not None and automation_account_name is not None and module_name is not None and type_name is not None:
        return client.list_field_by_module_and_type(resource_group_name=resource_group_name,
                                                    automation_account_name=automation_account_name,
                                                    module_name=module_name,
                                                    type_name=type_name)
    return client.list_field_by_type(resource_group_name=resource_group_name,
                                     automation_account_name=automation_account_name,
                                     type_name=type_name)


def automation_field_list(cmd, client,
                          resource_group_name,
                          automation_account_name,
                          module_name,
                          type_name):
    return client.list_by_type(resource_group_name=resource_group_name,
                               automation_account_name=automation_account_name,
                               module_name=module_name,
                               type_name=type_name)


def automation_schedule_list(cmd, client,
                             resource_group_name,
                             automation_account_name):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name)


def automation_schedule_show(cmd, client,
                             resource_group_name,
                             automation_account_name,
                             schedule_name):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      schedule_name=schedule_name)


def automation_schedule_create(cmd, client,
                               resource_group_name,
                               automation_account_name,
                               schedule_name,
                               name,
                               start_time,
                               frequency,
                               description=None,
                               expiry_time=None,
                               interval=None,
                               time_zone=None,
                               advanced_schedule_week_days=None,
                               advanced_schedule_month_days=None,
                               advanced_schedule_monthly_occurrences=None):
    if isinstance(interval, str):
        interval = json.loads(interval)
    if isinstance(advanced_schedule_week_days, str):
        advanced_schedule_week_days = json.loads(advanced_schedule_week_days)
    if isinstance(advanced_schedule_month_days, str):
        advanced_schedule_month_days = json.loads(advanced_schedule_month_days)
    return client.create_or_update(resource_group_name=resource_group_name,
                                   automation_account_name=automation_account_name,
                                   schedule_name=schedule_name,
                                   name=name,
                                   description=description,
                                   start_time=start_time,
                                   expiry_time=expiry_time,
                                   interval=interval,
                                   frequency=frequency,
                                   time_zone=time_zone,
                                   week_days=advanced_schedule_week_days,
                                   month_days=advanced_schedule_month_days,
                                   monthly_occurrences=advanced_schedule_monthly_occurrences)


def automation_schedule_update(cmd, client,
                               resource_group_name,
                               automation_account_name,
                               schedule_name,
                               name=None,
                               description=None,
                               is_enabled=None):
    return client.update(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         schedule_name=schedule_name,
                         name=name,
                         description=description,
                         is_enabled=is_enabled)


def automation_schedule_delete(cmd, client,
                               resource_group_name,
                               automation_account_name,
                               schedule_name):
    return client.delete(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         schedule_name=schedule_name)


def automation_variable_list(cmd, client,
                             resource_group_name,
                             automation_account_name):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name)


def automation_variable_show(cmd, client,
                             resource_group_name,
                             automation_account_name,
                             variable_name):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      variable_name=variable_name)


def automation_variable_create(cmd, client,
                               resource_group_name,
                               automation_account_name,
                               variable_name,
                               name,
                               value=None,
                               description=None,
                               is_encrypted=None):
    return client.create_or_update(resource_group_name=resource_group_name,
                                   automation_account_name=automation_account_name,
                                   variable_name=variable_name,
                                   name=name,
                                   value=value,
                                   description=description,
                                   is_encrypted=is_encrypted)


def automation_variable_update(cmd, client,
                               resource_group_name,
                               automation_account_name,
                               variable_name,
                               name=None,
                               value=None,
                               description=None):
    return client.update(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         variable_name=variable_name,
                         name=name,
                         value=value,
                         description=description)


def automation_variable_delete(cmd, client,
                               resource_group_name,
                               automation_account_name,
                               variable_name):
    return client.delete(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         variable_name=variable_name)


def automation_webhook_list(cmd, client,
                            resource_group_name,
                            automation_account_name,
                            filter=None):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name,
                                             filter=filter)


def automation_webhook_show(cmd, client,
                            resource_group_name,
                            automation_account_name,
                            webhook_name):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      webhook_name=webhook_name)


def automation_webhook_create(cmd, client,
                              resource_group_name,
                              automation_account_name,
                              webhook_name,
                              name,
                              is_enabled=None,
                              uri=None,
                              expiry_time=None,
                              parameters=None,
                              runbook=None,
                              run_on=None):
    return client.create_or_update(resource_group_name=resource_group_name,
                                   automation_account_name=automation_account_name,
                                   webhook_name=webhook_name,
                                   name=name,
                                   is_enabled=is_enabled,
                                   uri=uri,
                                   expiry_time=expiry_time,
                                   parameters=parameters,
                                   runbook=runbook,
                                   run_on=run_on)


def automation_webhook_update(cmd, client,
                              resource_group_name,
                              automation_account_name,
                              webhook_name,
                              name=None,
                              is_enabled=None,
                              run_on=None,
                              parameters=None,
                              description=None):
    return client.update(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         webhook_name=webhook_name,
                         name=name,
                         is_enabled=is_enabled,
                         run_on=run_on,
                         parameters=parameters,
                         description=description)


def automation_webhook_delete(cmd, client,
                              resource_group_name,
                              automation_account_name,
                              webhook_name):
    return client.delete(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         webhook_name=webhook_name)


def automation_webhook_generate_uri(cmd, client,
                                    resource_group_name,
                                    automation_account_name):
    return client.generate_uri(resource_group_name=resource_group_name,
                               automation_account_name=automation_account_name)


def automation_watcher_list(cmd, client,
                            resource_group_name,
                            automation_account_name,
                            filter=None):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name,
                                             filter=filter)


def automation_watcher_show(cmd, client,
                            resource_group_name,
                            automation_account_name,
                            watcher_name):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      watcher_name=watcher_name)


def automation_watcher_create(cmd, client,
                              resource_group_name,
                              automation_account_name,
                              watcher_name,
                              tags=None,
                              location=None,
                              etag=None,
                              execution_frequency_in_seconds=None,
                              script_name=None,
                              script_parameters=None,
                              script_run_on=None,
                              description=None):
    return client.create_or_update(resource_group_name=resource_group_name,
                                   automation_account_name=automation_account_name,
                                   watcher_name=watcher_name,
                                   tags=tags,
                                   location=location,
                                   etag=etag,
                                   execution_frequency_in_seconds=execution_frequency_in_seconds,
                                   script_name=script_name,
                                   script_parameters=script_parameters,
                                   script_run_on=script_run_on,
                                   description=description)


def automation_watcher_update(cmd, client,
                              resource_group_name,
                              automation_account_name,
                              watcher_name,
                              name=None,
                              execution_frequency_in_seconds=None):
    return client.update(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         watcher_name=watcher_name,
                         name=name,
                         execution_frequency_in_seconds=execution_frequency_in_seconds)


def automation_watcher_delete(cmd, client,
                              resource_group_name,
                              automation_account_name,
                              watcher_name):
    return client.delete(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         watcher_name=watcher_name)


def automation_watcher_start(cmd, client,
                             resource_group_name,
                             automation_account_name,
                             watcher_name):
    return client.start(resource_group_name=resource_group_name,
                        automation_account_name=automation_account_name,
                        watcher_name=watcher_name)


def automation_watcher_stop(cmd, client,
                            resource_group_name,
                            automation_account_name,
                            watcher_name):
    return client.stop(resource_group_name=resource_group_name,
                       automation_account_name=automation_account_name,
                       watcher_name=watcher_name)


def automation_software_update_configuration_list(cmd, client,
                                                  resource_group_name,
                                                  automation_account_name,
                                                  client_request_id=None,
                                                  filter=None):
    return client.list(resource_group_name=resource_group_name,
                       automation_account_name=automation_account_name,
                       client_request_id=client_request_id,
                       filter=filter)


def automation_software_update_configuration_show(cmd, client,
                                                  resource_group_name,
                                                  automation_account_name,
                                                  software_update_configuration_name,
                                                  client_request_id=None):
    return client.get_by_name(resource_group_name=resource_group_name,
                              automation_account_name=automation_account_name,
                              software_update_configuration_name=software_update_configuration_name,
                              client_request_id=client_request_id)


def automation_software_update_configuration_create(cmd, client,
                                                    resource_group_name,
                                                    automation_account_name,
                                                    software_update_configuration_name,
                                                    update_configuration_operating_system,
                                                    client_request_id=None,
                                                    error=None,
                                                    tasks_post_task_parameters=None,
                                                    tasks_post_task_source=None,
                                                    tasks_pre_task_parameters=None,
                                                    tasks_pre_task_source=None,
                                                    schedule_info_start_time=None,
                                                    schedule_info_expiry_time=None,
                                                    schedule_info_expiry_time_offset_minutes=None,
                                                    schedule_info_is_enabled=None,
                                                    schedule_info_next_run=None,
                                                    schedule_info_next_run_offset_minutes=None,
                                                    schedule_info_interval=None,
                                                    schedule_info_frequency=None,
                                                    schedule_info_time_zone=None,
                                                    schedule_info_creation_time=None,
                                                    schedule_info_last_modified_time=None,
                                                    schedule_info_description=None,
                                                    schedule_info_advanced_schedule_week_days=None,
                                                    schedule_info_advanced_schedule_month_days=None,
                                                    schedule_info_advanced_schedule_monthly_occurrences=None,
                                                    update_configuration_windows=None,
                                                    update_configuration_linux=None,
                                                    update_configuration_duration=None,
                                                    update_configuration_azure_virtual_machines=None,
                                                    update_configuration_non_azure_computer_names=None,
                                                    update_configuration_targets_azure_queries=None,
                                                    update_configuration_targets_non_azure_queries=None):
    if isinstance(schedule_info_advanced_schedule_week_days, str):
        schedule_info_advanced_schedule_week_days = json.loads(schedule_info_advanced_schedule_week_days)
    if isinstance(schedule_info_advanced_schedule_month_days, str):
        schedule_info_advanced_schedule_month_days = json.loads(schedule_info_advanced_schedule_month_days)
    if isinstance(update_configuration_azure_virtual_machines, str):
        update_configuration_azure_virtual_machines = json.loads(update_configuration_azure_virtual_machines)
    if isinstance(update_configuration_non_azure_computer_names, str):
        update_configuration_non_azure_computer_names = json.loads(update_configuration_non_azure_computer_names)
    if isinstance(update_configuration_targets_azure_queries, str):
        update_configuration_targets_azure_queries = json.loads(update_configuration_targets_azure_queries)
    return client.create(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         software_update_configuration_name=software_update_configuration_name,
                         client_request_id=client_request_id,
                         error=error,
                         parameters=tasks_post_task_parameters,
                         source=tasks_post_task_source,
                         task_properties_parameters=tasks_pre_task_parameters,
                         task_properties_source=tasks_pre_task_source,
                         start_time=schedule_info_start_time,
                         expiry_time=schedule_info_expiry_time,
                         expiry_time_offset_minutes=schedule_info_expiry_time_offset_minutes,
                         is_enabled=schedule_info_is_enabled,
                         next_run=schedule_info_next_run,
                         next_run_offset_minutes=schedule_info_next_run_offset_minutes,
                         interval=schedule_info_interval,
                         frequency=schedule_info_frequency,
                         time_zone=schedule_info_time_zone,
                         creation_time=schedule_info_creation_time,
                         last_modified_time=schedule_info_last_modified_time,
                         description=schedule_info_description,
                         week_days=schedule_info_advanced_schedule_week_days,
                         month_days=schedule_info_advanced_schedule_month_days,
                         monthly_occurrences=schedule_info_advanced_schedule_monthly_occurrences,
                         operating_system=update_configuration_operating_system,
                         windows=update_configuration_windows,
                         linux=update_configuration_linux,
                         duration=update_configuration_duration,
                         azure_virtual_machines=update_configuration_azure_virtual_machines,
                         non_azure_computer_names=update_configuration_non_azure_computer_names,
                         azure_queries=update_configuration_targets_azure_queries,
                         non_azure_queries=update_configuration_targets_non_azure_queries)


def automation_software_update_configuration_delete(cmd, client,
                                                    resource_group_name,
                                                    automation_account_name,
                                                    software_update_configuration_name,
                                                    client_request_id=None):
    return client.delete(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         software_update_configuration_name=software_update_configuration_name,
                         client_request_id=client_request_id)


def automation_software_update_configuration_run_list(cmd, client,
                                                      resource_group_name,
                                                      automation_account_name,
                                                      client_request_id=None,
                                                      filter=None,
                                                      skip=None,
                                                      top=None):
    return client.list(resource_group_name=resource_group_name,
                       automation_account_name=automation_account_name,
                       client_request_id=client_request_id,
                       filter=filter,
                       skip=skip,
                       top=top)


def automation_software_update_configuration_run_show(cmd, client,
                                                      resource_group_name,
                                                      automation_account_name,
                                                      software_update_configuration_run_id,
                                                      client_request_id=None):
    return client.get_by_id(resource_group_name=resource_group_name,
                            automation_account_name=automation_account_name,
                            software_update_configuration_run_id=software_update_configuration_run_id,
                            client_request_id=client_request_id)


def automation_software_update_configuration_machine_run_list(cmd, client,
                                                              resource_group_name,
                                                              automation_account_name,
                                                              client_request_id=None,
                                                              filter=None,
                                                              skip=None,
                                                              top=None):
    return client.list(resource_group_name=resource_group_name,
                       automation_account_name=automation_account_name,
                       client_request_id=client_request_id,
                       filter=filter,
                       skip=skip,
                       top=top)


def automation_software_update_configuration_machine_run_show(cmd, client,
                                                              resource_group_name,
                                                              automation_account_name,
                                                              software_update_configuration_machine_run_id,
                                                              client_request_id=None):
    return client.get_by_id(resource_group_name=resource_group_name,
                            automation_account_name=automation_account_name,
                            software_update_configuration_machine_run_id=software_update_configuration_machine_run_id,
                            client_request_id=client_request_id)


def automation_source_control_list(cmd, client,
                                   resource_group_name,
                                   automation_account_name,
                                   filter=None):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name,
                                             filter=filter)


def automation_source_control_show(cmd, client,
                                   resource_group_name,
                                   automation_account_name,
                                   source_control_name):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      source_control_name=source_control_name)


def automation_source_control_create(cmd, client,
                                     resource_group_name,
                                     automation_account_name,
                                     source_control_name,
                                     repo_url=None,
                                     branch=None,
                                     folder_path=None,
                                     auto_sync=None,
                                     publish_runbook=None,
                                     source_type=None,
                                     security_token=None,
                                     description=None):
    return client.create_or_update(resource_group_name=resource_group_name,
                                   automation_account_name=automation_account_name,
                                   source_control_name=source_control_name,
                                   repo_url=repo_url,
                                   branch=branch,
                                   folder_path=folder_path,
                                   auto_sync=auto_sync,
                                   publish_runbook=publish_runbook,
                                   source_type=source_type,
                                   security_token=security_token,
                                   description=description)


def automation_source_control_update(cmd, client,
                                     resource_group_name,
                                     automation_account_name,
                                     source_control_name,
                                     branch=None,
                                     folder_path=None,
                                     auto_sync=None,
                                     publish_runbook=None,
                                     security_token=None,
                                     description=None):
    return client.update(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         source_control_name=source_control_name,
                         branch=branch,
                         folder_path=folder_path,
                         auto_sync=auto_sync,
                         publish_runbook=publish_runbook,
                         security_token=security_token,
                         description=description)


def automation_source_control_delete(cmd, client,
                                     resource_group_name,
                                     automation_account_name,
                                     source_control_name):
    return client.delete(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         source_control_name=source_control_name)


def automation_source_control_sync_job_list(cmd, client,
                                            resource_group_name,
                                            automation_account_name,
                                            source_control_name,
                                            filter=None):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name,
                                             source_control_name=source_control_name,
                                             filter=filter)


def automation_source_control_sync_job_show(cmd, client,
                                            resource_group_name,
                                            automation_account_name,
                                            source_control_name,
                                            source_control_sync_job_id):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      source_control_name=source_control_name,
                      source_control_sync_job_id=source_control_sync_job_id)


def automation_source_control_sync_job_create(cmd, client,
                                              resource_group_name,
                                              automation_account_name,
                                              source_control_name,
                                              source_control_sync_job_id,
                                              commit_id):
    return client.create(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         source_control_name=source_control_name,
                         source_control_sync_job_id=source_control_sync_job_id,
                         commit_id=commit_id)


def automation_source_control_sync_job_stream_list(cmd, client,
                                                   resource_group_name,
                                                   automation_account_name,
                                                   source_control_name,
                                                   source_control_sync_job_id,
                                                   filter=None):
    return client.list_by_sync_job(resource_group_name=resource_group_name,
                                   automation_account_name=automation_account_name,
                                   source_control_name=source_control_name,
                                   source_control_sync_job_id=source_control_sync_job_id,
                                   filter=filter)


def automation_source_control_sync_job_stream_show(cmd, client,
                                                   resource_group_name,
                                                   automation_account_name,
                                                   source_control_name,
                                                   source_control_sync_job_id,
                                                   stream_id):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      source_control_name=source_control_name,
                      source_control_sync_job_id=source_control_sync_job_id,
                      stream_id=stream_id)


def automation_job_list(cmd, client,
                        resource_group_name,
                        automation_account_name,
                        filter=None,
                        client_request_id=None):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name,
                                             filter=filter,
                                             client_request_id=client_request_id)


def automation_job_show(cmd, client,
                        resource_group_name,
                        automation_account_name,
                        job_name,
                        client_request_id=None):
    if resource_group_name is not None and automation_account_name is not None and job_name is not None:
        return client.get_output(resource_group_name=resource_group_name,
                                 automation_account_name=automation_account_name,
                                 job_name=job_name,
                                 client_request_id=client_request_id)
    elif resource_group_name is not None and automation_account_name is not None and job_name is not None:
        return client.get_runbook_content(resource_group_name=resource_group_name,
                                          automation_account_name=automation_account_name,
                                          job_name=job_name,
                                          client_request_id=client_request_id)
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      job_name=job_name,
                      client_request_id=client_request_id)


def automation_job_create(cmd, client,
                          resource_group_name,
                          automation_account_name,
                          job_name,
                          client_request_id=None,
                          runbook=None,
                          parameters=None,
                          run_on=None):
    return client.create(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         job_name=job_name,
                         client_request_id=client_request_id,
                         runbook=runbook,
                         parameters=parameters,
                         run_on=run_on)


def automation_job_resume(cmd, client,
                          resource_group_name,
                          automation_account_name,
                          job_name,
                          client_request_id=None):
    return client.resume(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         job_name=job_name,
                         client_request_id=client_request_id)


def automation_job_stop(cmd, client,
                        resource_group_name,
                        automation_account_name,
                        job_name,
                        client_request_id=None):
    return client.stop(resource_group_name=resource_group_name,
                       automation_account_name=automation_account_name,
                       job_name=job_name,
                       client_request_id=client_request_id)


def automation_job_suspend(cmd, client,
                           resource_group_name,
                           automation_account_name,
                           job_name,
                           client_request_id=None):
    return client.suspend(resource_group_name=resource_group_name,
                          automation_account_name=automation_account_name,
                          job_name=job_name,
                          client_request_id=client_request_id)


def automation_job_stream_list(cmd, client,
                               resource_group_name,
                               automation_account_name,
                               job_name,
                               filter=None,
                               client_request_id=None):
    return client.list_by_job(resource_group_name=resource_group_name,
                              automation_account_name=automation_account_name,
                              job_name=job_name,
                              filter=filter,
                              client_request_id=client_request_id)


def automation_job_stream_show(cmd, client,
                               resource_group_name,
                               automation_account_name,
                               job_name,
                               job_stream_id,
                               client_request_id=None):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      job_name=job_name,
                      job_stream_id=job_stream_id,
                      client_request_id=client_request_id)


def automation_agent_registration_information_show(cmd, client,
                                                   resource_group_name,
                                                   automation_account_name):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name)


def automation_agent_registration_information_regenerate_key(cmd, client,
                                                             resource_group_name,
                                                             automation_account_name,
                                                             key_name):
    return client.regenerate_key(resource_group_name=resource_group_name,
                                 automation_account_name=automation_account_name,
                                 key_name=key_name)


def automation_dsc_node_list(cmd, client,
                             resource_group_name,
                             automation_account_name,
                             filter=None,
                             skip=None,
                             top=None,
                             inlinecount=None):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name,
                                             filter=filter,
                                             skip=skip,
                                             top=top,
                                             inlinecount=inlinecount)


def automation_dsc_node_show(cmd, client,
                             resource_group_name,
                             automation_account_name,
                             node_id):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      node_id=node_id)


def automation_dsc_node_update(cmd, client,
                               resource_group_name,
                               automation_account_name,
                               node_id,
                               node_configuration_name=None):
    return client.update(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         node_id=node_id,
                         dsc_node_update_parameters_node_id=node_id,
                         name=node_configuration_name)


def automation_dsc_node_delete(cmd, client,
                               resource_group_name,
                               automation_account_name,
                               node_id):
    return client.delete(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         node_id=node_id)


def automation_node_report_list(cmd, client,
                                resource_group_name,
                                automation_account_name,
                                node_id,
                                filter=None):
    return client.list_by_node(resource_group_name=resource_group_name,
                               automation_account_name=automation_account_name,
                               node_id=node_id,
                               filter=filter)


def automation_node_report_show(cmd, client,
                                resource_group_name,
                                automation_account_name,
                                node_id,
                                report_id):
    if resource_group_name is not None and automation_account_name is not None and node_id is not None and report_id is not None:
        return client.get(resource_group_name=resource_group_name,
                          automation_account_name=automation_account_name,
                          node_id=node_id,
                          report_id=report_id)
    return client.get_content(resource_group_name=resource_group_name,
                              automation_account_name=automation_account_name,
                              node_id=node_id,
                              report_id=report_id)


def automation_dsc_compilation_job_list(cmd, client,
                                        resource_group_name,
                                        automation_account_name,
                                        filter=None):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name,
                                             filter=filter)


def automation_dsc_compilation_job_show(cmd, client,
                                        resource_group_name,
                                        automation_account_name,
                                        job_id=None,
                                        job_stream_id=None,
                                        compilation_job_name=None):
    if resource_group_name is not None and automation_account_name is not None and job_id is not None and job_stream_id is not None:
        return client.get_stream(resource_group_name=resource_group_name,
                                 automation_account_name=automation_account_name,
                                 job_id=job_id,
                                 job_stream_id=job_stream_id)
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      compilation_job_name=compilation_job_name)


def automation_dsc_compilation_job_create(cmd, client,
                                          resource_group_name,
                                          automation_account_name,
                                          compilation_job_name,
                                          configuration,
                                          name=None,
                                          location=None,
                                          tags=None,
                                          parameters=None,
                                          increment_node_configuration_build=None):
    return client.begin_create(resource_group_name=resource_group_name,
                               automation_account_name=automation_account_name,
                               compilation_job_name=compilation_job_name,
                               name=name,
                               location=location,
                               tags=tags,
                               configuration=configuration,
                               parameters=parameters,
                               increment_node_configuration_build=increment_node_configuration_build)


def automation_dsc_compilation_job_stream_list(cmd, client,
                                               resource_group_name,
                                               automation_account_name,
                                               job_id):
    return client.list_by_job(resource_group_name=resource_group_name,
                              automation_account_name=automation_account_name,
                              job_id=job_id)


def automation_dsc_node_configuration_list(cmd, client,
                                           resource_group_name,
                                           automation_account_name,
                                           filter=None,
                                           skip=None,
                                           top=None,
                                           inlinecount=None):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name,
                                             filter=filter,
                                             skip=skip,
                                             top=top,
                                             inlinecount=inlinecount)


def automation_dsc_node_configuration_show(cmd, client,
                                           resource_group_name,
                                           automation_account_name,
                                           node_configuration_name):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      node_configuration_name=node_configuration_name)


def automation_dsc_node_configuration_create(cmd, client,
                                             resource_group_name,
                                             automation_account_name,
                                             node_configuration_name,
                                             name=None,
                                             tags=None,
                                             source=None,
                                             configuration=None,
                                             increment_node_configuration_build=None):
    if isinstance(source, str):
        source = json.loads(source)
    return client.begin_create_or_update(resource_group_name=resource_group_name,
                                         automation_account_name=automation_account_name,
                                         node_configuration_name=node_configuration_name,
                                         name=name,
                                         tags=tags,
                                         source=source,
                                         configuration=configuration,
                                         increment_node_configuration_build=increment_node_configuration_build)


def automation_dsc_node_configuration_update(cmd, client,
                                             resource_group_name,
                                             automation_account_name,
                                             node_configuration_name,
                                             name=None,
                                             tags=None,
                                             source=None,
                                             configuration=None,
                                             increment_node_configuration_build=None):
    if isinstance(source, str):
        source = json.loads(source)
    return client.begin_create_or_update(resource_group_name=resource_group_name,
                                         automation_account_name=automation_account_name,
                                         node_configuration_name=node_configuration_name,
                                         name=name,
                                         tags=tags,
                                         source=source,
                                         configuration=configuration,
                                         increment_node_configuration_build=increment_node_configuration_build)


def automation_dsc_node_configuration_delete(cmd, client,
                                             resource_group_name,
                                             automation_account_name,
                                             node_configuration_name):
    return client.delete(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         node_configuration_name=node_configuration_name)


def automation_node_count_information_show(cmd, client,
                                           resource_group_name,
                                           automation_account_name,
                                           count_type):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      count_type=count_type)


def automation_runbook_draft_show(cmd, client,
                                  resource_group_name,
                                  automation_account_name,
                                  runbook_name):
    if resource_group_name is not None and automation_account_name is not None and runbook_name is not None:
        return client.get_content(resource_group_name=resource_group_name,
                                  automation_account_name=automation_account_name,
                                  runbook_name=runbook_name)
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      runbook_name=runbook_name)


def automation_runbook_draft_replace_content(cmd, client,
                                             resource_group_name,
                                             automation_account_name,
                                             runbook_name,
                                             runbook_content):
    return client.begin_replace_content(resource_group_name=resource_group_name,
                                        automation_account_name=automation_account_name,
                                        runbook_name=runbook_name,
                                        runbook_content=runbook_content)


def automation_runbook_draft_undo_edit(cmd, client,
                                       resource_group_name,
                                       automation_account_name,
                                       runbook_name):
    return client.undo_edit(resource_group_name=resource_group_name,
                            automation_account_name=automation_account_name,
                            runbook_name=runbook_name)


def automation_runbook_list(cmd, client,
                            resource_group_name,
                            automation_account_name):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name)


def automation_runbook_show(cmd, client,
                            resource_group_name,
                            automation_account_name,
                            runbook_name):
    if resource_group_name is not None and automation_account_name is not None and runbook_name is not None:
        return client.get_content(resource_group_name=resource_group_name,
                                  automation_account_name=automation_account_name,
                                  runbook_name=runbook_name)
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      runbook_name=runbook_name)


def automation_runbook_create(cmd, client,
                              resource_group_name,
                              automation_account_name,
                              runbook_name,
                              runbook_type,
                              name=None,
                              location=None,
                              tags=None,
                              log_verbose=None,
                              log_progress=None,
                              draft=None,
                              publish_content_link=None,
                              description=None,
                              log_activity_trace=None):
    if isinstance(draft, str):
        draft = json.loads(draft)
    if isinstance(publish_content_link, str):
        publish_content_link = json.loads(publish_content_link)
    return client.create_or_update(resource_group_name=resource_group_name,
                                   automation_account_name=automation_account_name,
                                   runbook_name=runbook_name,
                                   name=name,
                                   location=location,
                                   tags=tags,
                                   log_verbose=log_verbose,
                                   log_progress=log_progress,
                                   runbook_type=runbook_type,
                                   draft=draft,
                                   publish_content_link=publish_content_link,
                                   description=description,
                                   log_activity_trace=log_activity_trace)


def automation_runbook_update(cmd, client,
                              resource_group_name,
                              automation_account_name,
                              runbook_name,
                              name=None,
                              location=None,
                              tags=None,
                              description=None,
                              log_verbose=None,
                              log_progress=None,
                              log_activity_trace=None):
    return client.update(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         runbook_name=runbook_name,
                         name=name,
                         location=location,
                         tags=tags,
                         description=description,
                         log_verbose=log_verbose,
                         log_progress=log_progress,
                         log_activity_trace=log_activity_trace)


def automation_runbook_delete(cmd, client,
                              resource_group_name,
                              automation_account_name,
                              runbook_name):
    return client.delete(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         runbook_name=runbook_name)


def automation_runbook_publish(cmd, client,
                               resource_group_name,
                               automation_account_name,
                               runbook_name):
    return client.begin_publish(resource_group_name=resource_group_name,
                                automation_account_name=automation_account_name,
                                runbook_name=runbook_name)


def automation_test_job_stream_list(cmd, client,
                                    resource_group_name,
                                    automation_account_name,
                                    runbook_name,
                                    filter=None):
    return client.list_by_test_job(resource_group_name=resource_group_name,
                                   automation_account_name=automation_account_name,
                                   runbook_name=runbook_name,
                                   filter=filter)


def automation_test_job_stream_show(cmd, client,
                                    resource_group_name,
                                    automation_account_name,
                                    runbook_name,
                                    job_stream_id):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      runbook_name=runbook_name,
                      job_stream_id=job_stream_id)


def automation_test_job_show(cmd, client,
                             resource_group_name,
                             automation_account_name,
                             runbook_name):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      runbook_name=runbook_name)


def automation_test_job_create(cmd, client,
                               resource_group_name,
                               automation_account_name,
                               runbook_name,
                               parameters=None,
                               run_on=None):
    return client.create(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         runbook_name=runbook_name,
                         parameters=parameters,
                         run_on=run_on)


def automation_test_job_resume(cmd, client,
                               resource_group_name,
                               automation_account_name,
                               runbook_name):
    return client.resume(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         runbook_name=runbook_name)


def automation_test_job_stop(cmd, client,
                             resource_group_name,
                             automation_account_name,
                             runbook_name):
    return client.stop(resource_group_name=resource_group_name,
                       automation_account_name=automation_account_name,
                       runbook_name=runbook_name)


def automation_test_job_suspend(cmd, client,
                                resource_group_name,
                                automation_account_name,
                                runbook_name):
    return client.suspend(resource_group_name=resource_group_name,
                          automation_account_name=automation_account_name,
                          runbook_name=runbook_name)


def automation_python2_package_list(cmd, client,
                                    resource_group_name,
                                    automation_account_name):
    return client.list_by_automation_account(resource_group_name=resource_group_name,
                                             automation_account_name=automation_account_name)


def automation_python2_package_show(cmd, client,
                                    resource_group_name,
                                    automation_account_name,
                                    package_name):
    return client.get(resource_group_name=resource_group_name,
                      automation_account_name=automation_account_name,
                      package_name=package_name)


def automation_python2_package_create(cmd, client,
                                      resource_group_name,
                                      automation_account_name,
                                      package_name,
                                      content_link,
                                      tags=None):
    if isinstance(content_link, str):
        content_link = json.loads(content_link)
    return client.create_or_update(resource_group_name=resource_group_name,
                                   automation_account_name=automation_account_name,
                                   package_name=package_name,
                                   tags=tags,
                                   content_link=content_link)


def automation_python2_package_update(cmd, client,
                                      resource_group_name,
                                      automation_account_name,
                                      package_name,
                                      tags=None):
    return client.update(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         package_name=package_name,
                         tags=tags)


def automation_python2_package_delete(cmd, client,
                                      resource_group_name,
                                      automation_account_name,
                                      package_name):
    return client.delete(resource_group_name=resource_group_name,
                         automation_account_name=automation_account_name,
                         package_name=package_name)
