# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines

import json


def sentinel_alert_rule_list(cmd, client,
                             resource_group_name,
                             workspace_name):
    return client.list(resource_group_name=resource_group_name,
                       workspace_name=workspace_name)


def sentinel_alert_rule_show(cmd, client,
                             resource_group_name,
                             workspace_name,
                             rule_id,
                             action_id=None):
    if resource_group_name is not None and workspace_name is not None and rule_id is not None and action_id is not None:
        return client.get_action(resource_group_name=resource_group_name,
                                 workspace_name=workspace_name,
                                 rule_id=rule_id,
                                 action_id=action_id)
    return client.get(resource_group_name=resource_group_name,
                      workspace_name=workspace_name,
                      rule_id=rule_id)


def sentinel_alert_rule_create(cmd, client,
                               resource_group_name,
                               workspace_name,
                               rule_id,
                               action_id=None,
                               etag=None,
                               logic_app_resource_id=None,
                               trigger_uri=None,
                               kind=None):
    if resource_group_name is not None and workspace_name is not None and rule_id is not None and action_id is not None and _action is not None:
        return client.create_or_update_action(resource_group_name=resource_group_name,
                                              workspace_name=workspace_name,
                                              rule_id=rule_id,
                                              action_id=action_id,
                                              etag=etag,
                                              logic_app_resource_id=logic_app_resource_id,
                                              trigger_uri=trigger_uri)
    return client.create_or_update(resource_group_name=resource_group_name,
                                   workspace_name=workspace_name,
                                   rule_id=rule_id,
                                   etag=etag,
                                   kind=kind)


def sentinel_alert_rule_delete(cmd, client,
                               resource_group_name,
                               workspace_name,
                               rule_id,
                               action_id=None):
    if resource_group_name is not None and workspace_name is not None and rule_id is not None and action_id is not None:
        return client.delete_action(resource_group_name=resource_group_name,
                                    workspace_name=workspace_name,
                                    rule_id=rule_id,
                                    action_id=action_id)
    return client.delete(resource_group_name=resource_group_name,
                         workspace_name=workspace_name,
                         rule_id=rule_id)


def sentinel_action_list(cmd, client,
                         resource_group_name,
                         workspace_name,
                         rule_id):
    return client.list_by_alert_rule(resource_group_name=resource_group_name,
                                     workspace_name=workspace_name,
                                     rule_id=rule_id)


def sentinel_alert_rule_template_list(cmd, client,
                                      resource_group_name,
                                      workspace_name):
    return client.list(resource_group_name=resource_group_name,
                       workspace_name=workspace_name)


def sentinel_alert_rule_template_show(cmd, client,
                                      resource_group_name,
                                      workspace_name,
                                      alert_rule_template_id):
    return client.get(resource_group_name=resource_group_name,
                      workspace_name=workspace_name,
                      alert_rule_template_id=alert_rule_template_id)


def sentinel_bookmark_list(cmd, client,
                           resource_group_name,
                           workspace_name):
    return client.list(resource_group_name=resource_group_name,
                       workspace_name=workspace_name)


def sentinel_bookmark_show(cmd, client,
                           resource_group_name,
                           workspace_name,
                           bookmark_id):
    return client.get(resource_group_name=resource_group_name,
                      workspace_name=workspace_name,
                      bookmark_id=bookmark_id)


def sentinel_bookmark_create(cmd, client,
                             resource_group_name,
                             workspace_name,
                             bookmark_id,
                             etag=None,
                             created=None,
                             created_by=None,
                             display_name=None,
                             labels=None,
                             notes=None,
                             query=None,
                             query_result=None,
                             updated=None,
                             updated_by=None,
                             incident_info=None):
    if isinstance(labels, str):
        labels = json.loads(labels)
    return client.create_or_update(resource_group_name=resource_group_name,
                                   workspace_name=workspace_name,
                                   bookmark_id=bookmark_id,
                                   etag=etag,
                                   created=created,
                                   created_by=created_by,
                                   display_name=display_name,
                                   labels=labels,
                                   notes=notes,
                                   query=query,
                                   query_result=query_result,
                                   updated=updated,
                                   updated_by=updated_by,
                                   incident_info=incident_info)


def sentinel_bookmark_update(cmd, client,
                             resource_group_name,
                             workspace_name,
                             bookmark_id,
                             etag=None,
                             created=None,
                             created_by=None,
                             display_name=None,
                             labels=None,
                             notes=None,
                             query=None,
                             query_result=None,
                             updated=None,
                             updated_by=None,
                             incident_info=None):
    if isinstance(labels, str):
        labels = json.loads(labels)
    return client.create_or_update(resource_group_name=resource_group_name,
                                   workspace_name=workspace_name,
                                   bookmark_id=bookmark_id,
                                   etag=etag,
                                   created=created,
                                   created_by=created_by,
                                   display_name=display_name,
                                   labels=labels,
                                   notes=notes,
                                   query=query,
                                   query_result=query_result,
                                   updated=updated,
                                   updated_by=updated_by,
                                   incident_info=incident_info)


def sentinel_bookmark_delete(cmd, client,
                             resource_group_name,
                             workspace_name,
                             bookmark_id):
    return client.delete(resource_group_name=resource_group_name,
                         workspace_name=workspace_name,
                         bookmark_id=bookmark_id)


def sentinel_data_connector_list(cmd, client,
                                 resource_group_name,
                                 workspace_name):
    return client.list(resource_group_name=resource_group_name,
                       workspace_name=workspace_name)


def sentinel_data_connector_show(cmd, client,
                                 resource_group_name,
                                 workspace_name,
                                 data_connector_id):
    return client.get(resource_group_name=resource_group_name,
                      workspace_name=workspace_name,
                      data_connector_id=data_connector_id)


def sentinel_data_connector_create(cmd, client,
                                   resource_group_name,
                                   workspace_name,
                                   data_connector_id,
                                   etag=None,
                                   kind=None):
    return client.create_or_update(resource_group_name=resource_group_name,
                                   workspace_name=workspace_name,
                                   data_connector_id=data_connector_id,
                                   etag=etag,
                                   kind=kind)


def sentinel_data_connector_update(cmd, client,
                                   resource_group_name,
                                   workspace_name,
                                   data_connector_id,
                                   etag=None,
                                   kind=None):
    return client.create_or_update(resource_group_name=resource_group_name,
                                   workspace_name=workspace_name,
                                   data_connector_id=data_connector_id,
                                   etag=etag,
                                   kind=kind)


def sentinel_data_connector_delete(cmd, client,
                                   resource_group_name,
                                   workspace_name,
                                   data_connector_id):
    return client.delete(resource_group_name=resource_group_name,
                         workspace_name=workspace_name,
                         data_connector_id=data_connector_id)


def sentinel_incident_list(cmd, client,
                           resource_group_name,
                           workspace_name,
                           filter=None,
                           orderby=None,
                           top=None,
                           skip_token=None):
    return client.list(resource_group_name=resource_group_name,
                       workspace_name=workspace_name,
                       filter=filter,
                       orderby=orderby,
                       top=top,
                       skip_token=skip_token)


def sentinel_incident_show(cmd, client,
                           resource_group_name,
                           workspace_name,
                           incident_id):
    return client.get(resource_group_name=resource_group_name,
                      workspace_name=workspace_name,
                      incident_id=incident_id)


def sentinel_incident_create(cmd, client,
                             resource_group_name,
                             workspace_name,
                             incident_id,
                             etag=None,
                             classification=None,
                             classification_comment=None,
                             classification_reason=None,
                             description=None,
                             first_activity_time_utc=None,
                             labels=None,
                             last_activity_time_utc=None,
                             owner=None,
                             severity=None,
                             status=None,
                             title=None):
    return client.create_or_update(resource_group_name=resource_group_name,
                                   workspace_name=workspace_name,
                                   incident_id=incident_id,
                                   etag=etag,
                                   classification=classification,
                                   classification_comment=classification_comment,
                                   classification_reason=classification_reason,
                                   description=description,
                                   first_activity_time_utc=first_activity_time_utc,
                                   labels=labels,
                                   last_activity_time_utc=last_activity_time_utc,
                                   owner=owner,
                                   severity=severity,
                                   status=status,
                                   title=title)


def sentinel_incident_update(cmd, client,
                             resource_group_name,
                             workspace_name,
                             incident_id,
                             etag=None,
                             classification=None,
                             classification_comment=None,
                             classification_reason=None,
                             description=None,
                             first_activity_time_utc=None,
                             labels=None,
                             last_activity_time_utc=None,
                             owner=None,
                             severity=None,
                             status=None,
                             title=None):
    return client.create_or_update(resource_group_name=resource_group_name,
                                   workspace_name=workspace_name,
                                   incident_id=incident_id,
                                   etag=etag,
                                   classification=classification,
                                   classification_comment=classification_comment,
                                   classification_reason=classification_reason,
                                   description=description,
                                   first_activity_time_utc=first_activity_time_utc,
                                   labels=labels,
                                   last_activity_time_utc=last_activity_time_utc,
                                   owner=owner,
                                   severity=severity,
                                   status=status,
                                   title=title)


def sentinel_incident_delete(cmd, client,
                             resource_group_name,
                             workspace_name,
                             incident_id):
    return client.delete(resource_group_name=resource_group_name,
                         workspace_name=workspace_name,
                         incident_id=incident_id)


def sentinel_incident_comment_list(cmd, client,
                                   resource_group_name,
                                   workspace_name,
                                   incident_id,
                                   filter=None,
                                   orderby=None,
                                   top=None,
                                   skip_token=None):
    return client.list_by_incident(resource_group_name=resource_group_name,
                                   workspace_name=workspace_name,
                                   incident_id=incident_id,
                                   filter=filter,
                                   orderby=orderby,
                                   top=top,
                                   skip_token=skip_token)


def sentinel_incident_comment_show(cmd, client,
                                   resource_group_name,
                                   workspace_name,
                                   incident_id,
                                   incident_comment_id):
    return client.get_comment(resource_group_name=resource_group_name,
                              workspace_name=workspace_name,
                              incident_id=incident_id,
                              incident_comment_id=incident_comment_id)


def sentinel_incident_comment_create(cmd, client,
                                     resource_group_name,
                                     workspace_name,
                                     incident_id,
                                     incident_comment_id,
                                     message=None):
    return client.create_comment(resource_group_name=resource_group_name,
                                 workspace_name=workspace_name,
                                 incident_id=incident_id,
                                 incident_comment_id=incident_comment_id,
                                 message=message)
